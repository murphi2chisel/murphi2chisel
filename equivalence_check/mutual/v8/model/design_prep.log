
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.26+53 (git sha1 8216b23fb, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `design_prep.ys' --

1. Executing RTLIL frontend.
Input filename: design.il

2. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module system.
Found 0 SCCs in module Try_1.
Found 0 SCCs in module Try.
Found 0 SCCs in module Init.
Found 0 SCCs in module Idle_1.
Found 0 SCCs in module Idle.
Found 0 SCCs in module Exit_1.
Found 0 SCCs in module Exit.
Found 0 SCCs in module Crit_1.
Found 0 SCCs in module Crit.
Found 0 SCCs.

3. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

5. Executing ASYNC2SYNC pass.

6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \system..
Finding unused cells or wires in module \Try_1..
Finding unused cells or wires in module \Try..
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \Idle_1..
Finding unused cells or wires in module \Idle..
Finding unused cells or wires in module \Exit_1..
Finding unused cells or wires in module \Exit..
Finding unused cells or wires in module \Crit_1..
Finding unused cells or wires in module \Crit..

7. Executing FORMALFF pass.

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Crit..
Finding unused cells or wires in module \Crit_1..
Finding unused cells or wires in module \Exit..
Finding unused cells or wires in module \Exit_1..
Finding unused cells or wires in module \Idle..
Finding unused cells or wires in module \Idle_1..
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \Try..
Finding unused cells or wires in module \Try_1..
Finding unused cells or wires in module \system..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module Crit...
Checking module Crit_1...
Checking module Exit...
Checking module Exit_1...
Checking module Idle...
Checking module Idle_1...
Checking module Init...
Checking module Try...
Checking module Try_1...
Checking module system...
Found and reported 0 problems.

10. Executing SETUNDEF pass (replace undef values with defined constants).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Crit.
Optimizing module Crit_1.
Optimizing module Exit.
Optimizing module Exit_1.
Optimizing module Idle.
Optimizing module Idle_1.
Optimizing module Init.
Optimizing module Try.
Optimizing module Try_1.
Optimizing module system.

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Crit'.
Finding identical cells in module `\Crit_1'.
Finding identical cells in module `\Exit'.
Finding identical cells in module `\Exit_1'.
Finding identical cells in module `\Idle'.
Finding identical cells in module `\Idle_1'.
Finding identical cells in module `\Init'.
Finding identical cells in module `\Try'.
Finding identical cells in module `\Try_1'.
Finding identical cells in module `\system'.
Removed a total of 0 cells.

11.3. Executing OPT_DFF pass (perform DFF optimizations).

11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Crit..
Finding unused cells or wires in module \Crit_1..
Finding unused cells or wires in module \Exit..
Finding unused cells or wires in module \Exit_1..
Finding unused cells or wires in module \Idle..
Finding unused cells or wires in module \Idle_1..
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \Try..
Finding unused cells or wires in module \Try_1..
Finding unused cells or wires in module \system..

11.5. Finished fast OPT passes.

12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Crit..
Finding unused cells or wires in module \Crit_1..
Finding unused cells or wires in module \Exit..
Finding unused cells or wires in module \Exit_1..
Finding unused cells or wires in module \Idle..
Finding unused cells or wires in module \Idle_1..
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \Try..
Finding unused cells or wires in module \Try_1..
Finding unused cells or wires in module \system..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

13. Executing RTLIL backend.
Output filename: ../model/design_prep.il

End of script. Logfile hash: e9b0e1e645, CPU: user 0.01s system 0.01s, MEM: 11.70 MB peak
Yosys 0.26+53 (git sha1 8216b23fb, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 24% 4x opt_clean (0 sec), 11% 1x opt_expr (0 sec), ...

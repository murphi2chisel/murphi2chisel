
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.26+53 (git sha1 8216b23fb, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `design_prep.ys' --

1. Executing RTLIL frontend.
Input filename: design.il

2. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module system.
Found 0 SCCs in module Store_3.
Found 0 SCCs in module Store_2.
Found 0 SCCs in module Store_1.
Found 0 SCCs in module Store.
Found 0 SCCs in module SendReqS_1.
Found 0 SCCs in module SendReqS.
Found 0 SCCs in module SendReqE_1.
Found 0 SCCs in module SendReqE.
Found 0 SCCs in module SendInv_1.
Found 0 SCCs in module SendInvAck_1.
Found 0 SCCs in module SendInvAck.
Found 0 SCCs in module SendInv.
Found 0 SCCs in module SendGntS_1.
Found 0 SCCs in module SendGntS.
Found 0 SCCs in module SendGntE_1.
Found 0 SCCs in module SendGntE.
Found 0 SCCs in module RecvReqS_1.
Found 0 SCCs in module RecvReqS.
Found 0 SCCs in module RecvReqE_1.
Found 0 SCCs in module RecvReqE.
Found 0 SCCs in module RecvInvAck_1.
Found 0 SCCs in module RecvInvAck.
Found 0 SCCs in module RecvGntS_1.
Found 0 SCCs in module RecvGntS.
Found 0 SCCs in module RecvGntE_1.
Found 0 SCCs in module RecvGntE.
Found 0 SCCs in module Init_1.
Found 0 SCCs in module Init.
Found 0 SCCs.

3. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

5. Executing ASYNC2SYNC pass.

6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \system..
Finding unused cells or wires in module \Store_3..
Finding unused cells or wires in module \Store_2..
Finding unused cells or wires in module \Store_1..
Finding unused cells or wires in module \Store..
Finding unused cells or wires in module \SendReqS_1..
Finding unused cells or wires in module \SendReqS..
Finding unused cells or wires in module \SendReqE_1..
Finding unused cells or wires in module \SendReqE..
Finding unused cells or wires in module \SendInv_1..
Finding unused cells or wires in module \SendInvAck_1..
Finding unused cells or wires in module \SendInvAck..
Finding unused cells or wires in module \SendInv..
Finding unused cells or wires in module \SendGntS_1..
Finding unused cells or wires in module \SendGntS..
Finding unused cells or wires in module \SendGntE_1..
Finding unused cells or wires in module \SendGntE..
Finding unused cells or wires in module \RecvReqS_1..
Finding unused cells or wires in module \RecvReqS..
Finding unused cells or wires in module \RecvReqE_1..
Finding unused cells or wires in module \RecvReqE..
Finding unused cells or wires in module \RecvInvAck_1..
Finding unused cells or wires in module \RecvInvAck..
Finding unused cells or wires in module \RecvGntS_1..
Finding unused cells or wires in module \RecvGntS..
Finding unused cells or wires in module \RecvGntE_1..
Finding unused cells or wires in module \RecvGntE..
Finding unused cells or wires in module \Init_1..
Finding unused cells or wires in module \Init..

7. Executing FORMALFF pass.

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \Init_1..
Finding unused cells or wires in module \RecvGntE..
Finding unused cells or wires in module \RecvGntE_1..
Finding unused cells or wires in module \RecvGntS..
Finding unused cells or wires in module \RecvGntS_1..
Finding unused cells or wires in module \RecvInvAck..
Finding unused cells or wires in module \RecvInvAck_1..
Finding unused cells or wires in module \RecvReqE..
Finding unused cells or wires in module \RecvReqE_1..
Finding unused cells or wires in module \RecvReqS..
Finding unused cells or wires in module \RecvReqS_1..
Finding unused cells or wires in module \SendGntE..
Finding unused cells or wires in module \SendGntE_1..
Finding unused cells or wires in module \SendGntS..
Finding unused cells or wires in module \SendGntS_1..
Finding unused cells or wires in module \SendInv..
Finding unused cells or wires in module \SendInvAck..
Finding unused cells or wires in module \SendInvAck_1..
Finding unused cells or wires in module \SendInv_1..
Finding unused cells or wires in module \SendReqE..
Finding unused cells or wires in module \SendReqE_1..
Finding unused cells or wires in module \SendReqS..
Finding unused cells or wires in module \SendReqS_1..
Finding unused cells or wires in module \Store..
Finding unused cells or wires in module \Store_1..
Finding unused cells or wires in module \Store_2..
Finding unused cells or wires in module \Store_3..
Finding unused cells or wires in module \system..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module Init...
Checking module Init_1...
Checking module RecvGntE...
Checking module RecvGntE_1...
Checking module RecvGntS...
Checking module RecvGntS_1...
Checking module RecvInvAck...
Checking module RecvInvAck_1...
Checking module RecvReqE...
Checking module RecvReqE_1...
Checking module RecvReqS...
Checking module RecvReqS_1...
Checking module SendGntE...
Checking module SendGntE_1...
Checking module SendGntS...
Checking module SendGntS_1...
Checking module SendInv...
Checking module SendInvAck...
Checking module SendInvAck_1...
Checking module SendInv_1...
Checking module SendReqE...
Checking module SendReqE_1...
Checking module SendReqS...
Checking module SendReqS_1...
Checking module Store...
Checking module Store_1...
Checking module Store_2...
Checking module Store_3...
Checking module system...
Found and reported 0 problems.

10. Executing SETUNDEF pass (replace undef values with defined constants).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Init.
Optimizing module Init_1.
Optimizing module RecvGntE.
Optimizing module RecvGntE_1.
Optimizing module RecvGntS.
Optimizing module RecvGntS_1.
Optimizing module RecvInvAck.
Optimizing module RecvInvAck_1.
Optimizing module RecvReqE.
Optimizing module RecvReqE_1.
Optimizing module RecvReqS.
Optimizing module RecvReqS_1.
Optimizing module SendGntE.
Optimizing module SendGntE_1.
Optimizing module SendGntS.
Optimizing module SendGntS_1.
Optimizing module SendInv.
Optimizing module SendInvAck.
Optimizing module SendInvAck_1.
Optimizing module SendInv_1.
Optimizing module SendReqE.
Optimizing module SendReqE_1.
Optimizing module SendReqS.
Optimizing module SendReqS_1.
Optimizing module Store.
Optimizing module Store_1.
Optimizing module Store_2.
Optimizing module Store_3.
Optimizing module system.

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Init'.
Finding identical cells in module `\Init_1'.
Finding identical cells in module `\RecvGntE'.
Finding identical cells in module `\RecvGntE_1'.
Finding identical cells in module `\RecvGntS'.
Finding identical cells in module `\RecvGntS_1'.
Finding identical cells in module `\RecvInvAck'.
Finding identical cells in module `\RecvInvAck_1'.
Finding identical cells in module `\RecvReqE'.
Finding identical cells in module `\RecvReqE_1'.
Finding identical cells in module `\RecvReqS'.
Finding identical cells in module `\RecvReqS_1'.
Finding identical cells in module `\SendGntE'.
Finding identical cells in module `\SendGntE_1'.
Finding identical cells in module `\SendGntS'.
Finding identical cells in module `\SendGntS_1'.
Finding identical cells in module `\SendInv'.
Finding identical cells in module `\SendInvAck'.
Finding identical cells in module `\SendInvAck_1'.
Finding identical cells in module `\SendInv_1'.
Finding identical cells in module `\SendReqE'.
Finding identical cells in module `\SendReqE_1'.
Finding identical cells in module `\SendReqS'.
Finding identical cells in module `\SendReqS_1'.
Finding identical cells in module `\Store'.
Finding identical cells in module `\Store_1'.
Finding identical cells in module `\Store_2'.
Finding identical cells in module `\Store_3'.
Finding identical cells in module `\system'.
Removed a total of 0 cells.

11.3. Executing OPT_DFF pass (perform DFF optimizations).

11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \Init_1..
Finding unused cells or wires in module \RecvGntE..
Finding unused cells or wires in module \RecvGntE_1..
Finding unused cells or wires in module \RecvGntS..
Finding unused cells or wires in module \RecvGntS_1..
Finding unused cells or wires in module \RecvInvAck..
Finding unused cells or wires in module \RecvInvAck_1..
Finding unused cells or wires in module \RecvReqE..
Finding unused cells or wires in module \RecvReqE_1..
Finding unused cells or wires in module \RecvReqS..
Finding unused cells or wires in module \RecvReqS_1..
Finding unused cells or wires in module \SendGntE..
Finding unused cells or wires in module \SendGntE_1..
Finding unused cells or wires in module \SendGntS..
Finding unused cells or wires in module \SendGntS_1..
Finding unused cells or wires in module \SendInv..
Finding unused cells or wires in module \SendInvAck..
Finding unused cells or wires in module \SendInvAck_1..
Finding unused cells or wires in module \SendInv_1..
Finding unused cells or wires in module \SendReqE..
Finding unused cells or wires in module \SendReqE_1..
Finding unused cells or wires in module \SendReqS..
Finding unused cells or wires in module \SendReqS_1..
Finding unused cells or wires in module \Store..
Finding unused cells or wires in module \Store_1..
Finding unused cells or wires in module \Store_2..
Finding unused cells or wires in module \Store_3..
Finding unused cells or wires in module \system..

11.5. Finished fast OPT passes.

12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \Init_1..
Finding unused cells or wires in module \RecvGntE..
Finding unused cells or wires in module \RecvGntE_1..
Finding unused cells or wires in module \RecvGntS..
Finding unused cells or wires in module \RecvGntS_1..
Finding unused cells or wires in module \RecvInvAck..
Finding unused cells or wires in module \RecvInvAck_1..
Finding unused cells or wires in module \RecvReqE..
Finding unused cells or wires in module \RecvReqE_1..
Finding unused cells or wires in module \RecvReqS..
Finding unused cells or wires in module \RecvReqS_1..
Finding unused cells or wires in module \SendGntE..
Finding unused cells or wires in module \SendGntE_1..
Finding unused cells or wires in module \SendGntS..
Finding unused cells or wires in module \SendGntS_1..
Finding unused cells or wires in module \SendInv..
Finding unused cells or wires in module \SendInvAck..
Finding unused cells or wires in module \SendInvAck_1..
Finding unused cells or wires in module \SendInv_1..
Finding unused cells or wires in module \SendReqE..
Finding unused cells or wires in module \SendReqE_1..
Finding unused cells or wires in module \SendReqS..
Finding unused cells or wires in module \SendReqS_1..
Finding unused cells or wires in module \Store..
Finding unused cells or wires in module \Store_1..
Finding unused cells or wires in module \Store_2..
Finding unused cells or wires in module \Store_3..
Finding unused cells or wires in module \system..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

13. Executing RTLIL backend.
Output filename: ../model/design_prep.il

End of script. Logfile hash: ecdc1b3346, CPU: user 0.18s system 0.00s, MEM: 23.68 MB peak
Yosys 0.26+53 (git sha1 8216b23fb, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 28% 4x opt_clean (0 sec), 13% 1x check (0 sec), ...

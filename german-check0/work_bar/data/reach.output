Timeout: 3600, Memory_limit: 64000
	10000.000000 (abstract query)
	10000.000000 (concrete query)

Config:
	(concrete bit-width limit: 0)
	(fineness: 2)
	(interpret-ex-cc-level: 2)
	(forward-check:	0)
	(full projection)
	(prioritization:	single)

#STAT# num_bits= 10 num_regs= 28 num_total_bits= 76
1  10
2  18
3  10

System
  int : 852
  bool : 474
  sum : 1326
  bool_op : 616
  int_op : 10
    !  18
    &&  21
    ==  10
    ==_int  83
    ?:  99
    ?:_int  380
    |_2  2
    |_3  7
    |_5  1
    ||  5


Property
  int : 0
  bool : 10
  sum : 10
  bool_op : 4
  int_op : 0
    !  2
    &&  1
    ==  1

Partial interpretation info:
  depth: 0
  count: 0
  count (d=0): 0

  depth (prop): 0
  count (prop): 0
  count (d=0) (prop): 0

	# of Inst.                  : 1390	(864 bytes each)
	  ExInst::hm_ExInst.size()  : 0	(984 bytes each)
	  SigInst::hm_SigInst.size(): 84	(904 bytes each)
	  NumInst::hm_NumInst.size(): 37	(888 bytes each)
	  OpInst::hm_OpInst.size()  : 158	(944 bytes each)
	  OpInst::hm_ITEInst.size() : 479	(944 bytes each)
	  OpInst::hm_ETCInst.size() : 6	(944 bytes each)
	Total                       : 764

	Memory (est.)               : 1.145325 MB
	  ExInst                    : 0.000000 MB
	  SigInst                   : 0.072418 MB
	  NumInst                   : 0.031334 MB
	  OpInst::OP                : 0.142242 MB
	  OpInst::ITE               : 0.431229 MB
	  OpInst::ETC               : 0.005402 MB

	(maximum function composition in T: 1)

---------------------------------------------------------------------------------------------
 Reachability Analysis Begins
---------------------------------------------------------------------------------------------
Loop_FrameNumber_#ReachabilityIterations_#RefinementIterations
---------------------------------------------------------------------------------------------
Loop_0_0_0
---------------------------------------------------------------------------------------------
[Basis Step]:
	F[0] = I
	SAT_a ? [ F[0] && !P ]: UNSAT

[First Step]:
	SAT_a ? [ F[0] & T & !P ]: UNSAT

[RES_1]       0	: 0	: 0 s: 0
[RES_0]    L  0 : 0 s: 0, mem: 14, time: 0.012465
[RES_1]       0	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 14, time: 0.012702
---------------------------------------------------------------------------------------------
Loop_1_0_0
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 42	(42 + 0 + 0 + 0 + 0)
	(concrete cube) 42	(42 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 42 -> 1)
	(33 + 42 -> 33 + 1)
	(42 -> 1 -> 1)
	(42 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd)
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 1	: 0 1 s: 1
[RES_0]    L  1 : 0 2 s: 2, mem: 15, time: 0.017442
---------------------------------------------------------------------------------------------
Loop_1_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #37
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #37
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 38	(38 + 0 + 0 + 0 + 0)
	(concrete cube) 38	(38 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 38 -> 1)
	(33 + 38 -> 33 + 1)
	(38 -> 1 -> 1)
	(38 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd)
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 1	: 0 2 s: 2
[RES_0]    L  1 : 0 4 s: 4, mem: 15, time: 0.019167
---------------------------------------------------------------------------------------------
Loop_1_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 35	(35 + 0 + 0 + 0 + 0)
	(concrete cube) 35	(35 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 35 -> 1)
	(33 + 35 -> 33 + 1)
	(35 -> 1 -> 1)
	(35 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd)
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 1	: 0 3 s: 3
[RES_0]    L  1 : 0 6 s: 6, mem: 15, time: 0.020907
---------------------------------------------------------------------------------------------
Loop_1_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #32
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #32
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 33 -> 1)
	(33 + 33 -> 33 + 1)
	(33 -> 1 -> 1)
	(33 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s9_Chan1_reg_1_Cmd == 3'd1)
		[1] w3	((_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 1	: 0 4 s: 4
[RES_0]    L  1 : 0 8 s: 8, mem: 16, time: 0.022603
---------------------------------------------------------------------------------------------
Loop_1_4_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: UNSAT
[RES_1]       0	: 1	: 0 4 s: 4
[RES_0]    L  1 : 0 8 s: 8, mem: 16, time: 0.022674
	[Forward propagation]:
[RES_1]       0	: 2	: 0 4 0 s: 4
[RES_0]    L  2 : 0 8 0 s: 8, mem: 16, time: 0.023708
---------------------------------------------------------------------------------------------
Loop_2_0_0
---------------------------------------------------------------------------------------------
	F[2] = P
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 42	(42 + 0 + 0 + 0 + 0)
	(concrete cube) 42	(42 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 42 -> 2)
	(35 + 42 -> 35 + 2)
	(42 -> 2 -> 2)
	(42 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_Chan1_reg_1_Cmd == 3'd1) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd))
		[1] w3	((_s9_Chan1_reg_1_Cmd == 3'd1) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 2	: 0 4 1 s: 5
[RES_0]    L  2 : 0 8 3 s: 11, mem: 16, time: 0.027341
---------------------------------------------------------------------------------------------
Loop_2_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #37
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #37
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 38	(38 + 0 + 0 + 0 + 0)
	(concrete cube) 38	(38 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 38 -> 2)
	(36 + 38 -> 36 + 2)
	(38 -> 2 -> 2)
	(38 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 2	: 0 4 2 s: 6
[RES_0]    L  2 : 0 8 6 s: 14, mem: 16, time: 0.0303
---------------------------------------------------------------------------------------------
Loop_2_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 35	(35 + 0 + 0 + 0 + 0)
	(concrete cube) 35	(35 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 35 -> 2)
	(37 + 35 -> 37 + 2)
	(35 -> 2 -> 2)
	(35 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 2	: 0 4 3 s: 7
[RES_0]    L  2 : 0 8 9 s: 17, mem: 16, time: 0.033059
---------------------------------------------------------------------------------------------
Loop_2_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #32
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #32
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #31
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 33 -> 1)
	(33 + 33 -> 33 + 1)
	(33 -> 1 -> 1)
	(33 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s9_Chan1_reg_1_Cmd != _s15_Chan2_reg_1_Cmd)
		[1] w3	((_s9_Chan1_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #29
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #29
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 31	(31 + 0 + 0 + 0 + 0)
	(concrete cube) 31	(31 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 31 -> 1)
	(33 + 31 -> 33 + 1)
	(31 -> 1 -> 1)
	(31 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s11_Chan1_reg_2_Cmd == 3'd2)
		[1] w3	((_s11_Chan1_reg_2_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 33 -> 3)
	(40 + 33 -> 40 + 3)
	(33 -> 3 -> 2)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
	(33 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 2	: 0 6 4 s: 10
[RES_0]    L  2 : 0 12 12 s: 24, mem: 16, time: 0.044659
---------------------------------------------------------------------------------------------
Loop_2_4_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: UNSAT
[RES_1]       0	: 2	: 0 6 4 s: 10
[RES_0]    L  2 : 0 12 12 s: 24, mem: 16, time: 0.044754
	[Forward propagation]:
[RES_1]       0	: 3	: 0 6 4 0 s: 10
[RES_0]    L  3 : 0 12 12 0 s: 24, mem: 16, time: 0.04812
---------------------------------------------------------------------------------------------
Loop_3_0_0
---------------------------------------------------------------------------------------------
	F[3] = P
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 42	(42 + 0 + 0 + 0 + 0)
	(concrete cube) 42	(42 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #43
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #43
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 45	(45 + 0 + 0 + 0 + 0)
	(concrete cube) 45	(45 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 45 -> 2)
	(41 + 45 -> 41 + 2)
	(45 -> 2 -> 2)
	(45 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 42 -> 3)
	(36 + 42 -> 36 + 3)
	(42 -> 3 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
	(42 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 3	: 0 6 5 1 s: 12
[RES_0]    L  3 : 0 12 15 4 s: 31, mem: 17, time: 0.059946
---------------------------------------------------------------------------------------------
Loop_3_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #37
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #37
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 38	(38 + 0 + 0 + 0 + 0)
	(concrete cube) 38	(38 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 40 -> 3)
	(43 + 40 -> 43 + 3)
	(40 -> 3 -> 2)
	(40 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 38 -> 4)
	(38 + 38 -> 38 + 4)
	(38 -> 4 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
	(38 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 3	: 0 6 6 2 s: 14
[RES_0]    L  3 : 0 12 18 8 s: 38, mem: 17, time: 0.076975
---------------------------------------------------------------------------------------------
Loop_3_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 35	(35 + 0 + 0 + 0 + 0)
	(concrete cube) 35	(35 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 36 -> 4)
	(45 + 36 -> 45 + 4)
	(36 -> 4 -> 2)
	(36 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2))
		[1] w3	((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 35 -> 4)
	(40 + 35 -> 40 + 4)
	(35 -> 4 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
	(35 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 3	: 0 6 7 3 s: 16
[RES_0]    L  3 : 0 12 21 12 s: 45, mem: 17, time: 0.091451
---------------------------------------------------------------------------------------------
Loop_3_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #32
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #32
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #31
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #31
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 33 -> 1)
	(33 + 33 -> 33 + 1)
	(33 -> 1 -> 1)
	(33 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s9_Chan1_reg_1_Cmd != _s11_Chan1_reg_2_Cmd)
		[1] w3	((_s9_Chan1_reg_1_Cmd != _s11_Chan1_reg_2_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 33 -> 2)
	(48 + 33 -> 48 + 2)
	(33 -> 2 -> 2)
	(33 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s11_Chan1_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s11_Chan1_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #29
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #29
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 31	(31 + 0 + 0 + 0 + 0)
	(concrete cube) 31	(31 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #29
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #29
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 31	(31 + 0 + 0 + 0 + 0)
	(concrete cube) 31	(31 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 31 -> 1)
	(33 + 31 -> 33 + 1)
	(31 -> 1 -> 1)
	(31 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s25_CurCmd_reg == 3'd2)
		[1] w3	((_s25_CurCmd_reg == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 31 -> 4)
	(50 + 31 -> 50 + 4)
	(31 -> 4 -> 1)
	(31 -> 4 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s25_CurCmd_reg == 3'd2)
		[1] w3	((_s25_CurCmd_reg == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 33 -> 4)
	(43 + 33 -> 43 + 4)
	(33 -> 4 -> 2)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(33 -> 4 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 3	: 0 7 9 4 s: 20
[RES_0]    L  3 : 0 14 26 15 s: 55, mem: 17, time: 0.115379
---------------------------------------------------------------------------------------------
Loop_3_4_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: UNSAT
[RES_1]       0	: 3	: 0 7 9 4 s: 20
[RES_0]    L  3 : 0 14 26 15 s: 55, mem: 17, time: 0.115457
	[Forward propagation]:
[RES_1]       0	: 4	: 0 7 9 4 0 s: 20
[RES_0]    L  4 : 0 14 26 15 0 s: 55, mem: 17, time: 0.122697
---------------------------------------------------------------------------------------------
Loop_4_0_0
---------------------------------------------------------------------------------------------
	F[4] = P
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 42	(42 + 0 + 0 + 0 + 0)
	(concrete cube) 42	(42 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 40 -> 3)
	(44 + 40 -> 44 + 3)
	(40 -> 3 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
	(40 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 42 -> 6)
	(36 + 42 -> 36 + 6)
	(42 -> 6 -> 4)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(42 -> 6 -> 9 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 4	: 0 7 9 5 1 s: 22
[RES_0]    L  4 : 0 14 26 19 5 s: 64, mem: 17, time: 0.145552
---------------------------------------------------------------------------------------------
Loop_4_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #37
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #37
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 38	(38 + 0 + 0 + 0 + 0)
	(concrete cube) 38	(38 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 40 -> 6)
	(46 + 40 -> 46 + 6)
	(40 -> 6 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
	(40 -> 6 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 38 -> 7)
	(38 + 38 -> 38 + 7)
	(38 -> 7 -> 4)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(38 -> 7 -> 9 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 4	: 0 7 9 6 2 s: 24
[RES_0]    L  4 : 0 14 26 23 10 s: 73, mem: 17, time: 0.172666
---------------------------------------------------------------------------------------------
Loop_4_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 35	(35 + 0 + 0 + 0 + 0)
	(concrete cube) 35	(35 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 36 -> 6)
	(48 + 36 -> 48 + 6)
	(36 -> 6 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
	(36 -> 6 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 35 -> 6)
	(40 + 35 -> 40 + 6)
	(35 -> 6 -> 4)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(35 -> 6 -> 9 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 4	: 0 7 9 7 3 s: 26
[RES_0]    L  4 : 0 14 26 27 15 s: 82, mem: 17, time: 0.200099
---------------------------------------------------------------------------------------------
Loop_4_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #32
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #32
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #31
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #26
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #26
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 28	(28 + 0 + 0 + 0 + 0)
	(concrete cube) 28	(28 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 28 -> 2)
	(58 + 28 -> 58 + 2)
	(28 -> 2 -> 2)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next == _s11_Chan1_reg_2_Cmd$next)
	(28 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd))
		[1] w3	((_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 33 -> 4)
	(51 + 33 -> 51 + 4)
	(33 -> 4 -> 2)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
	(33 -> 4 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 33 -> 4)
	(42 + 33 -> 42 + 4)
	(33 -> 4 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(33 -> 4 -> 8 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 4	: 0 7 10 5 1 s: 23
[RES_0]    L  4 : 0 14 29 18 4 s: 65, mem: 18, time: 0.229685
---------------------------------------------------------------------------------------------
Loop_4_4_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: UNSAT
[RES_1]       0	: 4	: 0 7 10 5 1 s: 23
[RES_0]    L  4 : 0 14 29 18 4 s: 65, mem: 18, time: 0.229765
	[Forward propagation]:
	(F4 about to converge: #1)
		((_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 5	: 0 7 10 5 1 0 s: 23
[RES_0]    L  5 : 0 14 29 18 4 0 s: 65, mem: 18, time: 0.240045
---------------------------------------------------------------------------------------------
Loop_5_0_0
---------------------------------------------------------------------------------------------
	F[5] = P
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 42	(42 + 0 + 0 + 0 + 0)
	(concrete cube) 42	(42 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #43
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #43
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 45	(45 + 0 + 0 + 0 + 0)
	(concrete cube) 45	(45 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #44
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #44
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 46	(46 + 0 + 0 + 0 + 0)
	(concrete cube) 46	(46 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #52
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #52
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 54	(54 + 0 + 0 + 0 + 0)
	(concrete cube) 54	(54 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 54 -> 2)
	(61 + 54 -> 61 + 2)
	(54 -> 2 -> 2)
	(54 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_Chan1_reg_1_Cmd == 3'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd))
		[1] w3	((_s9_Chan1_reg_1_Cmd == 3'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 46 -> 4)
	(54 + 46 -> 54 + 4)
	(46 -> 4 -> 3)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next == _s11_Chan1_reg_2_Cmd$next)
	(46 -> 4 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #49
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #49
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 51	(51 + 0 + 0 + 0 + 0)
	(concrete cube) 51	(51 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 51 -> 3)
	(55 + 51 -> 55 + 3)
	(51 -> 3 -> 2)
	(51 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s25_CurCmd_reg == 3'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd))
		[1] w3	((_s25_CurCmd_reg == 3'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 45 -> 6)
	(45 + 45 -> 45 + 6)
	(45 -> 6 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
	(45 -> 6 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 40 -> 6)
	(46 + 40 -> 46 + 6)
	(40 -> 6 -> 3)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(40 -> 6 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s25_CurCmd_reg == 3'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s25_CurCmd_reg == 3'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 42 -> 5)
	(37 + 42 -> 37 + 5)
	(42 -> 5 -> 4)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(42 -> 5 -> 9 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 5	: 0 7 11 7 3 1 s: 29
[RES_0]    L  5 : 0 14 32 25 12 5 s: 88, mem: 18, time: 0.300823
---------------------------------------------------------------------------------------------
Loop_5_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #37
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #37
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 38	(38 + 0 + 0 + 0 + 0)
	(concrete cube) 38	(38 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 40 -> 5)
	(59 + 40 -> 59 + 5)
	(40 -> 5 -> 2)
		(added cond. from num.)	(_s25_CurCmd_reg$next == _s9_Chan1_reg_1_Cmd$next)
	(40 -> 5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s25_CurCmd_reg == 3'd2) && (_s25_CurCmd_reg == _s9_Chan1_reg_1_Cmd))
		[1] w3	((_s25_CurCmd_reg == 3'd2) && (_s25_CurCmd_reg == _s9_Chan1_reg_1_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 36 -> 6)
	(49 + 36 -> 49 + 6)
	(36 -> 6 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next == _s11_Chan1_reg_2_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next == _s9_Chan1_reg_1_Cmd$next)
	(36 -> 6 -> 6 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd) && (_s25_CurCmd_reg == _s9_Chan1_reg_1_Cmd))
		[1] w3	((_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd) && (_s25_CurCmd_reg == _s9_Chan1_reg_1_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #43
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #43
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 45	(45 + 0 + 0 + 0 + 0)
	(concrete cube) 45	(45 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #44
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #44
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 46	(46 + 0 + 0 + 0 + 0)
	(concrete cube) 46	(46 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 46 -> 5)
	(69 + 46 -> 69 + 5)
	(46 -> 5 -> 2)
	(46 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd2))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 45 -> 4)
	(62 + 45 -> 62 + 4)
	(45 -> 4 -> 2)
	(45 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s25_CurCmd_reg == 3'd2))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s25_CurCmd_reg == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 40 -> 4)
	(63 + 40 -> 63 + 4)
	(40 -> 4 -> 3)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next == _s11_Chan1_reg_2_Cmd$next)
	(40 -> 4 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 40 -> 6)
	(52 + 40 -> 52 + 6)
	(40 -> 6 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
	(40 -> 6 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 36 -> 6)
	(53 + 36 -> 53 + 6)
	(36 -> 6 -> 3)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(36 -> 6 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 38 -> 6)
	(41 + 38 -> 41 + 6)
	(38 -> 6 -> 4)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(38 -> 6 -> 9 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 5	: 0 7 12 10 6 2 s: 37
[RES_0]    L  5 : 0 14 35 35 24 10 s: 118, mem: 18, time: 0.390902
---------------------------------------------------------------------------------------------
Loop_5_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 35	(35 + 0 + 0 + 0 + 0)
	(concrete cube) 35	(35 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 40 -> 5)
	(75 + 40 -> 75 + 5)
	(40 -> 5 -> 2)
	(40 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd2))
		[1] w3	((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 40 -> 5)
	(68 + 40 -> 68 + 5)
	(40 -> 5 -> 2)
	(40 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s25_CurCmd_reg == 3'd2))
		[1] w3	((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s25_CurCmd_reg == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #33
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #33
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 35	(35 + 0 + 0 + 0 + 0)
	(concrete cube) 35	(35 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 35 -> 5)
	(69 + 35 -> 69 + 5)
	(35 -> 5 -> 3)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next == _s11_Chan1_reg_2_Cmd$next)
	(35 -> 5 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd))
		[1] w3	((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 36 -> 7)
	(57 + 36 -> 57 + 7)
	(36 -> 7 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
	(36 -> 7 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #31
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 33 -> 8)
	(58 + 33 -> 58 + 8)
	(33 -> 8 -> 3)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(33 -> 8 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s17_Chan2_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 35 -> 9)
	(44 + 35 -> 44 + 9)
	(35 -> 9 -> 4)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(35 -> 9 -> 9 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 5	: 0 7 13 12 8 3 s: 43
[RES_0]    L  5 : 0 14 38 42 32 15 s: 141, mem: 18, time: 0.463681
---------------------------------------------------------------------------------------------
Loop_5_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #32
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #32
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #31
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #31
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #29
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #29
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 31	(31 + 0 + 0 + 0 + 0)
	(concrete cube) 31	(31 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 31 -> 3)
	(81 + 31 -> 81 + 3)
	(31 -> 3 -> 2)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
	(31 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s11_Chan1_reg_2_Cmd == 3'd1) && (_s9_Chan1_reg_1_Cmd == 3'd2))
		[1] w3	((_s11_Chan1_reg_2_Cmd == 3'd1) && (_s9_Chan1_reg_1_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 33 -> 4)
	(74 + 33 -> 74 + 4)
	(33 -> 4 -> 2)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s11_Chan1_reg_2_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s11_Chan1_reg_2_Cmd$next)
	(33 -> 4 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s11_Chan1_reg_2_Cmd == 3'd1) && (_s25_CurCmd_reg == 3'd2))
		[1] w3	((_s11_Chan1_reg_2_Cmd == 3'd1) && (_s25_CurCmd_reg == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #33
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #33
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 35	(35 + 0 + 0 + 0 + 0)
	(concrete cube) 35	(35 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 35 -> 5)
	(83 + 35 -> 83 + 5)
	(35 -> 5 -> 2)
	(35 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s11_Chan1_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd2))
		[1] w3	((_s11_Chan1_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 36 -> 4)
	(76 + 36 -> 76 + 4)
	(36 -> 4 -> 3)
	(36 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s26_CurPtr_reg == 2'd1) && (_s11_Chan1_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s25_CurCmd_reg == 3'd2))
		[1] w3	((_s26_CurPtr_reg == 2'd1) && (_s11_Chan1_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s25_CurCmd_reg == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #31
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #26
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #26
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 28	(28 + 0 + 0 + 0 + 0)
	(concrete cube) 28	(28 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #27
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #27
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 29	(29 + 0 + 0 + 0 + 0)
	(concrete cube) 29	(29 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 29 -> 1)
	(33 + 29 -> 33 + 1)
	(29 -> 1 -> 1)
	(29 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s25_CurCmd_reg == 3'd1)
		[1] w3	((_s25_CurCmd_reg == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 28 -> 2)
	(86 + 28 -> 86 + 2)
	(28 -> 2 -> 1)
	(28 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s25_CurCmd_reg == 3'd1)
		[1] w3	((_s25_CurCmd_reg == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #29
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #29
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 31	(31 + 0 + 0 + 0 + 0)
	(concrete cube) 31	(31 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #30
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 32	(32 + 0 + 0 + 0 + 0)
	(concrete cube) 32	(32 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 32 -> 1)
	(33 + 32 -> 33 + 1)
	(32 -> 1 -> 1)
	(32 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s25_CurCmd_reg != _s11_Chan1_reg_2_Cmd)
		[1] w3	((_s25_CurCmd_reg != _s11_Chan1_reg_2_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 31 -> 3)
	(88 + 31 -> 88 + 3)
	(31 -> 3 -> 2)
	(31 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s25_CurCmd_reg != _s11_Chan1_reg_2_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd2))
		[1] w3	((_s25_CurCmd_reg != _s11_Chan1_reg_2_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #26
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #26
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 28	(28 + 0 + 0 + 0 + 0)
	(concrete cube) 28	(28 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #27
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #27
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 29	(29 + 0 + 0 + 0 + 0)
	(concrete cube) 29	(29 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 29 -> 1)
	(33 + 29 -> 33 + 1)
	(29 -> 1 -> 1)
	(29 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s25_CurCmd_reg != 3'd0)
		[1] w3	((_s25_CurCmd_reg != 3'd0) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 28 -> 2)
	(90 + 28 -> 90 + 2)
	(28 -> 2 -> 1)
	(28 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s25_CurCmd_reg != 3'd0)
		[1] w3	((_s25_CurCmd_reg != 3'd0) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 33 -> 4)
	(80 + 33 -> 80 + 4)
	(33 -> 4 -> 3)
	(33 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s26_CurPtr_reg == 2'd1) && (_s9_Chan1_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s25_CurCmd_reg == 3'd2))
		[1] w3	((_s26_CurPtr_reg == 2'd1) && (_s9_Chan1_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s25_CurCmd_reg == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #29
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #29
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 31	(31 + 0 + 0 + 0 + 0)
	(concrete cube) 31	(31 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 31 -> 5)
	(81 + 31 -> 81 + 5)
	(31 -> 5 -> 2)
	(31 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s25_CurCmd_reg != 3'd0) && (_s11_Chan1_reg_2_Cmd == 3'd2))
		[1] w3	((_s25_CurCmd_reg != 3'd0) && (_s11_Chan1_reg_2_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #26
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #26
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 28	(28 + 0 + 0 + 0 + 0)
	(concrete cube) 28	(28 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #30
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 32	(32 + 0 + 0 + 0 + 0)
	(concrete cube) 32	(32 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 32 -> 2)
	(93 + 32 -> 93 + 2)
	(32 -> 2 -> 1)
	(32 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s15_Chan2_reg_1_Cmd != 3'd0)
		[1] w3	((_s15_Chan2_reg_1_Cmd != 3'd0) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 28 -> 2)
	(83 + 28 -> 83 + 2)
	(28 -> 2 -> 1)
	(28 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s15_Chan2_reg_1_Cmd != 3'd0)
		[1] w3	((_s15_Chan2_reg_1_Cmd != 3'd0) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 33 -> 9)
	(65 + 33 -> 65 + 9)
	(33 -> 9 -> 4)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
	(33 -> 9 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s26_CurPtr_reg == 2'd1) && (_s9_Chan1_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s26_CurPtr_reg == 2'd1) && (_s9_Chan1_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #29
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #29
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 31	(31 + 0 + 0 + 0 + 0)
	(concrete cube) 31	(31 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #29
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #29
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 31	(31 + 0 + 0 + 0 + 0)
	(concrete cube) 31	(31 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #24
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #24
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 26	(26 + 0 + 0 + 0 + 0)
	(concrete cube) 26	(26 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #25
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #25
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 27	(27 + 0 + 0 + 0 + 0)
	(concrete cube) 27	(27 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 27 -> 1)
	(33 + 27 -> 33 + 1)
	(27 -> 1 -> 1)
	(27 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_Cache_reg_1_State == 2'd2)
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 26 -> 1)
	(97 + 26 -> 97 + 1)
	(26 -> 1 -> 1)
	(26 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_Cache_reg_1_State == 2'd2)
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 31 -> 1)
	(86 + 31 -> 86 + 1)
	(31 -> 1 -> 1)
	(31 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_Cache_reg_1_State == 2'd2)
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 31 -> 1)
	(67 + 31 -> 67 + 1)
	(31 -> 1 -> 1)
	(31 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_Cache_reg_1_State == 2'd2)
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 33 -> 4)
	(47 + 33 -> 47 + 4)
	(33 -> 4 -> 4)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(33 -> 4 -> 9 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 5	: 0 8 18 17 10 4 s: 57
[RES_0]    L  5 : 0 16 51 58 39 20 s: 184, mem: 19, time: 0.576686
---------------------------------------------------------------------------------------------
Loop_5_4_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: UNSAT
[RES_1]       0	: 5	: 0 8 18 17 10 4 s: 57
[RES_0]    L  5 : 0 16 51 58 39 20 s: 184, mem: 19, time: 0.576768
	[Forward propagation]:
[RES_1]       0	: 6	: 0 5 9 14 9 4 0 s: 41
[RES_0]    L  6 : 0 10 24 41 31 20 0 s: 126, mem: 19, time: 0.600079
---------------------------------------------------------------------------------------------
Loop_6_0_0
---------------------------------------------------------------------------------------------
	F[6] = P
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 42	(42 + 0 + 0 + 0 + 0)
	(concrete cube) 42	(42 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 40 -> 5)
	(44 + 40 -> 44 + 5)
	(40 -> 5 -> 4)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next == _s11_Chan1_reg_2_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next == _s9_Chan1_reg_1_Cmd$next)
	(40 -> 5 -> 7 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd) && (_s25_CurCmd_reg == _s9_Chan1_reg_1_Cmd))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s9_Chan1_reg_1_Cmd == _s11_Chan1_reg_2_Cmd) && (_s25_CurCmd_reg == _s9_Chan1_reg_1_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #43
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #43
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 45	(45 + 0 + 0 + 0 + 0)
	(concrete cube) 45	(45 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 45 -> 4)
	(45 + 45 -> 45 + 4)
	(45 -> 4 -> 2)
	(45 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 42 -> 7)
	(37 + 42 -> 37 + 7)
	(42 -> 7 -> 5)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(42 -> 7 -> 10 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 6	: 0 5 9 14 9 6 1 s: 44
[RES_0]    L  6 : 0 10 24 41 31 28 6 s: 140, mem: 19, time: 0.631112
---------------------------------------------------------------------------------------------
Loop_6_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #37
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #37
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 38	(38 + 0 + 0 + 0 + 0)
	(concrete cube) 38	(38 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 40 -> 5)
	(47 + 40 -> 47 + 5)
	(40 -> 5 -> 4)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(40 -> 5 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 40 -> 4)
	(48 + 40 -> 48 + 4)
	(40 -> 4 -> 3)
	(40 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 38 -> 7)
	(40 + 38 -> 40 + 7)
	(38 -> 7 -> 5)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(38 -> 7 -> 10 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 6	: 0 5 9 14 9 8 2 s: 47
[RES_0]    L  6 : 0 10 24 41 31 37 12 s: 155, mem: 19, time: 0.660984
---------------------------------------------------------------------------------------------
Loop_6_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 35	(35 + 0 + 0 + 0 + 0)
	(concrete cube) 35	(35 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 36 -> 6)
	(50 + 36 -> 50 + 6)
	(36 -> 6 -> 5)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s26_CurPtr_reg$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s26_CurPtr_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
	(36 -> 6 -> 8 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s17_Chan2_reg_2_Cmd != _s9_Chan1_reg_1_Cmd) && (_s26_CurPtr_reg == 2'd1) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s17_Chan2_reg_2_Cmd != _s9_Chan1_reg_1_Cmd) && (_s26_CurPtr_reg == 2'd1) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #31
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 33 -> 4)
	(51 + 33 -> 51 + 4)
	(33 -> 4 -> 3)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
	(33 -> 4 -> 8 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 35 -> 11)
	(43 + 35 -> 43 + 11)
	(35 -> 11 -> 6)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(35 -> 11 -> 16 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 6	: 0 5 9 14 9 10 3 s: 50
[RES_0]    L  6 : 0 10 24 41 31 46 18 s: 170, mem: 19, time: 0.70244
---------------------------------------------------------------------------------------------
Loop_6_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: UNSAT
[RES_1]       0	: 6	: 0 5 9 14 9 10 3 s: 50
[RES_0]    L  6 : 0 10 24 41 31 46 18 s: 170, mem: 19, time: 0.702524
	[Forward propagation]:
[RES_1]       0	: 7	: 0 5 9 14 9 10 3 0 s: 50
[RES_0]    L  7 : 0 10 24 41 31 46 18 0 s: 170, mem: 19, time: 0.722505
---------------------------------------------------------------------------------------------
Loop_7_0_0
---------------------------------------------------------------------------------------------
	F[7] = P
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 42	(42 + 0 + 0 + 0 + 0)
	(concrete cube) 42	(42 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #43
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #43
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 45	(45 + 0 + 0 + 0 + 0)
	(concrete cube) 45	(45 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 45 -> 5)
	(44 + 45 -> 44 + 5)
	(45 -> 5 -> 4)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
	(45 -> 5 -> 9 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 42 -> 9)
	(35 + 42 -> 35 + 9)
	(42 -> 9 -> 7)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(42 -> 9 -> 17 -> 6)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 7	: 0 5 9 14 9 10 4 1 s: 52
[RES_0]    L  7 : 0 10 24 41 31 46 22 7 s: 181, mem: 19, time: 0.755814
---------------------------------------------------------------------------------------------
Loop_7_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #37
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #37
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 38	(38 + 0 + 0 + 0 + 0)
	(concrete cube) 38	(38 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 36 -> 7)
	(46 + 36 -> 46 + 7)
	(36 -> 7 -> 5)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
	(36 -> 7 -> 10 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 36 -> 7)
	(47 + 36 -> 47 + 7)
	(36 -> 7 -> 6)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(36 -> 7 -> 13 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s17_Chan2_reg_2_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 38 -> 9)
	(38 + 38 -> 38 + 9)
	(38 -> 9 -> 7)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(38 -> 9 -> 17 -> 6)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s17_Chan2_reg_2_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 7	: 0 5 9 14 9 10 6 2 s: 55
[RES_0]    L  7 : 0 10 24 41 31 46 33 14 s: 199, mem: 20, time: 0.822568
---------------------------------------------------------------------------------------------
Loop_7_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 35	(35 + 0 + 0 + 0 + 0)
	(concrete cube) 35	(35 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 36 -> 8)
	(49 + 36 -> 49 + 8)
	(36 -> 8 -> 7)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s26_CurPtr_reg$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s26_CurPtr_reg$next)
		(added cond. from num.)	(_s3_Cache_reg_1_Data$next == _s26_CurPtr_reg$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s26_CurPtr_reg$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s26_CurPtr_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
	(36 -> 8 -> 18 -> 7)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s17_Chan2_reg_2_Cmd != _s9_Chan1_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s3_Cache_reg_1_Data == _s26_CurPtr_reg) && (_s4_Cache_reg_1_State != _s26_CurPtr_reg) && (_s16_Chan2_reg_1_Data != _s26_CurPtr_reg) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s17_Chan2_reg_2_Cmd != _s9_Chan1_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s3_Cache_reg_1_Data == _s26_CurPtr_reg) && (_s4_Cache_reg_1_State != _s26_CurPtr_reg) && (_s16_Chan2_reg_1_Data != _s26_CurPtr_reg) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #31
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 33	(33 + 0 + 0 + 0 + 0)
	(concrete cube) 33	(33 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #27
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #27
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 54	(54 + 0 + 0 + 0 + 0)
	(concrete cube) 54	(54 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #23
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #23
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 25	(25 + 0 + 0 + 0 + 0)
	(concrete cube) 25	(25 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 25 -> 2)
	(73 + 25 -> 73 + 2)
	(25 -> 2 -> 1)
	(25 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s21_Chan3_reg_1_Cmd == 3'd6)
		[1] w3	((_s21_Chan3_reg_1_Cmd == 3'd6) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 54 -> 2)
	(60 + 54 -> 60 + 2)
	(54 -> 2 -> 2)
	(54 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 33 -> 5)
	(51 + 33 -> 51 + 5)
	(33 -> 5 -> 4)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
	(33 -> 5 -> 9 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #30
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 57	(57 + 0 + 0 + 0 + 0)
	(concrete cube) 57	(57 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 57 -> 3)
	(62 + 57 -> 62 + 3)
	(57 -> 3 -> 3)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(57 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 36 -> 6)
	(53 + 36 -> 53 + 6)
	(36 -> 6 -> 5)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(36 -> 6 -> 12 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #27
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #27
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 54	(54 + 0 + 0 + 0 + 0)
	(concrete cube) 54	(54 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #23
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #23
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 25	(25 + 0 + 0 + 0 + 0)
	(concrete cube) 25	(25 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 25 -> 5)
	(64 + 25 -> 64 + 5)
	(25 -> 5 -> 1)
	(25 -> 5 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s21_Chan3_reg_1_Cmd == 3'd6)
		[1] w3	((_s21_Chan3_reg_1_Cmd == 3'd6) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 54 -> 7)
	(55 + 54 -> 55 + 7)
	(54 -> 7 -> 4)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(54 -> 7 -> 9 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 35 -> 7)
	(43 + 35 -> 43 + 7)
	(35 -> 7 -> 6)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(35 -> 7 -> 16 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 7	: 0 5 9 14 9 9 5 1 s: 52
[RES_0]    L  7 : 0 10 24 41 31 35 26 6 s: 173, mem: 20, time: 0.935505
---------------------------------------------------------------------------------------------
Loop_7_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: UNSAT
[RES_1]       0	: 7	: 0 5 9 14 9 9 5 1 s: 52
[RES_0]    L  7 : 0 10 24 41 31 35 26 6 s: 173, mem: 20, time: 0.93559
	[Forward propagation]:
	(F7 about to converge: #1)
		((_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 8	: 0 5 9 14 9 8 5 1 1 s: 52
[RES_0]    L  8 : 0 10 24 41 31 33 26 6 2 s: 173, mem: 20, time: 0.9586
---------------------------------------------------------------------------------------------
Loop_8_0_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 42	(42 + 0 + 0 + 0 + 0)
	(concrete cube) 42	(42 + 0 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 61	(61 + 0 + 0 + 0 + 0)
	(concrete cube) 61	(61 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 43	(43 + 0 + 0 + 0 + 0)
	(concrete cube) 43	(43 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 43	(43 + 0 + 0 + 0 + 0)
	(concrete cube) 43	(43 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 43 -> 8)
	(70 + 43 -> 70 + 8)
	(43 -> 8 -> 3)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
	(43 -> 8 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s15_Chan2_reg_1_Cmd == 3'd6) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2))
		[1] w3	((_s15_Chan2_reg_1_Cmd == 3'd6) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s11_Chan1_reg_2_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 43 -> 3)
	(61 + 43 -> 61 + 3)
	(43 -> 3 -> 3)
	(43 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 43	(43 + 0 + 0 + 0 + 0)
	(concrete cube) 43	(43 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #41
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #41
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 43	(43 + 0 + 0 + 0 + 0)
	(concrete cube) 43	(43 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 43 -> 7)
	(72 + 43 -> 72 + 7)
	(43 -> 7 -> 4)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(43 -> 7 -> 10 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s15_Chan2_reg_1_Cmd == 3'd6) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s15_Chan2_reg_1_Cmd == 3'd6) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 43 -> 7)
	(63 + 43 -> 63 + 7)
	(43 -> 7 -> 4)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(43 -> 7 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #35
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #35
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 37	(37 + 0 + 0 + 0 + 0)
	(concrete cube) 37	(37 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 37 -> 8)
	(64 + 37 -> 64 + 8)
	(37 -> 8 -> 5)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(37 -> 8 -> 16 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s15_Chan2_reg_1_Cmd == 3'd6) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s15_Chan2_reg_1_Cmd == 3'd6) && (_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 61 -> 6)
	(50 + 61 -> 50 + 6)
	(61 -> 6 -> 5)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(61 -> 6 -> 10 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #43
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #43
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 45	(45 + 0 + 0 + 0 + 0)
	(concrete cube) 45	(45 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 45 -> 9)
	(51 + 45 -> 51 + 9)
	(45 -> 9 -> 5)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
	(45 -> 9 -> 10 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #43
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #43
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 45	(45 + 0 + 0 + 0 + 0)
	(concrete cube) 45	(45 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 45 -> 8)
	(52 + 45 -> 52 + 8)
	(45 -> 8 -> 6)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(45 -> 8 -> 13 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 42 -> 10)
	(39 + 42 -> 39 + 10)
	(42 -> 10 -> 7)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(42 -> 10 -> 17 -> 6)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s23_Chan3_reg_2_Cmd != _s21_Chan3_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 8	: 0 5 9 14 9 10 8 4 2 s: 61
[RES_0]    L  8 : 0 10 24 41 31 42 41 23 9 s: 221, mem: 21, time: 1.10294
---------------------------------------------------------------------------------------------
Loop_8_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #37
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #37
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 38	(38 + 0 + 0 + 0 + 0)
	(concrete cube) 38	(38 + 0 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 61	(61 + 0 + 0 + 0 + 0)
	(concrete cube) 61	(61 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #30
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 32	(32 + 0 + 0 + 0 + 0)
	(concrete cube) 32	(32 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 32 -> 2)
	(93 + 32 -> 93 + 2)
	(32 -> 2 -> 1)
	(32 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s23_Chan3_reg_2_Cmd != 3'd0)
		[1] w3	((_s23_Chan3_reg_2_Cmd != 3'd0) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 61 -> 2)
	(80 + 61 -> 80 + 2)
	(61 -> 2 -> 2)
	(61 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 40 -> 5)
	(70 + 40 -> 70 + 5)
	(40 -> 5 -> 5)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
	(40 -> 5 -> 10 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s27_ExGntd_reg && (_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w3	(_s27_ExGntd_reg && (_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #30
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 57	(57 + 0 + 0 + 0 + 0)
	(concrete cube) 57	(57 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #30
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 32	(32 + 0 + 0 + 0 + 0)
	(concrete cube) 32	(32 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 32 -> 3)
	(82 + 32 -> 82 + 3)
	(32 -> 3 -> 2)
	(32 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != 3'd0) && (_s21_Chan3_reg_1_Cmd == _s23_Chan3_reg_2_Cmd))
		[1] w3	((_s21_Chan3_reg_1_Cmd != 3'd0) && (_s21_Chan3_reg_1_Cmd == _s23_Chan3_reg_2_Cmd) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 57 -> 8)
	(72 + 57 -> 72 + 8)
	(57 -> 8 -> 3)
	(57 -> 8 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 36 -> 8)
	(56 + 36 -> 56 + 8)
	(36 -> 8 -> 6)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
	(36 -> 8 -> 11 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s27_ExGntd_reg && (_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w3	(_s27_ExGntd_reg && (_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #30
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 57	(57 + 0 + 0 + 0 + 0)
	(concrete cube) 57	(57 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #36
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #36
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 38	(38 + 0 + 0 + 0 + 0)
	(concrete cube) 38	(38 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 38 -> 6)
	(74 + 38 -> 74 + 6)
	(38 -> 6 -> 4)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(38 -> 6 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #30
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 32	(32 + 0 + 0 + 0 + 0)
	(concrete cube) 32	(32 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 32 -> 8)
	(75 + 32 -> 75 + 8)
	(32 -> 8 -> 5)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s9_Chan1_reg_1_Cmd$next != _s15_Chan2_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(32 -> 8 -> 16 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != 3'd0) && (_s15_Chan2_reg_1_Cmd == 3'd6) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s21_Chan3_reg_1_Cmd != 3'd0) && (_s15_Chan2_reg_1_Cmd == 3'd6) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 57 -> 7)
	(59 + 57 -> 59 + 7)
	(57 -> 7 -> 5)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(57 -> 7 -> 10 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	((_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 40 -> 9)
	(60 + 40 -> 60 + 9)
	(40 -> 9 -> 7)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(40 -> 9 -> 14 -> 6)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s27_ExGntd_reg && (_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w3	(_s27_ExGntd_reg && (_s21_Chan3_reg_1_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s25_CurCmd_reg == 3'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 38 -> 12)
	(43 + 38 -> 43 + 12)
	(38 -> 12 -> 8)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next == _s25_CurCmd_reg$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s11_Chan1_reg_2_Cmd$next != _s9_Chan1_reg_1_Cmd$next)
		(added cond. from num.)	(_s25_CurCmd_reg$next != _s9_Chan1_reg_1_Cmd$next)
	(38 -> 12 -> 18 -> 7)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s27_ExGntd_reg && (_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg))
		[1] w3	(_s27_ExGntd_reg && (_s23_Chan3_reg_2_Cmd != _s15_Chan2_reg_1_Cmd) && (_s4_Cache_reg_1_State == 2'd2) && (_s9_Chan1_reg_1_Cmd == 3'd1) && (_s11_Chan1_reg_2_Cmd == 3'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && (_s11_Chan1_reg_2_Cmd == _s25_CurCmd_reg) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 8	: 0 5 9 14 10 12 12 7 3 s: 72
[RES_0]    L  8 : 0 10 24 41 33 48 61 42 17 s: 276, mem: 21, time: 1.2618
---------------------------------------------------------------------------------------------
Loop_8_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 35	(35 + 0 + 0 + 0 + 0)
	(concrete cube) 35	(35 + 0 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #38
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 40	(40 + 0 + 0 + 0 + 0)
	(concrete cube) 40	(40 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 61	(61 + 0 + 0 + 0 + 0)
	(concrete cube) 61	(61 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #30
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 32	(32 + 0 + 0 + 0 + 0)
	(concrete cube) 32	(32 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 32 -> 3)
	(104 + 32 -> 104 + 3)
	(32 -> 3 -> 1)
	(32 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s15_Chan2_reg_1_Cmd == 3'd6)
		[1] w3	((_s15_Chan2_reg_1_Cmd == 3'd6) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 61 -> 1)
	(91 + 61 -> 91 + 1)
	(61 -> 1 -> 1)
	(61 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_Cache_reg_1_State == 2'd2)
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 40 -> 4)
	(80 + 40 -> 80 + 4)
	(40 -> 4 -> 3)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
	(40 -> 4 -> 8 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #30
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 57	(57 + 0 + 0 + 0 + 0)
	(concrete cube) 57	(57 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #26
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #26
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 28	(28 + 0 + 0 + 0 + 0)
	(concrete cube) 28	(28 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 28 -> 5)
	(93 + 28 -> 93 + 5)
	(28 -> 5 -> 1)
	(28 -> 5 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s15_Chan2_reg_1_Cmd == 3'd6)
		[1] w3	((_s15_Chan2_reg_1_Cmd == 3'd6) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 57 -> 1)
	(82 + 57 -> 82 + 1)
	(57 -> 1 -> 1)
	(57 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_Cache_reg_1_State == 2'd2)
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 36 -> 4)
	(64 + 36 -> 64 + 4)
	(36 -> 4 -> 3)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
	(36 -> 4 -> 8 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #27
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #27
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 54	(54 + 0 + 0 + 0 + 0)
	(concrete cube) 54	(54 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #26
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #26
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 28	(28 + 0 + 0 + 0 + 0)
	(concrete cube) 28	(28 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 28 -> 8)
	(84 + 28 -> 84 + 8)
	(28 -> 8 -> 1)
	(28 -> 8 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s15_Chan2_reg_1_Cmd == 3'd6)
		[1] w3	((_s15_Chan2_reg_1_Cmd == 3'd6) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 54 -> 1)
	(66 + 54 -> 66 + 1)
	(54 -> 1 -> 1)
	(54 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_Cache_reg_1_State == 2'd2)
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 35 -> 4)
	(46 + 35 -> 46 + 4)
	(35 -> 4 -> 3)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next == _s16_Chan2_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s4_Cache_reg_1_State$next != _s3_Cache_reg_1_Data$next)
		(added cond. from num.)	(_s16_Chan2_reg_1_Data$next != _s3_Cache_reg_1_Data$next)
	(35 -> 4 -> 8 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_Cache_reg_1_State == 2'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data))
		[1] w2	((_s4_Cache_reg_1_State == 2'd2) && (_s16_Chan2_reg_1_Data != _s3_Cache_reg_1_Data) && !((!(_s36_$formal$./protocol.sv:8997$383_EN) && _s37_id86)))
[RES_1]       0	: 8	: 0 5 9 14 9 5 1 1 2 s: 46
[RES_0]    L  8 : 0 10 24 41 31 23 2 2 5 s: 138, mem: 21, time: 1.32108
---------------------------------------------------------------------------------------------
Loop_8_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: UNSAT
[RES_1]       0	: 8	: 0 5 9 14 9 5 1 1 2 s: 46
[RES_0]    L  8 : 0 10 24 41 31 23 2 2 5 s: 138, mem: 21, time: 1.32116
	[Forward propagation]:
		Property holds
[RES_1]       0	: 8	: 0 5 9 14 9 5 0 2 2 s: 46
[RES_0]    L  8 : 0 10 24 41 31 23 0 4 5 s: 138, mem: 21, time: 1.34121

-----------
Refinements
-----------
[1]	((_i2_reset || b$89) && (_i2_reset$next || b$89$next))
[2]	!(_s37_id86$next)
-----------
[RES_0]    refinement-lemmas-check successful!
F[0]	c#0
F[1]	c#5
F[2]	c#9
F[3]	c#14
F[4]	c#9
F[5]	c#5
F[6]	c#0
F[7]	c#2
F[8]	c#2
F[9]	c#0


[RES_0]    reachability-lemmas-check successful!
[RES_0]    initial-state-check successful!
[RES_0]    property-check successful!
[RES_0]    inductive-invariant-check successful!
 s: 138, mem: 21, time: 1.35
Frames explored (0 datapath refinements) : 

CEXT lengths (0 feasibility checks) : 

DP lemmas (0 feasibility checks) : 

Block= 29 BlockT= 37 BlockS= 29 BlockU= 8 Oblig= 215 ObligT= 215 ObligS= 93 ObligU= 122 FPT= 258 FPS= 241 FPU= 17 CallT= 2617 CallS= 1550 CallU= 1067 MUST= 122 MUSS= 0 MUSU= 122 sMUST= 0 sMUSS= 0 sMUSU= 0 dMUST= 0 dMUSS= 0 dMUSU= 0 rMUST= 1437 rMUSS= 614 rMUSU= 823 All_clauses= 122 All_literals= 461 Clauses= 46 Literals= 138 DPLemmas= 0 DPrefsNoDPL= 0 DPRefs= 0

pme_fail: 0, pme_succ: 0, lit_before: 0, lit_after: 0
coi_before: 0, coi_after: 0
mus_before: 4654 mus_lit: 339 mus_cls: 122 mus_cnt: 122
S+M	Call = 2739 (sat=1550, 56.59%)
SAT	Call = 2617 (sat=1550, 59.23%)
MUS	Call = 122 (sat=0, 0.00%)

Detailed Stats:

  (reachability)
	#Frame Restrictions:	122
	#TB                :	122
	#cubes-subsumed    :	76
	#context reset     :	0
	#Y2 reset          :	0
	#frame solver reset:	8
	avg-sz-frame-restriction:  	3.78

	avg-sz-ab-cube:  	38.15
		%t1-ab-cube:   	100.00%	[sel: 100.00% ]
		%t2-ab-cube:   	0.00%	[sel: 0.00% ]
		%t3-ab-cube:   	0.00%	[sel: 0.00% ]
		%t4-ab-cube:   	0.00%	[sel: 0.00% ]

		ab-cube info:	
			s == s:	4.30%	[sel: 9.11% ]
			s == n:	38.18%	[sel: 40.78% ]
			s == o:	0.00%	[sel: 0.00% ]
			n == o:	0.00%	[sel: 0.00% ]
			o == o:	0.00%	[sel: 0.00% ]
			s != s:	9.20%	[sel: 21.04% ]
			s != n:	27.33%	[sel: 1.74% ]
			s != o:	0.00%	[sel: 0.00% ]
			n != o:	0.00%	[sel: 0.00% ]
			o != o:	0.00%	[sel: 0.00% ]
			s bool:	14.87%	[sel: 0.87% ]
			up    :	6.12%	[sel: 26.46% ]
			oth   :	0.00%	[sel: 0.00% ]

		%coi-ab-cube  :	100.00%	[sel: 100.00% ]
			s (==):	4.30%	[sel: 9.11% ]
			s (!=):	9.20%	[sel: 21.04% ]
			n (==):	38.18%	[sel: 40.78% ]
			n (!=):	27.33%	[sel: 1.74% ]
			other :	20.99%	[sel: 27.33% ]
		%pred-ab-cube :	0.00%	[sel: 0.00% ]
		%fproj-ab-cube:	0.00%	[sel: 0.00% ]
			s (==):	0.00%	[sel: 0.00% ]
			s (!=):	0.00%	[sel: 0.00% ]
			n (==):	0.00%	[sel: 0.00% ]
			n (!=):	0.00%	[sel: 0.00% ]
		%proj-ab-cube :	0.00%	[sel: 0.00% ]
			s (==):	0.00%	[sel: 0.00% ]
			s (!=):	0.00%	[sel: 0.00% ]
			n (==):	0.00%	[sel: 0.00% ]
			n (!=):	0.00%	[sel: 0.00% ]
		%subs-ab-cube :	0.00%	[sel: 0.00% ]
	avg-#sv-ab-cube:  	24.00
	avg-tsb-ab-cube:  	50.00
	relevancy:       	96.93%

	avg-sz-cc-cube:  	38.00
		%coi-cc-cube  :	100.00%
		%pred-cc-cube :	0.00%
		%fproj-cc-cube:	0.00%
			s (==):	0.00%
			s (!=):	0.00%
			n (==):	0.00%
			n (!=):	0.00%
		%proj-cc-cube :	0.00%
			s (==):	0.00%
			s (!=):	0.00%
			n (==):	0.00%
			n (!=):	0.00%

	tb_cube_time:     	0.15 (11.47%)
		cube_eval_time: 	0.08 (5.86%)
		cube_pred_time: 	0.00 (0.01%)
		cube_fproj_time:	0.00 (0.00%)
		cube_proj_time: 	0.00 (0.00%)
		cube _subs_time:	0.00 (0.01%)
		sum:            	0.08 (51.33% of tb_cube_time)

	tb_ct_time:      	0.05 (3.62%)
		ct isblocked_time:  	0.00 (0.00%)
		ct isinitial_time:  	0.03 (2.41%)
		ct containment_time:	0.00 (0.03%)
		ct fastforward_time:	0.00 (0.00%)
		sum:                	0.03 (67.41% of tb_ct_time)

	setcontain_time:	0.00 (0.00%)

	updatesolver_time:	0.01 (0.71%)

	tb_time:	1.21 (89.94%)
		tb_reach_time:    	0.17 (12.36%)
		tb_val_time:    	0.02 (1.34%) [ cti_val_time: 140734136.13 (10456336706.91%) ]
		tb_cube_time:      	0.15 (11.47%)
		tb_mus_time:      	0.77 (56.85%)
			tb_mus_core_time:      	0.11 (8.11%)
			tb_mus_min_time:      	0.64 (47.75%)
		tb_ct_time:       	0.05 (3.62%)
		tb_extra_time:    	0.00 (0.00%)
		sum:           	1.13 (93.72% of tb_time)


  (refinement)
	sim_time:		0.00 (0.00%) 	 [-nan% of dpr_time]

  pre_time:	0.00 (0.22%)
  cti_time:	0.01 (0.40%)	[cti_i_time:	0.00 (0.13%) ]
  tb_time:	1.21 (89.94%)
  fp_time:	0.10 (7.78%)	[fp_extra_time:	0.00 (0.00%) ]
  refine_time:	0.00 (0.00%)
  sol_set_time:	0.01 (0.51%)
  inv_time:	0.00 (0.34%)	[induct_time:	0.00 (0.00%) ]
  draw_time:	0.00 (0.00%)
  sum:		1.33 (99.19%)

  extra_time:	0.00 (0.00%)

  timeout_time:	0.00 (0.00%)

[simplified] 0 (ex), 0 (cc), 0 (ot)

===     HOLD     ===

Averroes finished.

br-#mus         122           
        hard        soft         out           
           
       56.11       38.15        4.56               (br-core)           
       56.11        4.56        2.78                (br-min)          

         sat       unsat           
                                          #Calls           
           0         122   (br-core)           
           0           0  (br-core2)           
         614         701    (br-min)           
                                      Time (sec)           
        0.00        0.08   (br-core)           
        0.00        0.00  (br-core2)           
        0.14        0.44    (br-min)           
                                    Avg. Time (microsec)           
           0         628   (br-core)           
           0           0  (br-core2)           
         226         626    (br-min)           
                                    Max Time (microsec)           
           0        1772   (br-core)           
           0           0  (br-core2)           
         993        1352    (br-min)          

                      ab                      bv           
         sat       unsat         sat       unsat           
                                                      #Calls           
         142         105           0           0   (oneshot)           
        1408         840           0           0       (inc)           
           0         122           0           0    (assume)           
                       0                       0   (timeout)          

                                                  Time (sec)           
        0.00        0.00        0.00        0.00   (oneshot)           
        0.25        0.50        0.00        0.00       (inc)           
        0.00        0.08        0.00        0.00    (assume)           
                    0.00                    0.00   (timeout)          

                                                Avg. Time (microsec)
          10           8           0           0   (oneshot)           
         176         597           0           0       (inc)           
           0         621           0           0    (assume)           
                       0                       0   (timeout)           
           
      Result        Time        Mem.       #Refs           
                     sec          MB                       
           h        1.35          21           0
Timeout: 3600, Memory_limit: 64000
	10000.000000 (abstract query)
	10000.000000 (concrete query)

Config:
	(concrete bit-width limit: 0)
	(fineness: 2)
	(interpret-ex-cc-level: 2)
	(forward-check:	0)
	(full projection)
	(prioritization:	single)

#STAT# num_bits= 11 num_regs= 9 num_total_bits= 36
1  11
2  2
3  7

System
  int : 410
  bool : 477
  sum : 887
  bool_op : 407
  int_op : 11
    !  22
    !=_int  2
    &&  21
    ==  11
    ==_int  38
    ?:  123
    ?:_int  182
    |_2  2
    |_3  8
    |_5  1
    ||  8


Property
  int : 0
  bool : 26
  sum : 26
  bool_op : 11
  int_op : 0
    !  6
    &&  4
    ==  1

Partial interpretation info:
  depth: 0
  count: 0
  count (d=0): 0

  depth (prop): 0
  count (prop): 0
  count (d=0) (prop): 0

	# of Inst.                  : 948	(864 bytes each)
	  ExInst::hm_ExInst.size()  : 0	(984 bytes each)
	  SigInst::hm_SigInst.size(): 52	(904 bytes each)
	  NumInst::hm_NumInst.size(): 29	(888 bytes each)
	  OpInst::hm_OpInst.size()  : 129	(944 bytes each)
	  OpInst::hm_ITEInst.size() : 305	(944 bytes each)
	  OpInst::hm_ETCInst.size() : 8	(944 bytes each)
	Total                       : 523

	Memory (est.)               : 0.781128 MB
	  ExInst                    : 0.000000 MB
	  SigInst                   : 0.044830 MB
	  NumInst                   : 0.024559 MB
	  OpInst::OP                : 0.116135 MB
	  OpInst::ITE               : 0.274582 MB
	  OpInst::ETC               : 0.007202 MB

	(maximum function composition in T: 1)

---------------------------------------------------------------------------------------------
 Reachability Analysis Begins
---------------------------------------------------------------------------------------------
Loop_FrameNumber_#ReachabilityIterations_#RefinementIterations
---------------------------------------------------------------------------------------------
Loop_0_0_0
---------------------------------------------------------------------------------------------
[Basis Step]:
	F[0] = I
	SAT_a ? [ F[0] && !P ]: UNSAT

[First Step]:
	SAT_a ? [ F[0] & T & !P ]: UNSAT

[RES_1]       0	: 0	: 0 s: 0
[RES_0]    L  0 : 0 s: 0, mem: 13, time: 0.005166
[RES_1]       0	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 13, time: 0.005346
---------------------------------------------------------------------------------------------
Loop_1_0_0
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(10 + 4 -> 10 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_cache_reg_0 == 2'd2)
		[1] w2	((_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 1	: 0 1 s: 1
[RES_0]    L  1 : 0 2 s: 2, mem: 14, time: 0.006935
---------------------------------------------------------------------------------------------
Loop_1_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(10 + 4 -> 10 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 == 2'd2)
		[1] w2	((_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 1	: 0 2 s: 2
[RES_0]    L  1 : 0 4 s: 4, mem: 15, time: 0.007771
---------------------------------------------------------------------------------------------
Loop_1_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: UNSAT
[RES_1]       0	: 1	: 0 2 s: 2
[RES_0]    L  1 : 0 4 s: 4, mem: 15, time: 0.007837
	[Forward propagation]:
	(F1 about to converge: #2)
		((_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
		((_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 2	: 0 2 0 s: 2
[RES_0]    L  2 : 0 4 0 s: 4, mem: 15, time: 0.008361
---------------------------------------------------------------------------------------------
Loop_2_0_0
---------------------------------------------------------------------------------------------
	F[2] = P
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(10 + 4 -> 10 + 2)
	(4 -> 2 -> 2)
		(added cond. from num.)	(_s0_cache_reg_0$next == _s1_cache_reg_1$next)
	(4 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 2	: 0 2 1 s: 3
[RES_0]    L  2 : 0 4 3 s: 7, mem: 15, time: 0.009912
---------------------------------------------------------------------------------------------
Loop_2_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(11 + 4 -> 11 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_channel2_4_reg_0 == 3'd6)
		[1] w3	((_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(12 + 4 -> 12 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_cache_reg_0 == 2'd2)
		[1] w2	((_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 2	: 0 2 1 s: 3
[RES_0]    L  2 : 0 4 2 s: 6, mem: 15, time: 0.011836
---------------------------------------------------------------------------------------------
Loop_2_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(12 + 4 -> 12 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel2_4_reg_1 == 3'd6)
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(14 + 4 -> 14 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 == 2'd2)
		[1] w2	((_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 2	: 0 2 2 s: 4
[RES_0]    L  2 : 0 4 4 s: 8, mem: 15, time: 0.013645
---------------------------------------------------------------------------------------------
Loop_2_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: UNSAT
[RES_1]       0	: 2	: 0 2 2 s: 4
[RES_0]    L  2 : 0 4 4 s: 8, mem: 15, time: 0.013708
	[Forward propagation]:
	(F1 about to converge: #2)
		((_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
		((_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	(F2 about to converge: #2)
		((_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
		((_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 3	: 0 2 2 0 s: 4
[RES_0]    L  3 : 0 4 4 0 s: 8, mem: 15, time: 0.014597
---------------------------------------------------------------------------------------------
Loop_3_0_0
---------------------------------------------------------------------------------------------
	F[3] = P
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(11 + 4 -> 11 + 2)
	(4 -> 2 -> 2)
		(added cond. from num.)	(_s0_cache_reg_0$next == _s1_cache_reg_1$next)
	(4 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 3	: 0 2 2 1 s: 5
[RES_0]    L  3 : 0 4 4 3 s: 11, mem: 15, time: 0.015734
---------------------------------------------------------------------------------------------
Loop_3_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 1)
	(16 + 10 -> 16 + 1)
	(10 -> 1 -> 1)
	(10 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s9_home_current_command_reg == 3'd2)
		[1] w3	((_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(18 + 4 -> 18 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_channel2_4_reg_0 == 3'd6)
		[1] w3	((_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(13 + 4 -> 13 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_cache_reg_0 == 2'd2)
		[1] w2	((_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 3	: 0 2 2 1 s: 5
[RES_0]    L  3 : 0 4 4 2 s: 10, mem: 15, time: 0.019252
---------------------------------------------------------------------------------------------
Loop_3_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(21 + 4 -> 21 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel2_4_reg_1 == 3'd6)
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(15 + 4 -> 15 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 == 2'd2)
		[1] w2	((_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 3	: 0 1 2 2 s: 5
[RES_0]    L  3 : 0 2 4 4 s: 10, mem: 15, time: 0.021144
---------------------------------------------------------------------------------------------
Loop_3_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: UNSAT
[RES_1]       0	: 3	: 0 1 2 2 s: 5
[RES_0]    L  3 : 0 2 4 4 s: 10, mem: 15, time: 0.021208
	[Forward propagation]:
	(F1 about to converge: #1)
		((_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	(F2 about to converge: #2)
		((_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
		((_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	(F3 about to converge: #2)
		((_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
		((_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 4	: 0 1 2 2 0 s: 5
[RES_0]    L  4 : 0 2 4 4 0 s: 10, mem: 15, time: 0.022419
---------------------------------------------------------------------------------------------
Loop_4_0_0
---------------------------------------------------------------------------------------------
	F[4] = P
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(11 + 4 -> 11 + 2)
	(4 -> 2 -> 2)
		(added cond. from num.)	(_s0_cache_reg_0$next == _s1_cache_reg_1$next)
	(4 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 4	: 0 1 2 2 1 s: 6
[RES_0]    L  4 : 0 2 4 4 3 s: 13, mem: 15, time: 0.02355
---------------------------------------------------------------------------------------------
Loop_4_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(17 + 13 -> 17 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s9_home_current_command_reg != _s4_channel2_4_reg_0)
		[1] w3	((_s9_home_current_command_reg != _s4_channel2_4_reg_0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 11 -> 1)
	(17 + 11 -> 17 + 1)
	(11 -> 1 -> 1)
	(11 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s2_channel1_reg_0 == 3'd2)
		[1] w3	((_s2_channel1_reg_0 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(30 + 10 -> 30 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(19 + 4 -> 19 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_channel2_4_reg_0 == 3'd6)
		[1] w3	((_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(13 + 4 -> 13 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_cache_reg_0 == 2'd2)
		[1] w2	((_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 4	: 0 3 2 2 1 s: 8
[RES_0]    L  4 : 0 6 5 4 2 s: 17, mem: 15, time: 0.030745
---------------------------------------------------------------------------------------------
Loop_4_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(18 + 13 -> 18 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel2_4_reg_1 != _s9_home_current_command_reg)
		[1] w3	((_s5_channel2_4_reg_1 != _s9_home_current_command_reg) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 11 -> 1)
	(18 + 11 -> 18 + 1)
	(11 -> 1 -> 1)
	(11 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s3_channel1_reg_1 == 3'd2)
		[1] w3	((_s3_channel1_reg_1 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(35 + 10 -> 35 + 2)
	(10 -> 2 -> 1)
	(10 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s9_home_current_command_reg == 3'd2)
		[1] w3	((_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(23 + 4 -> 23 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel2_4_reg_1 == 3'd6)
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(15 + 4 -> 15 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 == 2'd2)
		[1] w2	((_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 4	: 0 4 1 2 2 s: 9
[RES_0]    L  4 : 0 8 2 4 4 s: 18, mem: 15, time: 0.037263
---------------------------------------------------------------------------------------------
Loop_4_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: UNSAT
[RES_1]       0	: 4	: 0 4 1 2 2 s: 9
[RES_0]    L  4 : 0 8 2 4 4 s: 18, mem: 15, time: 0.037333
	[Forward propagation]:
	(F2 about to converge: #1)
		((_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	(F3 about to converge: #2)
		((_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
		((_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	(F4 about to converge: #2)
		((_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
		((_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 5	: 0 4 1 2 2 0 s: 9
[RES_0]    L  5 : 0 8 2 4 4 0 s: 18, mem: 16, time: 0.040128
---------------------------------------------------------------------------------------------
Loop_5_0_0
---------------------------------------------------------------------------------------------
	F[5] = P
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(11 + 4 -> 11 + 2)
	(4 -> 2 -> 2)
		(added cond. from num.)	(_s0_cache_reg_0$next == _s1_cache_reg_1$next)
	(4 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       0	: 5	: 0 4 1 2 2 1 s: 10
[RES_0]    L  5 : 0 8 2 4 4 3 s: 21, mem: 16, time: 0.041247
---------------------------------------------------------------------------------------------
Loop_5_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(40 + 13 -> 40 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 == 3'd2) && (_s9_home_current_command_reg != _s4_channel2_4_reg_0))
		[1] w3	((_s2_channel1_reg_0 == 3'd2) && (_s9_home_current_command_reg != _s4_channel2_4_reg_0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 14 -> 1)
	(18 + 14 -> 18 + 1)
	(14 -> 1 -> 1)
	(14 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s2_channel1_reg_0 != _s4_channel2_4_reg_0)
		[1] w3	((_s2_channel1_reg_0 != _s4_channel2_4_reg_0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(18 + 12 -> 18 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_cache_reg_0 == 2'd1)
		[1] w2	((_s0_cache_reg_0 == 2'd1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(18 + 13 -> 18 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_cache_reg_0 != _s1_cache_reg_1)
		[1] w2	((_s0_cache_reg_0 != _s1_cache_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding required pred. from inp_c to ab. cube) #1
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 1	(1 + 0 + 0 + 0 + 0)
	(concrete cube) 1	(1 + 0 + 0 + 0)
		(Next: ((_s0_cache_reg_0$next == _s0_cache_reg_0$next_rhs) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_channel1_reg_0$next == _s2_channel1_reg_0$next_rhs) && (_s4_channel2_4_reg_0$next == _s4_channel2_4_reg_0$next_rhs) && (_s9_home_current_command_reg$next == _s9_home_current_command_reg$next_rhs) && (_s13_home_sharer_list_reg_0$next == _s13_home_sharer_list_reg_0$next_rhs) && (_s14_home_sharer_list_reg_1$next == _s14_home_sharer_list_reg_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 12)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 11)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 17)
		SAT_c ? [ A[3] & T[3] & A[2]+ ]: 		(bv input core size: 28)
		SAT_c ? [ A[4] & T[4] & A[3]+ ]: 		(bv input core size: 30)
		SAT_c ? [ A[5] & T[5] & A[4]+ ]: 		(bv input core size: 21)

	[Simulation check]: 
[Sim_1]    =========== Simulation Begins ===============
	1: A[5]

	2: A[4]

	3: A[3]

	4: A[2]

	5: A[1]
[1] Cube to CubeNext+ is UNSAT

		(cc core: 71 -> 3)
resMusBv: 1
		ACEXT is infeasible
			(unsat: A[1] to A[0] )
[Sim_1]    Adding lemma to ensure following never happens: 
	(_s1_cache_reg_1 == 2'd0)
	(_i1_io_en_a == 5'd7)
	ReductionOr_1_2(_s1_cache_reg_1$next)
	(_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs)

[Sim_1]    Processing failure condition: 
	(_s1_cache_reg_1 == 2'd0)
	(_i1_io_en_a == 5'd7)
	ReductionOr_1_2(_s1_cache_reg_1$next)
	(_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs)

			(adding predicate (absent)   (_i1_io_en_a == 5'd7) )
			(finding parent expressions)	(_i1_io_en_a == 5'd7)
				(parent expression)
					(_i1_io_en_a == 5'd7) := (_i1_io_en_a == 5'd7)
						(learning signal    _i1_io_en_a )
						(learning constant  5'd7 )
			(adding predicate (absent)   (_s1_cache_reg_1 == 2'd0) )
			(finding parent expressions)	(_s1_cache_reg_1 == 2'd0)
				(number value parent)	2'd0	:=	_s1_cache_reg_1
				(parent expression)
					(_s1_cache_reg_1 == 2'd0) := (_s1_cache_reg_1 == _s1_cache_reg_1)
						(learning signal    _s1_cache_reg_1 )
						(learning constant  2'd0 )
[Sim_1]    =========== Simulation Ends ===============

	[Lemmas]: 
		[1] !((((_s1_cache_reg_1 == 2'd0) || (_s1_cache_reg_1 != 2'd0)) && (_s1_cache_reg_1 == 2'd0) && ((_i1_io_en_a == 5'd7) || (_i1_io_en_a != 5'd7)) && b$1817 && ReductionOr_1_2(_s1_cache_reg_1$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs)))
#1461
#Lemmas = 3
[RES_1]       1	: 5	: 0 7 2 2 2 1 s: 14
[RES_0]    L  5 : 0 14 5 4 4 3 s: 30, mem: 18, time: 0.078836
---------------------------------------------------------------------------------------------
Loop_5_0_1
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(19 + 13 -> 19 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 != 2'd0)
		[1] w2	((_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(46 + 12 -> 46 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s2_channel1_reg_0 == 3'd2))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s2_channel1_reg_0 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(33 + 11 -> 33 + 3)
	(11 -> 3 -> 3)
	(11 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && (_s1_cache_reg_1 != 2'd0) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s8_home_current_client_reg) && (_s1_cache_reg_1 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(20 + 5 -> 20 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(14 + 6 -> 14 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s0_cache_reg_0 == 2'd2))
		[1] w2	((_s1_cache_reg_1 != 2'd0) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       1	: 5	: 0 8 3 3 3 2 s: 19
[RES_0]    L  5 : 0 16 8 8 7 6 s: 45, mem: 18, time: 0.087826
---------------------------------------------------------------------------------------------
Loop_5_1_1
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(15 + 5 -> 15 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (ReductionOr_1_2(_s1_cache_reg_1) && (_s0_cache_reg_0 == 2'd2))
		[1] w2	(ReductionOr_1_2(_s1_cache_reg_1) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       1	: 5	: 0 8 3 3 3 3 s: 20
[RES_0]    L  5 : 0 16 8 8 7 9 s: 48, mem: 18, time: 0.089434
---------------------------------------------------------------------------------------------
Loop_5_2_1
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 16 -> 2)
	(52 + 16 -> 52 + 2)
	(16 -> 2 -> 2)
	(16 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == _s1_cache_reg_1) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	((_s0_cache_reg_0 == _s1_cache_reg_1) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(38 + 13 -> 38 + 3)
	(13 -> 3 -> 3)
	(13 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg == 3'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s9_home_current_command_reg == 3'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(25 + 6 -> 25 + 3)
	(6 -> 3 -> 3)
	(6 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s0_cache_reg_0 == _s1_cache_reg_1) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s0_cache_reg_0 == _s1_cache_reg_1) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(55 + 17 -> 55 + 3)
	(17 -> 3 -> 2)
	(17 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s3_channel1_reg_1 == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(41 + 14 -> 41 + 3)
	(14 -> 3 -> 2)
	(14 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 8 -> 2)
	(27 + 8 -> 27 + 2)
	(8 -> 2 -> 2)
	(8 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 15 -> 3)
	(58 + 15 -> 58 + 3)
	(15 -> 3 -> 2)
	(15 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 != _s9_home_current_command_reg) && (_s3_channel1_reg_1 == 3'd2))
		[1] w3	((_s5_channel2_4_reg_1 != _s9_home_current_command_reg) && (_s3_channel1_reg_1 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(59 + 13 -> 59 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s3_channel1_reg_1 == 3'd2))
		[1] w3	((_s0_cache_reg_0 != 2'd0) && (_s3_channel1_reg_1 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(45 + 12 -> 45 + 3)
	(12 -> 3 -> 3)
	(12 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_home_current_client_reg && (_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(_s8_home_current_client_reg && (_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(29 + 6 -> 29 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(19 + 6 -> 19 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	((_s0_cache_reg_0 != 2'd0) && (_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       1	: 5	: 0 8 7 4 5 4 s: 28
[RES_0]    L  5 : 0 16 20 11 13 12 s: 72, mem: 18, time: 0.110134
---------------------------------------------------------------------------------------------
Loop_5_3_1
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 14 -> 1)
	(19 + 14 -> 19 + 1)
	(14 -> 1 -> 1)
	(14 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s3_channel1_reg_1 != _s5_channel2_4_reg_1)
		[1] w3	((_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 3	(2 + 1 + 0 + 0 + 0)
	(concrete cube) 3	(2 + 1 + 0 + 0)
		(Next: ((_s0_cache_reg_0$next == _s0_cache_reg_0$next_rhs) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s3_channel1_reg_1$next == _s3_channel1_reg_1$next_rhs) && (_s5_channel2_4_reg_1$next == _s5_channel2_4_reg_1$next_rhs) && (_s9_home_current_command_reg$next == _s9_home_current_command_reg$next_rhs) && (_s13_home_sharer_list_reg_0$next == _s13_home_sharer_list_reg_0$next_rhs) && (_s14_home_sharer_list_reg_1$next == _s14_home_sharer_list_reg_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 2)
UNSAT

		[MUS(s)]:
		[1] ((_s0_cache_reg_0 == 2'd0) && ReductionOr_1_2(_s0_cache_reg_0))

	[Lemmas]: 
		[1] !(((_s0_cache_reg_0 == 2'd0) && ReductionOr_1_2(_s0_cache_reg_0)))
#1688
		[2] !(((_s0_cache_reg_0$next == 2'd0) && ReductionOr_1_2(_s0_cache_reg_0$next)))
#1690
#Lemmas = 5
[RES_1]       3	: 5	: 0 9 7 4 5 4 s: 29
[RES_0]    L  5 : 0 18 20 11 13 12 s: 74, mem: 18, time: 0.117496
---------------------------------------------------------------------------------------------
Loop_5_0_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: UNSAT
[RES_1]       3	: 5	: 0 9 7 4 5 4 s: 29
[RES_0]    L  5 : 0 18 20 11 13 12 s: 74, mem: 18, time: 0.117588
	[Forward propagation]:
[RES_1]       3	: 6	: 0 9 7 4 5 4 0 s: 29
[RES_0]    L  6 : 0 18 20 11 13 12 0 s: 74, mem: 18, time: 0.124984
---------------------------------------------------------------------------------------------
Loop_6_0_2
---------------------------------------------------------------------------------------------
	F[6] = P
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(26 + 5 -> 26 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next == _s4_channel2_4_reg_0$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s5_channel2_4_reg_1 == _s4_channel2_4_reg_0))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s5_channel2_4_reg_1 == _s4_channel2_4_reg_0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(22 + 4 -> 22 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd6) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd6) && (_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(24 + 5 -> 24 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s0_cache_reg_0 == 2'd2))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(17 + 5 -> 17 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s0_cache_reg_0$next == _s1_cache_reg_1$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 6	: 0 9 7 4 6 5 1 s: 32
[RES_0]    L  6 : 0 18 20 11 16 15 3 s: 83, mem: 18, time: 0.135842
---------------------------------------------------------------------------------------------
Loop_6_1_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #18
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #18
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 20	(20 + 0 + 0 + 0 + 0)
	(concrete cube) 20	(20 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 20 -> 2)
	(52 + 20 -> 52 + 2)
	(20 -> 2 -> 2)
	(20 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	((_s0_cache_reg_0 != 2'd0) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 18 -> 2)
	(53 + 18 -> 53 + 2)
	(18 -> 2 -> 2)
	(18 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg != _s4_channel2_4_reg_0) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s9_home_current_command_reg != _s4_channel2_4_reg_0) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(44 + 14 -> 44 + 3)
	(14 -> 3 -> 3)
	(14 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 == 3'd2) && (_s9_home_current_command_reg != _s4_channel2_4_reg_0) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s2_channel1_reg_0 == 3'd2) && (_s9_home_current_command_reg != _s4_channel2_4_reg_0) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 15 -> 2)
	(55 + 15 -> 55 + 2)
	(15 -> 2 -> 2)
	(15 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 != _s4_channel2_4_reg_0) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s2_channel1_reg_0 != _s4_channel2_4_reg_0) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 1)
	(21 + 10 -> 21 + 1)
	(10 -> 1 -> 1)
	(10 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel2_4_reg_1 == 3'd5)
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(57 + 13 -> 57 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 != 2'd0)
		[1] w2	((_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(58 + 11 -> 58 + 2)
	(11 -> 2 -> 2)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s2_channel1_reg_0$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s2_channel1_reg_0$next)
	(11 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd5) && (_s2_channel1_reg_0 == 3'd2))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && (_s2_channel1_reg_0 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(48 + 12 -> 48 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s2_channel1_reg_0 == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(49 + 11 -> 49 + 3)
	(11 -> 3 -> 3)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
	(11 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && (_s5_channel2_4_reg_1 == 3'd5) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s8_home_current_client_reg) && (_s5_channel2_4_reg_1 == 3'd5) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(37 + 11 -> 37 + 4)
	(11 -> 4 -> 3)
	(11 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	(!(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(38 + 5 -> 38 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
	(5 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd5) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(28 + 5 -> 28 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd6) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd6) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(29 + 5 -> 29 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd5) && (_s0_cache_reg_0 == 2'd2))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(20 + 6 -> 20 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 6	: 0 9 6 6 7 6 2 s: 36
[RES_0]    L  6 : 0 18 16 18 20 18 6 s: 96, mem: 19, time: 0.172951
---------------------------------------------------------------------------------------------
Loop_6_2_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(21 + 5 -> 21 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (ReductionOr_1_2(_s1_cache_reg_1) && (_s0_cache_reg_0 == 2'd2))
		[1] w2	(ReductionOr_1_2(_s1_cache_reg_1) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 6	: 0 9 6 6 7 5 3 s: 36
[RES_0]    L  6 : 0 18 16 18 20 15 9 s: 96, mem: 19, time: 0.174192
---------------------------------------------------------------------------------------------
Loop_6_3_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(67 + 13 -> 67 + 2)
	(13 -> 2 -> 2)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
	(13 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd5) && (_s3_channel1_reg_1 == 3'd2))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd5) && (_s3_channel1_reg_1 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(57 + 12 -> 57 + 3)
	(12 -> 3 -> 3)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
	(12 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd5) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(_s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd5) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(44 + 5 -> 44 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
	(5 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd5) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd5) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(33 + 4 -> 33 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd5) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd5) && (_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(61 + 17 -> 61 + 3)
	(17 -> 3 -> 3)
	(17 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s3_channel1_reg_1 == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s0_cache_reg_0 != 2'd0) && (_s3_channel1_reg_1 == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 14 -> 5)
	(47 + 14 -> 47 + 5)
	(14 -> 5 -> 3)
	(14 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(35 + 8 -> 35 + 3)
	(8 -> 3 -> 3)
	(8 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 18 -> 1)
	(74 + 18 -> 74 + 1)
	(18 -> 1 -> 1)
	(18 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_cache_reg_0 != 2'd0)
		[1] w2	((_s0_cache_reg_0 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 15 -> 2)
	(65 + 15 -> 65 + 2)
	(15 -> 2 -> 2)
	(15 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 == 3'd2) && (_s0_cache_reg_0 != 2'd0))
		[1] w3	((_s3_channel1_reg_1 == 3'd2) && (_s0_cache_reg_0 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(50 + 12 -> 50 + 5)
	(12 -> 5 -> 3)
	(12 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_home_current_client_reg && (_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(_s8_home_current_client_reg && (_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(37 + 6 -> 37 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(25 + 6 -> 25 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	((_s0_cache_reg_0 != 2'd0) && (_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 6	: 0 9 7 7 9 6 4 s: 42
[RES_0]    L  6 : 0 18 18 21 28 18 12 s: 115, mem: 19, time: 0.203266
---------------------------------------------------------------------------------------------
Loop_6_4_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: UNSAT
[RES_1]       3	: 6	: 0 9 7 7 9 6 4 s: 42
[RES_0]    L  6 : 0 18 18 21 28 18 12 s: 115, mem: 19, time: 0.203361
	[Forward propagation]:
[RES_1]       3	: 7	: 0 7 9 7 9 6 4 0 s: 42
[RES_0]    L  7 : 0 14 22 21 28 18 12 0 s: 115, mem: 19, time: 0.218958
---------------------------------------------------------------------------------------------
Loop_7_0_2
---------------------------------------------------------------------------------------------
	F[7] = P
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(53 + 11 -> 53 + 4)
	(11 -> 4 -> 2)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
	(11 -> 4 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd6) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd6) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(54 + 11 -> 54 + 4)
	(11 -> 4 -> 2)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
	(11 -> 4 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(41 + 5 -> 41 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next == _s4_channel2_4_reg_0$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s5_channel2_4_reg_1 == _s4_channel2_4_reg_0))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s5_channel2_4_reg_1 == _s4_channel2_4_reg_0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(46 + 11 -> 46 + 4)
	(11 -> 4 -> 2)
	(11 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg == 3'd2) && (_s0_cache_reg_0 == 2'd2))
		[1] w3	((_s9_home_current_command_reg == 3'd2) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(29 + 5 -> 29 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s0_cache_reg_0 == 2'd2))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(48 + 10 -> 48 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	((_s1_cache_reg_1 == 2'd2) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(32 + 4 -> 32 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd6) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd6) && (_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(17 + 5 -> 17 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s0_cache_reg_0$next == _s1_cache_reg_1$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 7	: 0 7 9 7 10 7 5 1 s: 46
[RES_0]    L  7 : 0 14 22 21 31 21 15 3 s: 127, mem: 19, time: 0.239589
---------------------------------------------------------------------------------------------
Loop_7_1_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #19
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #19
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 21	(21 + 0 + 0 + 0 + 0)
	(concrete cube) 21	(21 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 21 -> 3)
	(89 + 21 -> 89 + 3)
	(21 -> 3 -> 2)
	(21 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 != _s4_channel2_4_reg_0) && (_s5_channel2_4_reg_1 == 3'd5))
		[1] w3	((_s2_channel1_reg_0 != _s4_channel2_4_reg_0) && (_s5_channel2_4_reg_1 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 4)
	(90 + 17 -> 90 + 4)
	(17 -> 4 -> 2)
	(17 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd5))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 16 -> 5)
	(81 + 16 -> 81 + 5)
	(16 -> 5 -> 3)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s2_channel1_reg_0$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s2_channel1_reg_0$next)
	(16 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s2_channel1_reg_0 == 3'd2) && (_s5_channel2_4_reg_1 == 3'd5))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && (_s2_channel1_reg_0 == 3'd2) && (_s5_channel2_4_reg_1 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(62 + 12 -> 62 + 5)
	(12 -> 5 -> 4)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
	(12 -> 5 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && !(_s8_home_current_client_reg) && (_s5_channel2_4_reg_1 == 3'd5) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && !(_s8_home_current_client_reg) && (_s5_channel2_4_reg_1 == 3'd5) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(64 + 11 -> 64 + 4)
	(11 -> 4 -> 2)
	(11 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	(_s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(53 + 5 -> 53 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
	(5 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd5) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 16 -> 3)
	(85 + 16 -> 85 + 3)
	(16 -> 3 -> 2)
	(16 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd1) && !(_s14_home_sharer_list_reg_1))
		[1] w2	((_s1_cache_reg_1 == 2'd1) && !(_s14_home_sharer_list_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 18 -> 2)
	(86 + 18 -> 86 + 2)
	(18 -> 2 -> 2)
	(18 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd1) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	((_s0_cache_reg_0 == 2'd1) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #18
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #18
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 20	(20 + 0 + 0 + 0 + 0)
	(concrete cube) 20	(20 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 20 -> 2)
	(87 + 20 -> 87 + 2)
	(20 -> 2 -> 2)
	(20 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	((_s0_cache_reg_0 != 2'd0) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 18 -> 2)
	(88 + 18 -> 88 + 2)
	(18 -> 2 -> 2)
	(18 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	(!(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(71 + 14 -> 71 + 3)
	(14 -> 3 -> 3)
	(14 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s2_channel1_reg_0 == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && (_s2_channel1_reg_0 == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(55 + 11 -> 55 + 5)
	(11 -> 5 -> 4)
	(11 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && !(_s14_home_sharer_list_reg_1) && (_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	(!(_s8_home_current_client_reg) && !(_s14_home_sharer_list_reg_1) && (_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(36 + 5 -> 36 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd6) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd6) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(58 + 10 -> 58 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_home_current_client_reg && (_s0_cache_reg_0 == 2'd2))
		[1] w2	(_s8_home_current_client_reg && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(38 + 5 -> 38 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd5) && (_s0_cache_reg_0 == 2'd2))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(20 + 6 -> 20 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 7	: 0 7 11 12 12 8 6 2 s: 58
[RES_0]    L  7 : 0 14 28 37 40 26 18 6 s: 169, mem: 20, time: 0.285277
---------------------------------------------------------------------------------------------
Loop_7_2_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(21 + 5 -> 21 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (ReductionOr_1_2(_s1_cache_reg_1) && (_s0_cache_reg_0 == 2'd2))
		[1] w2	(ReductionOr_1_2(_s1_cache_reg_1) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 7	: 0 7 11 12 12 8 5 3 s: 58
[RES_0]    L  7 : 0 14 28 37 40 26 15 9 s: 169, mem: 20, time: 0.286509
---------------------------------------------------------------------------------------------
Loop_7_3_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 13 -> 5)
	(78 + 13 -> 78 + 5)
	(13 -> 5 -> 4)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
	(13 -> 5 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd5) && !(_s14_home_sharer_list_reg_1) && (_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd5) && !(_s14_home_sharer_list_reg_1) && (_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(63 + 6 -> 63 + 3)
	(6 -> 3 -> 3)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
	(6 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd5) && (_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd5) && (_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(80 + 11 -> 80 + 5)
	(11 -> 5 -> 2)
	(11 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	(!(_s8_home_current_client_reg) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #18
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #18
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 20	(20 + 0 + 0 + 0 + 0)
	(concrete cube) 20	(20 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 20 -> 4)
	(109 + 20 -> 109 + 4)
	(20 -> 4 -> 2)
	(20 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && (_s4_channel2_4_reg_0 == 3'd5))
		[1] w3	((_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && (_s4_channel2_4_reg_0 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 16 -> 5)
	(110 + 16 -> 110 + 5)
	(16 -> 5 -> 2)
	(16 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s4_channel2_4_reg_0 == 3'd5))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && (_s4_channel2_4_reg_0 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 16 -> 5)
	(101 + 16 -> 101 + 5)
	(16 -> 5 -> 3)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
	(16 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s3_channel1_reg_1 == 3'd2) && (_s4_channel2_4_reg_0 == 3'd5))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && (_s3_channel1_reg_1 == 3'd2) && (_s4_channel2_4_reg_0 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(82 + 12 -> 82 + 5)
	(12 -> 5 -> 4)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
	(12 -> 5 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd5) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd5) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(66 + 5 -> 66 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
	(5 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd5) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd5) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 9 -> 2)
	(67 + 9 -> 67 + 2)
	(9 -> 2 -> 2)
	(9 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	(!(_s8_home_current_client_reg) && (_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(44 + 4 -> 44 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s4_channel2_4_reg_0 == 3'd5))
		[1] w3	((_s1_cache_reg_1 == 2'd2) && (_s4_channel2_4_reg_0 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 17 -> 4)
	(87 + 17 -> 87 + 4)
	(17 -> 4 -> 4)
	(17 -> 4 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 == 3'd2) && !(_s14_home_sharer_list_reg_1) && (_s0_cache_reg_0 != 2'd0) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s3_channel1_reg_1 == 3'd2) && !(_s14_home_sharer_list_reg_1) && (_s0_cache_reg_0 != 2'd0) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 14 -> 5)
	(70 + 14 -> 70 + 5)
	(14 -> 5 -> 4)
	(14 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && (_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(46 + 8 -> 46 + 3)
	(8 -> 3 -> 3)
	(8 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 18 -> 2)
	(109 + 18 -> 109 + 2)
	(18 -> 2 -> 2)
	(18 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s0_cache_reg_0 != 2'd0))
		[1] w2	(!(_s13_home_sharer_list_reg_0) && (_s0_cache_reg_0 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 15 -> 4)
	(91 + 15 -> 91 + 4)
	(15 -> 4 -> 3)
	(15 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s3_channel1_reg_1 == 3'd2) && (_s0_cache_reg_0 != 2'd0))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && (_s3_channel1_reg_1 == 3'd2) && (_s0_cache_reg_0 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 6)
	(73 + 12 -> 73 + 6)
	(12 -> 6 -> 4)
	(12 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(48 + 6 -> 48 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(25 + 6 -> 25 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s0_cache_reg_0 != 2'd0))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s0_cache_reg_0 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 7	: 0 7 13 14 16 10 6 4 s: 70
[RES_0]    L  7 : 0 14 34 44 59 36 18 12 s: 217, mem: 20, time: 0.342525
---------------------------------------------------------------------------------------------
Loop_7_4_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: UNSAT
[RES_1]       3	: 7	: 0 7 13 14 16 10 6 4 s: 70
[RES_0]    L  7 : 0 14 34 44 59 36 18 12 s: 217, mem: 20, time: 0.342621
	[Forward propagation]:
[RES_1]       3	: 8	: 0 7 13 14 16 10 6 4 0 s: 70
[RES_0]    L  8 : 0 14 34 44 59 36 18 12 0 s: 217, mem: 20, time: 0.365207
---------------------------------------------------------------------------------------------
Loop_8_0_2
---------------------------------------------------------------------------------------------
	F[8] = P
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 14 -> 4)
	(95 + 14 -> 95 + 4)
	(14 -> 4 -> 2)
	(14 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(77 + 11 -> 77 + 5)
	(11 -> 5 -> 3)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
	(11 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s4_channel2_4_reg_0 == 3'd6) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && (_s4_channel2_4_reg_0 == 3'd6) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(97 + 14 -> 97 + 3)
	(14 -> 3 -> 2)
	(14 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(79 + 11 -> 79 + 5)
	(11 -> 5 -> 3)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
	(11 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd6) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd6) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(52 + 5 -> 52 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next == _s4_channel2_4_reg_0$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s5_channel2_4_reg_1 == _s4_channel2_4_reg_0))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s5_channel2_4_reg_1 == _s4_channel2_4_reg_0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 14 -> 4)
	(82 + 14 -> 82 + 4)
	(14 -> 4 -> 2)
	(14 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s0_cache_reg_0 == 2'd2))
		[1] w2	(!(_s13_home_sharer_list_reg_0) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(58 + 11 -> 58 + 5)
	(11 -> 5 -> 3)
	(11 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s0_cache_reg_0 == 2'd2) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && (_s0_cache_reg_0 == 2'd2) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(29 + 5 -> 29 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s0_cache_reg_0 == 2'd2) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(86 + 13 -> 86 + 3)
	(13 -> 3 -> 2)
	(13 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	(!(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 10 -> 4)
	(61 + 10 -> 61 + 4)
	(10 -> 4 -> 3)
	(10 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(32 + 4 -> 32 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	((_s1_cache_reg_1 == 2'd2) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(17 + 5 -> 17 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s0_cache_reg_0$next == _s1_cache_reg_1$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 8	: 0 7 13 14 18 13 7 5 1 s: 78
[RES_0]    L  8 : 0 14 34 44 65 47 23 15 3 s: 245, mem: 20, time: 0.400644
---------------------------------------------------------------------------------------------
Loop_8_1_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #19
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #19
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 21	(21 + 0 + 0 + 0 + 0)
	(concrete cube) 21	(21 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #20
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #20
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 22	(22 + 0 + 0 + 0 + 0)
	(concrete cube) 22	(22 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 22 -> 4)
	(137 + 22 -> 137 + 4)
	(22 -> 4 -> 2)
	(22 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 != _s5_channel2_4_reg_1) && (_s2_channel1_reg_0 == 3'd2))
		[1] w3	((_s4_channel2_4_reg_0 != _s5_channel2_4_reg_1) && (_s2_channel1_reg_0 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 21 -> 4)
	(128 + 21 -> 128 + 4)
	(21 -> 4 -> 3)
	(21 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 != _s5_channel2_4_reg_1) && !(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	((_s4_channel2_4_reg_0 != _s5_channel2_4_reg_1) && !(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(139 + 17 -> 139 + 3)
	(17 -> 3 -> 3)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s3_channel1_reg_1$next)
	(17 -> 3 -> 6 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 == 3'd2) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1))
		[1] w3	((_s2_channel1_reg_0 == 3'd2) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 16 -> 5)
	(130 + 16 -> 130 + 5)
	(16 -> 5 -> 3)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s9_home_current_command_reg$next)
	(16 -> 5 -> 6 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 == 3'd1) && (_s9_home_current_command_reg == 3'd2) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1))
		[1] w3	((_s3_channel1_reg_1 == 3'd1) && (_s9_home_current_command_reg == 3'd2) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 15 -> 6)
	(109 + 15 -> 109 + 6)
	(15 -> 6 -> 3)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
	(15 -> 6 -> 6 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 == 3'd1) && (_s4_channel2_4_reg_0 == 3'd6) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1))
		[1] w3	((_s3_channel1_reg_1 == 3'd1) && (_s4_channel2_4_reg_0 == 3'd6) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(91 + 11 -> 91 + 5)
	(11 -> 5 -> 4)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
	(11 -> 5 -> 7 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg == 3'd1) && _s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd6) && (_s5_channel2_4_reg_1 != _s9_home_current_command_reg))
		[1] w3	((_s9_home_current_command_reg == 3'd1) && _s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd6) && (_s5_channel2_4_reg_1 != _s9_home_current_command_reg) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 9 -> 6)
	(92 + 9 -> 92 + 6)
	(9 -> 6 -> 4)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
	(9 -> 6 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(b$1332)) && (_s9_home_current_command_reg == 3'd1) && _s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	(!(ReductionOr_1_3(b$1332)) && (_s9_home_current_command_reg == 3'd1) && _s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #19
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #19
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 21	(21 + 0 + 0 + 0 + 0)
	(concrete cube) 21	(21 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 21 -> 4)
	(134 + 21 -> 134 + 4)
	(21 -> 4 -> 3)
	(21 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 != _s4_channel2_4_reg_0) && (_s5_channel2_4_reg_1 == 3'd5) && !(_s14_home_sharer_list_reg_1))
		[1] w3	((_s2_channel1_reg_0 != _s4_channel2_4_reg_0) && (_s5_channel2_4_reg_1 == 3'd5) && !(_s14_home_sharer_list_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(23 + 13 -> 23 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) _s8_home_current_client_reg
		[1] w1	(_s8_home_current_client_reg && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 18 -> 4)
	(147 + 18 -> 147 + 4)
	(18 -> 4 -> 1)
	(18 -> 4 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel2_4_reg_1 == 3'd5)
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 17 -> 2)
	(136 + 17 -> 136 + 2)
	(17 -> 2 -> 2)
	(17 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd5))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 16 -> 4)
	(114 + 16 -> 114 + 4)
	(16 -> 4 -> 3)
	(16 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s9_home_current_command_reg)) && !(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd5))
		[1] w3	(!(ReductionOr_1_3(_s9_home_current_command_reg)) && !(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(150 + 12 -> 150 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) _s8_home_current_client_reg
		[1] w1	(_s8_home_current_client_reg && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 18 -> 3)
	(140 + 18 -> 140 + 3)
	(18 -> 3 -> 1)
	(18 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel2_4_reg_1 == 3'd5)
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 13 -> 5)
	(117 + 13 -> 117 + 5)
	(13 -> 5 -> 2)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
	(13 -> 5 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd5) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(95 + 12 -> 95 + 5)
	(12 -> 5 -> 3)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
	(12 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd5) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd5) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(67 + 5 -> 67 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
	(5 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd5) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #18
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #18
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 20	(20 + 0 + 0 + 0 + 0)
	(concrete cube) 20	(20 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 20 -> 1)
	(144 + 20 -> 144 + 1)
	(20 -> 1 -> 1)
	(20 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 != 2'd0)
		[1] w2	((_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 18 -> 1)
	(121 + 18 -> 121 + 1)
	(18 -> 1 -> 1)
	(18 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 != 2'd0)
		[1] w2	((_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(98 + 14 -> 98 + 3)
	(14 -> 3 -> 3)
	(14 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s9_home_current_command_reg)) && !(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	(!(ReductionOr_1_3(_s9_home_current_command_reg)) && !(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(100 + 12 -> 100 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(70 + 11 -> 70 + 3)
	(11 -> 3 -> 3)
	(11 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(36 + 5 -> 36 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd6) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd6) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(103 + 13 -> 103 + 3)
	(13 -> 3 -> 3)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s5_channel2_4_reg_1$next)
	(13 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 == 3'd1) && (_s0_cache_reg_0 == 2'd2) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1))
		[1] w3	((_s3_channel1_reg_1 == 3'd1) && (_s0_cache_reg_0 == 2'd2) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 10 -> 5)
	(74 + 10 -> 74 + 5)
	(10 -> 5 -> 4)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
	(10 -> 5 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg == 3'd1) && _s8_home_current_client_reg && (_s0_cache_reg_0 == 2'd2) && (_s5_channel2_4_reg_1 != _s9_home_current_command_reg))
		[1] w3	((_s9_home_current_command_reg == 3'd1) && _s8_home_current_client_reg && (_s0_cache_reg_0 == 2'd2) && (_s5_channel2_4_reg_1 != _s9_home_current_command_reg) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 9 -> 5)
	(75 + 9 -> 75 + 5)
	(9 -> 5 -> 4)
	(9 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(b$1332)) && (_s9_home_current_command_reg == 3'd1) && _s8_home_current_client_reg && (_s0_cache_reg_0 == 2'd2))
		[1] w3	(!(ReductionOr_1_3(b$1332)) && (_s9_home_current_command_reg == 3'd1) && _s8_home_current_client_reg && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(39 + 5 -> 39 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd5) && (_s0_cache_reg_0 == 2'd2))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd5) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(20 + 6 -> 20 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 8	: 0 6 12 10 15 16 9 6 2 s: 76
[RES_0]    L  8 : 0 12 31 31 48 59 34 18 6 s: 239, mem: 21, time: 0.495292
---------------------------------------------------------------------------------------------
Loop_8_2_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(21 + 5 -> 21 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (ReductionOr_1_2(_s1_cache_reg_1) && (_s0_cache_reg_0 == 2'd2))
		[1] w2	(ReductionOr_1_2(_s1_cache_reg_1) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 8	: 0 6 12 10 15 16 9 5 3 s: 76
[RES_0]    L  8 : 0 12 31 31 48 59 34 15 9 s: 239, mem: 21, time: 0.496753
---------------------------------------------------------------------------------------------
Loop_8_3_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(109 + 12 -> 109 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(80 + 6 -> 80 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 6)
	(169 + 17 -> 169 + 6)
	(17 -> 6 -> 3)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s2_channel1_reg_0$next)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s3_channel1_reg_1$next)
	(17 -> 6 -> 6 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 == 3'd2) && (_s5_channel2_4_reg_1 != _s2_channel1_reg_0))
		[1] w3	((_s3_channel1_reg_1 == 3'd2) && (_s5_channel2_4_reg_1 != _s2_channel1_reg_0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 16 -> 4)
	(159 + 16 -> 159 + 4)
	(16 -> 4 -> 3)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s2_channel1_reg_0$next)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s9_home_current_command_reg$next)
	(16 -> 4 -> 6 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 == 3'd1) && (_s9_home_current_command_reg == 3'd2) && (_s5_channel2_4_reg_1 != _s2_channel1_reg_0))
		[1] w3	((_s2_channel1_reg_0 == 3'd1) && (_s9_home_current_command_reg == 3'd2) && (_s5_channel2_4_reg_1 != _s2_channel1_reg_0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 15 -> 4)
	(135 + 15 -> 135 + 4)
	(15 -> 4 -> 3)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s2_channel1_reg_0$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s2_channel1_reg_0$next)
	(15 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (ReductionOr_1_3(_s2_channel1_reg_0) && (_s2_channel1_reg_0 == 3'd1) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	(ReductionOr_1_3(_s2_channel1_reg_0) && (_s2_channel1_reg_0 == 3'd1) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(112 + 11 -> 112 + 5)
	(11 -> 5 -> 3)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
	(11 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg == 3'd1) && !(_s8_home_current_client_reg) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s9_home_current_command_reg == 3'd1) && !(_s8_home_current_client_reg) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(24 + 12 -> 24 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s9_home_current_command_reg == 3'd1)
		[1] w3	((_s9_home_current_command_reg == 3'd1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 18 -> 3)
	(175 + 18 -> 175 + 3)
	(18 -> 3 -> 1)
	(18 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_channel2_4_reg_0 == 3'd5)
		[1] w3	((_s4_channel2_4_reg_0 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 1)
	(176 + 17 -> 176 + 1)
	(17 -> 1 -> 1)
	(17 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s9_home_current_command_reg == 3'd1)
		[1] w3	((_s9_home_current_command_reg == 3'd1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 18 -> 3)
	(165 + 18 -> 165 + 3)
	(18 -> 3 -> 1)
	(18 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_channel2_4_reg_0 == 3'd5)
		[1] w3	((_s4_channel2_4_reg_0 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(139 + 13 -> 139 + 3)
	(13 -> 3 -> 2)
	(13 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd5))
		[1] w3	(_s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 16 -> 3)
	(140 + 16 -> 140 + 3)
	(16 -> 3 -> 2)
	(16 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s4_channel2_4_reg_0 == 3'd5))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && (_s4_channel2_4_reg_0 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(115 + 12 -> 115 + 4)
	(12 -> 4 -> 3)
	(12 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd5))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(83 + 5 -> 83 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s5_channel2_4_reg_1$next)
	(5 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 == 3'd5) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s4_channel2_4_reg_0 == 3'd5) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(117 + 12 -> 117 + 3)
	(12 -> 3 -> 3)
	(12 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (ReductionOr_1_3(_s2_channel1_reg_0) && (_s2_channel1_reg_0 == 3'd1) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	(ReductionOr_1_3(_s2_channel1_reg_0) && (_s2_channel1_reg_0 == 3'd1) && (_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 9 -> 3)
	(85 + 9 -> 85 + 3)
	(9 -> 3 -> 3)
	(9 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg == 3'd1) && !(_s8_home_current_client_reg) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s9_home_current_command_reg == 3'd1) && !(_s8_home_current_client_reg) && (_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(45 + 4 -> 45 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s4_channel2_4_reg_0 == 3'd5))
		[1] w3	((_s1_cache_reg_1 == 2'd2) && (_s4_channel2_4_reg_0 == 3'd5) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(46 + 8 -> 46 + 3)
	(8 -> 3 -> 2)
	(8 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s1_cache_reg_1 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #19
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #19
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 21	(21 + 0 + 0 + 0 + 0)
	(concrete cube) 21	(21 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 21 -> 1)
	(174 + 21 -> 174 + 1)
	(21 -> 1 -> 1)
	(21 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_cache_reg_0 != 2'd0)
		[1] w2	((_s0_cache_reg_0 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 17 -> 1)
	(148 + 17 -> 148 + 1)
	(17 -> 1 -> 1)
	(17 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_cache_reg_0 != 2'd0)
		[1] w2	((_s0_cache_reg_0 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(123 + 13 -> 123 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_home_current_client_reg && (_s0_cache_reg_0 != 2'd0))
		[1] w2	(_s8_home_current_client_reg && (_s0_cache_reg_0 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 15 -> 2)
	(124 + 15 -> 124 + 2)
	(15 -> 2 -> 2)
	(15 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s0_cache_reg_0 != 2'd0))
		[1] w2	(!(_s13_home_sharer_list_reg_0) && (_s0_cache_reg_0 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(90 + 12 -> 90 + 5)
	(12 -> 5 -> 4)
	(12 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s0_cache_reg_0 != 2'd0) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(48 + 6 -> 48 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s0_cache_reg_0 != 2'd0) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(25 + 6 -> 25 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s0_cache_reg_0 != 2'd0))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s0_cache_reg_0 != 2'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 8	: 0 6 10 8 16 19 10 7 4 s: 80
[RES_0]    L  8 : 0 12 25 23 47 69 40 21 12 s: 249, mem: 21, time: 0.569363
---------------------------------------------------------------------------------------------
Loop_8_4_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: UNSAT
[RES_1]       3	: 8	: 0 6 10 8 16 19 10 7 4 s: 80
[RES_0]    L  8 : 0 12 25 23 47 69 40 21 12 s: 249, mem: 21, time: 0.569478
	[Forward propagation]:
[RES_1]       3	: 9	: 0 6 8 7 19 19 10 7 4 0 s: 80
[RES_0]    L  9 : 0 12 21 20 54 69 40 21 12 0 s: 249, mem: 21, time: 0.594928
---------------------------------------------------------------------------------------------
Loop_9_0_2
---------------------------------------------------------------------------------------------
	F[9] = P
	SAT_a ? [ F[9] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 15 -> 3)
	(186 + 15 -> 186 + 3)
	(15 -> 3 -> 2)
		(added cond. from num.)	(_s9_home_current_command_reg$next == _s3_channel1_reg_1$next)
	(15 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg == 3'd2) && (_s9_home_current_command_reg == _s3_channel1_reg_1))
		[1] w3	((_s9_home_current_command_reg == 3'd2) && (_s9_home_current_command_reg == _s3_channel1_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 16 -> 3)
	(160 + 16 -> 160 + 3)
	(16 -> 3 -> 2)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
	(16 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 == 3'd2) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	((_s3_channel1_reg_1 == 3'd2) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(132 + 11 -> 132 + 4)
	(11 -> 4 -> 3)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
	(11 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd6) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(_s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd6) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 16 -> 2)
	(133 + 16 -> 133 + 2)
	(16 -> 2 -> 2)
	(16 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 == 3'd2) && (_s0_cache_reg_0 == 2'd2))
		[1] w3	((_s3_channel1_reg_1 == 3'd2) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(96 + 12 -> 96 + 3)
	(12 -> 3 -> 3)
	(12 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_home_current_client_reg && (_s0_cache_reg_0 == 2'd2) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(_s8_home_current_client_reg && (_s0_cache_reg_0 == 2'd2) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 14 -> 4)
	(135 + 14 -> 135 + 4)
	(14 -> 4 -> 3)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
	(14 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && (_s3_channel1_reg_1 == 3'd2) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && (_s3_channel1_reg_1 == 3'd2) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 10 -> 5)
	(98 + 10 -> 98 + 5)
	(10 -> 5 -> 4)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
		(added cond. from num.)	(_s9_home_current_command_reg$next != _s4_channel2_4_reg_0$next)
	(10 -> 5 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd6) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s4_channel2_4_reg_0 == 3'd6) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(100 + 14 -> 100 + 3)
	(14 -> 3 -> 3)
	(14 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 == 3'd2) && !(_s13_home_sharer_list_reg_0) && (_s0_cache_reg_0 == 2'd2))
		[1] w3	((_s3_channel1_reg_1 == 3'd2) && !(_s13_home_sharer_list_reg_0) && (_s0_cache_reg_0 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 11 -> 6)
	(57 + 11 -> 57 + 6)
	(11 -> 6 -> 4)
	(11 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s0_cache_reg_0 == 2'd2) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s13_home_sharer_list_reg_0) && _s8_home_current_client_reg && (_s0_cache_reg_0 == 2'd2) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 14 -> 4)
	(139 + 14 -> 139 + 4)
	(14 -> 4 -> 3)
	(14 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s9_home_current_command_reg)) && !(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	(!(ReductionOr_1_3(_s9_home_current_command_reg)) && !(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 15 -> 3)
	(196 + 15 -> 196 + 3)
	(15 -> 3 -> 2)
		(added cond. from num.)	(_s9_home_current_command_reg$next == _s2_channel1_reg_0$next)
	(15 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg == 3'd2) && (_s9_home_current_command_reg == _s2_channel1_reg_0))
		[1] w3	((_s9_home_current_command_reg == 3'd2) && (_s9_home_current_command_reg == _s2_channel1_reg_0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 16 -> 3)
	(170 + 16 -> 170 + 3)
	(16 -> 3 -> 2)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s2_channel1_reg_0$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s2_channel1_reg_0$next)
	(16 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 == 3'd2) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s2_channel1_reg_0 == 3'd2) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(141 + 12 -> 141 + 4)
	(12 -> 4 -> 3)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
	(12 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && (_s5_channel2_4_reg_1 == 3'd6) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s8_home_current_client_reg) && (_s5_channel2_4_reg_1 == 3'd6) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(104 + 11 -> 104 + 5)
	(11 -> 5 -> 4)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next != _s9_home_current_command_reg$next)
	(11 -> 5 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && !(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd6) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s8_home_current_client_reg) && !(_s14_home_sharer_list_reg_1) && (_s5_channel2_4_reg_1 == 3'd6) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(59 + 5 -> 59 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s5_channel2_4_reg_1$next == _s4_channel2_4_reg_0$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == 3'd6) && (_s5_channel2_4_reg_1 == _s4_channel2_4_reg_0))
		[1] w3	((_s5_channel2_4_reg_1 == 3'd6) && (_s5_channel2_4_reg_1 == _s4_channel2_4_reg_0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(29 + 5 -> 29 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s5_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s0_cache_reg_0 == 2'd2) && (_s5_channel2_4_reg_1 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 13 -> 4)
	(108 + 13 -> 108 + 4)
	(13 -> 4 -> 3)
	(13 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s9_home_current_command_reg)) && (_s1_cache_reg_1 == 2'd2) && !(_s14_home_sharer_list_reg_1))
		[1] w3	(!(ReductionOr_1_3(_s9_home_current_command_reg)) && (_s1_cache_reg_1 == 2'd2) && !(_s14_home_sharer_list_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 15 -> 2)
	(146 + 15 -> 146 + 2)
	(15 -> 2 -> 2)
	(15 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 == 3'd2) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s2_channel1_reg_0 == 3'd2) && (_s1_cache_reg_1 == 2'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(111 + 11 -> 111 + 4)
	(11 -> 4 -> 3)
	(11 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && (_s1_cache_reg_1 == 2'd2) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s8_home_current_client_reg) && (_s1_cache_reg_1 == 2'd2) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 10 -> 5)
	(63 + 10 -> 63 + 5)
	(10 -> 5 -> 4)
	(10 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s8_home_current_client_reg) && !(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	(!(_s8_home_current_client_reg) && !(_s14_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(32 + 4 -> 32 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	((_s1_cache_reg_1 == 2'd2) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[8] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(17 + 5 -> 17 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s0_cache_reg_0$next == _s1_cache_reg_1$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1))
		[1] w2	((_s0_cache_reg_0 == 2'd2) && (_s0_cache_reg_0 == _s1_cache_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
[RES_1]       3	: 9	: 0 6 8 9 21 25 15 8 5 1 s: 98
[RES_0]    L  9 : 0 12 21 26 60 91 63 28 15 3 s: 319, mem: 22, time: 0.68012
---------------------------------------------------------------------------------------------
Loop_9_1_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[9] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(5 + 0 + 0 + 0 + 0)
	(concrete cube) 5	(5 + 0 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #19
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #19
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 21	(21 + 0 + 0 + 0 + 0)
	(concrete cube) 21	(21 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #20
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #20
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 22	(22 + 0 + 0 + 0 + 0)
	(concrete cube) 22	(22 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 22 -> 4)
	(208 + 22 -> 208 + 4)
	(22 -> 4 -> 2)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s9_home_current_command_reg$next)
	(22 -> 4 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg == 3'd1) && (_s2_channel1_reg_0 == 3'd2))
		[1] w3	((_s9_home_current_command_reg == 3'd1) && (_s2_channel1_reg_0 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #26
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #26
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 28	(28 + 0 + 0 + 0 + 0)
	(concrete cube) 28	(28 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 36	(36 + 0 + 0 + 0 + 0)
	(concrete cube) 36	(36 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 36 -> 3)
	(221 + 36 -> 221 + 3)
	(36 -> 3 -> 2)
	(36 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg != _s4_channel2_4_reg_0) && (_s3_channel1_reg_1 == 3'd1))
		[1] w3	((_s9_home_current_command_reg != _s4_channel2_4_reg_0) && (_s3_channel1_reg_1 == 3'd1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 28 -> 5)
	(210 + 28 -> 210 + 5)
	(28 -> 5 -> 3)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s3_channel1_reg_1$next)
	(28 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg != _s4_channel2_4_reg_0) && (_s3_channel1_reg_1 == 3'd1) && (_s2_channel1_reg_0 == 3'd2))
		[1] w3	((_s9_home_current_command_reg != _s4_channel2_4_reg_0) && (_s3_channel1_reg_1 == 3'd1) && (_s2_channel1_reg_0 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #20
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #20
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 22	(22 + 0 + 0 + 0 + 0)
	(concrete cube) 22	(22 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #27
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #27
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 29	(29 + 0 + 0 + 0 + 0)
	(concrete cube) 29	(29 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 29 -> 4)
	(223 + 29 -> 223 + 4)
	(29 -> 4 -> 2)
	(29 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_channel1_reg_0 != _s4_channel2_4_reg_0) && (_s3_channel1_reg_1 == 3'd1))
		[1] w3	((_s2_channel1_reg_0 != _s4_channel2_4_reg_0) && (_s3_channel1_reg_1 == 3'd1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #21
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #21
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 23	(23 + 0 + 0 + 0 + 0)
	(concrete cube) 23	(23 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 23 -> 4)
	(224 + 23 -> 224 + 4)
	(23 -> 4 -> 2)
	(23 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 != _s5_channel2_4_reg_1) && (_s3_channel1_reg_1 == 3'd1))
		[1] w3	((_s4_channel2_4_reg_0 != _s5_channel2_4_reg_1) && (_s3_channel1_reg_1 == 3'd1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 22 -> 6)
	(213 + 22 -> 213 + 6)
	(22 -> 6 -> 3)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s2_channel1_reg_0$next != _s3_channel1_reg_1$next)
	(22 -> 6 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 != _s9_home_current_command_reg) && (_s3_channel1_reg_1 == 3'd1) && (_s2_channel1_reg_0 == 3'd2))
		[1] w3	((_s5_channel2_4_reg_1 != _s9_home_current_command_reg) && (_s3_channel1_reg_1 == 3'd1) && (_s2_channel1_reg_0 == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 21 -> 8)
	(184 + 21 -> 184 + 8)
	(21 -> 8 -> 6)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s9_home_current_command_reg$next)
	(21 -> 8 -> 10 -> 6)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel2_4_reg_0 != _s5_channel2_4_reg_1) && (_s3_channel1_reg_1 == 3'd1) && !(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && (_s4_channel2_4_reg_0 != _s3_channel1_reg_1))
		[1] w3	((_s4_channel2_4_reg_0 != _s5_channel2_4_reg_1) && (_s3_channel1_reg_1 == 3'd1) && !(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && (_s4_channel2_4_reg_0 != _s3_channel1_reg_1) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 16	(16 + 0 + 0 + 0 + 0)
	(concrete cube) 16	(16 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #20
	(adding required pred. from inp_c to ab. cube) #11
	(adding from pre_c to cc. cube) #20
	(adding pred. from inp_c to cc. cube) #11
	(abstract cube) 22	(22 + 0 + 0 + 0 + 0)
	(concrete cube) 22	(22 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 22 -> 4)
	(215 + 22 -> 215 + 4)
	(22 -> 4 -> 3)
	(22 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && !(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	((_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && !(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #11
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #11
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 18 -> 1)
	(24 + 18 -> 24 + 1)
	(18 -> 1 -> 1)
	(18 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s3_channel1_reg_1 != 3'd0)
		[1] w3	((_s3_channel1_reg_1 != 3'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 2)
	(229 + 17 -> 229 + 2)
	(17 -> 2 -> 2)
	(17 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 == _s3_channel1_reg_1) && (_s3_channel1_reg_1 != 3'd0))
		[1] w3	((_s5_channel2_4_reg_1 == _s3_channel1_reg_1) && (_s3_channel1_reg_1 != 3'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 17 -> 4)
	(217 + 17 -> 217 + 4)
	(17 -> 4 -> 2)
	(17 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 != 3'd0) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	((_s3_channel1_reg_1 != 3'd0) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 18	(18 + 0 + 0 + 0 + 0)
	(concrete cube) 18	(18 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 18 -> 2)
	(231 + 18 -> 231 + 2)
	(18 -> 2 -> 1)
	(18 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel2_4_reg_1 != 3'd0)
		[1] w3	((_s5_channel2_4_reg_1 != 3'd0) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(219 + 17 -> 219 + 3)
	(17 -> 3 -> 2)
	(17 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s9_home_current_command_reg != 3'd0) && (_s5_channel2_4_reg_1 == _s9_home_current_command_reg))
		[1] w3	((_s9_home_current_command_reg != 3'd0) && (_s5_channel2_4_reg_1 == _s9_home_current_command_reg) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 16 -> 7)
	(188 + 16 -> 188 + 7)
	(16 -> 7 -> 4)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s9_home_current_command_reg$next)
	(16 -> 7 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 != 3'd0) && (_s3_channel1_reg_1 == 3'd1) && !(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2))
		[1] w3	((_s5_channel2_4_reg_1 != 3'd0) && (_s3_channel1_reg_1 == 3'd1) && !(_s8_home_current_client_reg) && (_s9_home_current_command_reg == 3'd2) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #11
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #11
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 15 -> 2)
	(189 + 15 -> 189 + 2)
	(15 -> 2 -> 2)
	(15 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 != _s9_home_current_command_reg) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	((_s3_channel1_reg_1 != _s9_home_current_command_reg) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #11
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #11
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 15 -> 2)
	(190 + 15 -> 190 + 2)
	(15 -> 2 -> 2)
	(15 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && (_s4_channel2_4_reg_0 == 3'd6))
		[1] w3	((_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && (_s4_channel2_4_reg_0 == 3'd6) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 15 -> 7)
	(155 + 15 -> 155 + 7)
	(15 -> 7 -> 5)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s5_channel2_4_reg_1$next)
		(added cond. from num.)	(_s3_channel1_reg_1$next != _s9_home_current_command_reg$next)
		(added cond. from num.)	(_s4_channel2_4_reg_0$next != _s3_channel1_reg_1$next)
	(15 -> 7 -> 9 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel2_4_reg_1 != _s9_home_current_command_reg) && (_s3_channel1_reg_1 == 3'd1) && (_s4_channel2_4_reg_0 == 3'd6) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && (_s3_channel1_reg_1 != _s9_home_current_command_reg))
		[1] w3	((_s5_channel2_4_reg_1 != _s9_home_current_command_reg) && (_s3_channel1_reg_1 == 3'd1) && (_s4_channel2_4_reg_0 == 3'd6) && (_s3_channel1_reg_1 != _s5_channel2_4_reg_1) && (_s3_channel1_reg_1 != _s9_home_current_command_reg) && !((!(_s16_$formal$./cache_err.sv:2909$282_EN) && _s19_id54)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #11
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #11
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 3	(2 + 1 + 0 + 0 + 0)
	(concrete cube) 3	(2 + 1 + 0 + 0)
		(Next: ((_s0_cache_reg_0$next == _s0_cache_reg_0$next_rhs) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_channel1_reg_0$next == _s2_channel1_reg_0$next_rhs) && (_s3_channel1_reg_1$next == _s3_channel1_reg_1$next_rhs) && (_s4_channel2_4_reg_0$next == _s4_channel2_4_reg_0$next_rhs) && (_s5_channel2_4_reg_1$next == _s5_channel2_4_reg_1$next_rhs) && (_s9_home_current_command_reg$next == _s9_home_current_command_reg$next_rhs) && (_s10_home_exclusive_granted_reg$next == _s10_home_exclusive_granted_reg$next_rhs) && (_s13_home_sharer_list_reg_0$next == _s13_home_sharer_list_reg_0$next_rhs) && (_s14_home_sharer_list_reg_1$next == _s14_home_sharer_list_reg_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 10)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[3] & T[3] & A[2]+ ]: 		(bv input core size: 20)
		SAT_c ? [ A[4] & T[4] & A[3]+ ]: 		(bv input core size: 30)
		SAT_c ? [ A[5] & T[5] & A[4]+ ]: 		(bv input core size: 31)
		SAT_c ? [ A[6] & T[6] & A[5]+ ]: 		(bv input core size: 31)
		SAT_c ? [ A[7] & T[7] & A[6]+ ]: 		(bv input core size: 35)
		SAT_c ? [ A[8] & T[8] & A[7]+ ]: 		(bv input core size: 37)
		SAT_c ? [ A[9] & T[9] & A[8]+ ]: 		(bv input core size: 28)

	[Simulation check]: 
[Sim_1]    =========== Simulation Begins ===============
	1: A[9]

	2: A[8]

	3: A[7]

	4: A[6]

	5: A[5]

	6: A[4]

	7: A[3]

	8: A[2]

	9: A[1]

	10: A[0]

		ACEXT is feasible
[Sim_1]    =========== Simulation Ends ===============
[RES_1]       3	: 9	: 0 7 13 15 24 26 15 8 5 1 s: 114
[RES_0]    L  9 : 0 14 35 47 74 97 63 28 15 3 s: 376, mem: 23, time: 0.821235

-----------
Refinements
-----------
[1]	((_i2_reset || b$57) && (_i2_reset$next || b$57$next))
[2]	!(_s19_id54$next)
[3]	!((((_s1_cache_reg_1 == 2'd0) || (_s1_cache_reg_1 != 2'd0)) && (_s1_cache_reg_1 == 2'd0) && ((_i1_io_en_a == 5'd7) || (_i1_io_en_a != 5'd7)) && b$1817 && ReductionOr_1_2(_s1_cache_reg_1$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs)))
[4]	!(((_s0_cache_reg_0 == 2'd0) && ReductionOr_1_2(_s0_cache_reg_0)))
[5]	!(((_s0_cache_reg_0$next == 2'd0) && ReductionOr_1_2(_s0_cache_reg_0$next)))
-----------
[RES_0]    refinement-lemmas-check successful!
[RES_0]    (warning: cex repeated value for state: _s0_cache_reg_0)
[RES_0]    (warning: cex repeated value for state: _s2_channel1_reg_0)
[RES_0]    (warning: cex repeated value for state: _s9_home_current_command_reg)
[RES_0]    (warning: cex repeated value for state: _s2_channel1_reg_0)
[RES_0]    (warning: cex repeated value for state: _s8_home_current_client_reg)
[RES_0]    (warning: cex repeated value for state: _s4_channel2_4_reg_0)
[RES_0]    (warning: cex repeated value for state: _s1_cache_reg_1)
[RES_0]    (warning: cex repeated value for state: _s3_channel1_reg_1)
[RES_0]    (warning: cex repeated value for state: _s9_home_current_command_reg)
[RES_0]    (warning: cex repeated value for state: _s3_channel1_reg_1)
[RES_0]    (warning: cex repeated value for state: _s5_channel2_4_reg_1)
[RES_0]    (warning: cex repeated value for state: _s3_channel1_reg_1)
[RES_0]    (warning: cex repeated value for state: _s3_channel1_reg_1)
[RES_0]    (warning: cex repeated value for state: _s3_channel1_reg_1)
[RES_0]    (warning: cex repeated value for state: _s3_channel1_reg_1)
[RES_0]    (warning: cex repeated value for state: _s9_home_current_command_reg)
[RES_0]    (warning: cex repeated value for state: _s3_channel1_reg_1)
[RES_0]    (warning: cex repeated value for state: _s5_channel2_4_reg_1)
[RES_0]    (warning: cex repeated value for state: _s9_home_current_command_reg)
[RES_0]    (warning: cex repeated value for state: _s5_channel2_4_reg_1)
[RES_0]    (warning: cex repeated value for state: _s5_channel2_4_reg_1)
[RES_0]    (warning: cex repeated value for state: _s5_channel2_4_reg_1)
[RES_0]    (warning: cex repeated value for state: _s8_home_current_client_reg)
[RES_0]    (warning: cex repeated value for state: _s5_channel2_4_reg_1)
[RES_0]    (warning: cex repeated value for state: _s5_channel2_4_reg_1)
[RES_0]    (warning: cex repeated value for state: _s5_channel2_4_reg_1)
[RES_0]    (warning: cex repeated value for state: _s5_channel2_4_reg_1)
[RES_0]    (warning: cex repeated value for state: _s1_cache_reg_1)
[RES_0]    (warning: cex repeated value for state: _s1_cache_reg_1)
[RES_0]    (warning: cex repeated value for state: _s1_cache_reg_1)
[RES_0]    (warning: cex repeated value for state: _s1_cache_reg_1)
[RES_0]    (warning: cex repeated value for state: _s1_cache_reg_1)
[RES_0]    ==================================================
[RES_0]    ACEXT-length: 10
[RES_0]    CEXT-length : 10
[RES_0]    ==================================================
[RES_0]    
Verified via simulation
[RES_0]    ==================================================
 s: 376, mem: 23, time: 0.82
Frames explored (2 datapath refinements) : 
5 5 
CEXT lengths (3 feasibility checks) : 
6 6 10 
DP lemmas (2 feasibility checks) : 
3 2 
Block= 31 BlockT= 39 BlockS= 31 BlockU= 8 Oblig= 443 ObligT= 443 ObligS= 217 ObligU= 226 FPT= 248 FPS= 241 FPU= 7 CallT= 3226 CallS= 2045 CallU= 1181 MUST= 244 MUSS= 16 MUSU= 228 sMUST= 5 sMUSS= 3 sMUSU= 2 dMUST= 20 dMUSS= 18 dMUSU= 2 rMUST= 1437 rMUSS= 665 rMUSU= 772 All_clauses= 226 All_literals= 725 Clauses= 114 Literals= 376 DPLemmas= 5 DPrefsNoDPL= 0 DPRefs= 2

pme_fail: 0, pme_succ: 0, lit_before: 0, lit_after: 0
coi_before: 0, coi_after: 0
mus_before: 2602 mus_lit: 499 mus_cls: 226 mus_cnt: 226
S+M	Call = 3470 (sat=2061, 59.39%)
SAT	Call = 3226 (sat=2045, 63.39%)
MUS	Call = 244 (sat=16, 6.56%)

Detailed Stats:

  (reachability)
	#Frame Restrictions:	226
	#TB                :	248
	#cubes-subsumed    :	112
	#context reset     :	0
	#Y2 reset          :	0
	#frame solver reset:	8
	avg-sz-frame-restriction:  	3.21

	avg-sz-ab-cube:  	11.23
		%t1-ab-cube:   	100.00%	[sel: 100.00% ]
		%t2-ab-cube:   	0.00%	[sel: 0.00% ]
		%t3-ab-cube:   	0.00%	[sel: 0.00% ]
		%t4-ab-cube:   	0.00%	[sel: 0.00% ]

		ab-cube info:	
			s == s:	2.44%	[sel: 2.62% ]
			s == n:	27.68%	[sel: 37.24% ]
			s == o:	0.00%	[sel: 0.00% ]
			n == o:	0.00%	[sel: 0.00% ]
			o == o:	0.00%	[sel: 0.00% ]
			s != s:	4.38%	[sel: 5.10% ]
			s != n:	32.78%	[sel: 11.03% ]
			s != o:	0.00%	[sel: 0.00% ]
			n != o:	0.00%	[sel: 0.00% ]
			o != o:	0.00%	[sel: 0.00% ]
			s bool:	22.66%	[sel: 11.17% ]
			up    :	10.05%	[sel: 32.83% ]
			oth   :	0.00%	[sel: 0.00% ]

		%coi-ab-cube  :	99.21%	[sel: 99.72% ]
			s (==):	2.44%	[sel: 2.62% ]
			s (!=):	4.38%	[sel: 5.10% ]
			n (==):	27.68%	[sel: 37.24% ]
			n (!=):	31.99%	[sel: 10.76% ]
			other :	32.71%	[sel: 44.00% ]
		%pred-ab-cube :	0.79%	[sel: 0.28% ]
		%fproj-ab-cube:	0.00%	[sel: 0.00% ]
			s (==):	0.00%	[sel: 0.00% ]
			s (!=):	0.00%	[sel: 0.00% ]
			n (==):	0.00%	[sel: 0.00% ]
			n (!=):	0.00%	[sel: 0.00% ]
		%proj-ab-cube :	0.00%	[sel: 0.00% ]
			s (==):	0.00%	[sel: 0.00% ]
			s (!=):	0.00%	[sel: 0.00% ]
			n (==):	0.00%	[sel: 0.00% ]
			n (!=):	0.00%	[sel: 0.00% ]
		%subs-ab-cube :	0.00%	[sel: 0.00% ]
	avg-#sv-ab-cube:  	5.00
	avg-tsb-ab-cube:  	11.00
	relevancy:       	67.56%

	avg-sz-cc-cube:  	11.00
		%coi-cc-cube  :	99.21%
		%pred-cc-cube :	0.79%
		%fproj-cc-cube:	0.00%
			s (==):	0.00%
			s (!=):	0.00%
			n (==):	0.00%
			n (!=):	0.00%
		%proj-cc-cube :	0.00%
			s (==):	0.00%
			s (!=):	0.00%
			n (==):	0.00%
			n (!=):	0.00%

	tb_cube_time:     	0.10 (12.47%)
		cube_eval_time: 	0.03 (4.04%)
		cube_pred_time: 	0.00 (0.10%)
		cube_fproj_time:	0.00 (0.00%)
		cube_proj_time: 	0.00 (0.00%)
		cube _subs_time:	0.00 (0.03%)
		sum:            	0.03 (33.40% of tb_cube_time)

	tb_ct_time:      	0.06 (7.52%)
		ct isblocked_time:  	0.00 (0.00%)
		ct isinitial_time:  	0.04 (5.33%)
		ct containment_time:	0.00 (0.08%)
		ct fastforward_time:	0.00 (0.00%)
		sum:                	0.04 (71.97% of tb_ct_time)

	setcontain_time:	0.00 (0.00%)

	updatesolver_time:	0.01 (1.15%)

	tb_time:	0.66 (80.45%)
		tb_reach_time:    	0.15 (18.78%)
		tb_val_time:    	0.02 (2.13%) [ cti_val_time: 140728859.48 (17099185249.56%) ]
		tb_cube_time:      	0.10 (12.47%)
		tb_mus_time:      	0.29 (35.19%)
			tb_mus_core_time:      	0.07 (7.91%)
			tb_mus_min_time:      	0.21 (25.92%)
		tb_ct_time:       	0.06 (7.52%)
		tb_extra_time:    	0.00 (0.00%)
		sum:           	0.61 (91.92% of tb_time)


  (refinement)
	sim_time:		0.05 (5.88%) 	 [70.33% of dpr_time]

  pre_time:	0.00 (0.15%)
  cti_time:	0.01 (0.61%)	[cti_i_time:	0.00 (0.22%) ]
  tb_time:	0.66 (80.45%)
  fp_time:	0.07 (9.02%)	[fp_extra_time:	0.00 (0.00%) ]
  refine_time:	0.07 (8.35%)
  sol_set_time:	0.00 (0.59%)
  inv_time:	0.00 (0.15%)	[induct_time:	0.00 (0.00%) ]
  draw_time:	0.00 (0.00%)
  sum:		0.82 (99.33%)

  extra_time:	0.00 (0.00%)

  timeout_time:	0.00 (0.00%)

[simplified] 0 (ex), 0 (cc), 0 (ot)

===   VIOLATED   ===

Averroes finished.

br-#mus         226           
        hard        soft         out           
           
       76.67       11.51        2.85               (br-core)           
       76.67        2.85        2.21                (br-min)          

         sat       unsat           
                                          #Calls           
           0         226   (br-core)           
           0           0  (br-core2)           
         665         546    (br-min)           
                                      Time (sec)           
        0.01        0.05   (br-core)           
        0.00        0.00  (br-core2)           
        0.07        0.11    (br-min)           
                                    Avg. Time (microsec)           
           0         211   (br-core)           
           0           0  (br-core2)           
         108         198    (br-min)           
                                    Max Time (microsec)           
        1092        1213   (br-core)           
           0           0  (br-core2)           
         628         589    (br-min)          

                      ab                      bv           
         sat       unsat         sat       unsat           
                                                      #Calls           
         211         168          14           4   (oneshot)           
        1799         779           5           2       (inc)           
           0         226          16           2    (assume)           
                       0                       0   (timeout)          

                                                  Time (sec)           
        0.00        0.00        0.00        0.00   (oneshot)           
        0.17        0.15        0.00        0.00       (inc)           
        0.00        0.05        0.01        0.00    (assume)           
                    0.00                    0.00   (timeout)          

                                                Avg. Time (microsec)
           8           2          83          11   (oneshot)           
          96         187         261         179       (inc)           
           0         202         434         426    (assume)           
                       0                       0   (timeout)           
           
      Result        Time        Mem.       #Refs           
                     sec          MB                       
           v        0.82          23           3
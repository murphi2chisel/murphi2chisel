circuit system :
  module Try :
    input clock : Clock
    input reset : Reset
    output io : { flip en_r : UInt<1>, flip x_in : UInt<1>, x_out : UInt<1>, flip nI_in : UInt<1>[3], nI_out : UInt<1>[3], flip nT_in : UInt<1>[3], nT_out : UInt<1>[3], flip nC_in : UInt<1>[3], nC_out : UInt<1>[3], flip nE_in : UInt<1>[3], nE_out : UInt<1>[3]}

    io.x_out <= io.x_in @[node.scala 25:9]
    io.nI_out <= io.nI_in @[node.scala 26:10]
    io.nT_out <= io.nT_in @[node.scala 27:10]
    io.nC_out <= io.nC_in @[node.scala 28:10]
    io.nE_out <= io.nE_in @[node.scala 29:10]
    when io.en_r : @[router.scala 4:14]
      when io.nI_in[1] : @[router.scala 5:18]
        io.nI_out[1] <= UInt<1>("h0") @[router.scala 6:14]
        io.nT_out[1] <= UInt<1>("h1") @[router.scala 7:14]

  module Try_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip en_r : UInt<1>, flip x_in : UInt<1>, x_out : UInt<1>, flip nI_in : UInt<1>[3], nI_out : UInt<1>[3], flip nT_in : UInt<1>[3], nT_out : UInt<1>[3], flip nC_in : UInt<1>[3], nC_out : UInt<1>[3], flip nE_in : UInt<1>[3], nE_out : UInt<1>[3]}

    io.x_out <= io.x_in @[node.scala 25:9]
    io.nI_out <= io.nI_in @[node.scala 26:10]
    io.nT_out <= io.nT_in @[node.scala 27:10]
    io.nC_out <= io.nC_in @[node.scala 28:10]
    io.nE_out <= io.nE_in @[node.scala 29:10]
    when io.en_r : @[router.scala 4:14]
      when io.nI_in[2] : @[router.scala 5:18]
        io.nI_out[2] <= UInt<1>("h0") @[router.scala 6:14]
        io.nT_out[2] <= UInt<1>("h1") @[router.scala 7:14]

  module Crit :
    input clock : Clock
    input reset : Reset
    output io : { flip en_r : UInt<1>, flip x_in : UInt<1>, x_out : UInt<1>, flip nI_in : UInt<1>[3], nI_out : UInt<1>[3], flip nT_in : UInt<1>[3], nT_out : UInt<1>[3], flip nC_in : UInt<1>[3], nC_out : UInt<1>[3], flip nE_in : UInt<1>[3], nE_out : UInt<1>[3]}

    io.x_out <= io.x_in @[node.scala 25:9]
    io.nI_out <= io.nI_in @[node.scala 26:10]
    io.nT_out <= io.nT_in @[node.scala 27:10]
    io.nC_out <= io.nC_in @[node.scala 28:10]
    io.nE_out <= io.nE_in @[node.scala 29:10]
    when io.en_r : @[router.scala 12:14]
      node _T = eq(io.x_in, UInt<1>("h1")) @[router.scala 13:28]
      node _T_1 = and(io.nT_in[1], _T) @[router.scala 13:18]
      when _T_1 : @[router.scala 13:40]
        io.nT_out[1] <= UInt<1>("h0") @[router.scala 14:14]
        io.nC_out[1] <= UInt<1>("h1") @[router.scala 15:14]
        io.x_out <= UInt<1>("h0") @[router.scala 16:10]

  module Crit_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip en_r : UInt<1>, flip x_in : UInt<1>, x_out : UInt<1>, flip nI_in : UInt<1>[3], nI_out : UInt<1>[3], flip nT_in : UInt<1>[3], nT_out : UInt<1>[3], flip nC_in : UInt<1>[3], nC_out : UInt<1>[3], flip nE_in : UInt<1>[3], nE_out : UInt<1>[3]}

    io.x_out <= io.x_in @[node.scala 25:9]
    io.nI_out <= io.nI_in @[node.scala 26:10]
    io.nT_out <= io.nT_in @[node.scala 27:10]
    io.nC_out <= io.nC_in @[node.scala 28:10]
    io.nE_out <= io.nE_in @[node.scala 29:10]
    when io.en_r : @[router.scala 12:14]
      node _T = eq(io.x_in, UInt<1>("h1")) @[router.scala 13:28]
      node _T_1 = and(io.nT_in[2], _T) @[router.scala 13:18]
      when _T_1 : @[router.scala 13:40]
        io.nT_out[2] <= UInt<1>("h0") @[router.scala 14:14]
        io.nC_out[2] <= UInt<1>("h1") @[router.scala 15:14]
        io.x_out <= UInt<1>("h0") @[router.scala 16:10]

  module Exit :
    input clock : Clock
    input reset : Reset
    output io : { flip en_r : UInt<1>, flip x_in : UInt<1>, x_out : UInt<1>, flip nI_in : UInt<1>[3], nI_out : UInt<1>[3], flip nT_in : UInt<1>[3], nT_out : UInt<1>[3], flip nC_in : UInt<1>[3], nC_out : UInt<1>[3], flip nE_in : UInt<1>[3], nE_out : UInt<1>[3]}

    io.x_out <= io.x_in @[node.scala 25:9]
    io.nI_out <= io.nI_in @[node.scala 26:10]
    io.nT_out <= io.nT_in @[node.scala 27:10]
    io.nC_out <= io.nC_in @[node.scala 28:10]
    io.nE_out <= io.nE_in @[node.scala 29:10]
    when io.en_r : @[router.scala 21:14]
      when io.nC_in[1] : @[router.scala 22:18]
        io.nC_out[1] <= UInt<1>("h0") @[router.scala 23:14]
        io.nE_out[1] <= UInt<1>("h1") @[router.scala 24:14]

  module Exit_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip en_r : UInt<1>, flip x_in : UInt<1>, x_out : UInt<1>, flip nI_in : UInt<1>[3], nI_out : UInt<1>[3], flip nT_in : UInt<1>[3], nT_out : UInt<1>[3], flip nC_in : UInt<1>[3], nC_out : UInt<1>[3], flip nE_in : UInt<1>[3], nE_out : UInt<1>[3]}

    io.x_out <= io.x_in @[node.scala 25:9]
    io.nI_out <= io.nI_in @[node.scala 26:10]
    io.nT_out <= io.nT_in @[node.scala 27:10]
    io.nC_out <= io.nC_in @[node.scala 28:10]
    io.nE_out <= io.nE_in @[node.scala 29:10]
    when io.en_r : @[router.scala 21:14]
      when io.nC_in[2] : @[router.scala 22:18]
        io.nC_out[2] <= UInt<1>("h0") @[router.scala 23:14]
        io.nE_out[2] <= UInt<1>("h1") @[router.scala 24:14]

  module Idle :
    input clock : Clock
    input reset : Reset
    output io : { flip en_r : UInt<1>, flip x_in : UInt<1>, x_out : UInt<1>, flip nI_in : UInt<1>[3], nI_out : UInt<1>[3], flip nT_in : UInt<1>[3], nT_out : UInt<1>[3], flip nC_in : UInt<1>[3], nC_out : UInt<1>[3], flip nE_in : UInt<1>[3], nE_out : UInt<1>[3]}

    io.x_out <= io.x_in @[node.scala 25:9]
    io.nI_out <= io.nI_in @[node.scala 26:10]
    io.nT_out <= io.nT_in @[node.scala 27:10]
    io.nC_out <= io.nC_in @[node.scala 28:10]
    io.nE_out <= io.nE_in @[node.scala 29:10]
    when io.en_r : @[router.scala 29:14]
      when io.nE_in[1] : @[router.scala 30:18]
        io.nE_out[1] <= UInt<1>("h0") @[router.scala 31:14]
        io.nI_out[1] <= UInt<1>("h1") @[router.scala 32:14]
        io.x_out <= UInt<1>("h1") @[router.scala 33:10]

  module Idle_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip en_r : UInt<1>, flip x_in : UInt<1>, x_out : UInt<1>, flip nI_in : UInt<1>[3], nI_out : UInt<1>[3], flip nT_in : UInt<1>[3], nT_out : UInt<1>[3], flip nC_in : UInt<1>[3], nC_out : UInt<1>[3], flip nE_in : UInt<1>[3], nE_out : UInt<1>[3]}

    io.x_out <= io.x_in @[node.scala 25:9]
    io.nI_out <= io.nI_in @[node.scala 26:10]
    io.nT_out <= io.nT_in @[node.scala 27:10]
    io.nC_out <= io.nC_in @[node.scala 28:10]
    io.nE_out <= io.nE_in @[node.scala 29:10]
    when io.en_r : @[router.scala 29:14]
      when io.nE_in[2] : @[router.scala 30:18]
        io.nE_out[2] <= UInt<1>("h0") @[router.scala 31:14]
        io.nI_out[2] <= UInt<1>("h1") @[router.scala 32:14]
        io.x_out <= UInt<1>("h1") @[router.scala 33:10]

  module Str_Idle :
    input clock : Clock
    input reset : Reset
    output io : { flip en_r : UInt<1>, flip x_in : UInt<1>, x_out : UInt<1>, flip nI_in : UInt<1>[3], nI_out : UInt<1>[3], flip nT_in : UInt<1>[3], nT_out : UInt<1>[3], flip nC_in : UInt<1>[3], nC_out : UInt<1>[3], flip nE_in : UInt<1>[3], nE_out : UInt<1>[3]}

    io.x_out <= io.x_in @[node.scala 25:9]
    io.nI_out <= io.nI_in @[node.scala 26:10]
    io.nT_out <= io.nT_in @[node.scala 27:10]
    io.nC_out <= io.nC_in @[node.scala 28:10]
    io.nE_out <= io.nE_in @[node.scala 29:10]
    when io.en_r : @[router.scala 38:14]
      node _T = eq(io.nE_in[1], UInt<1>("h0")) @[router.scala 39:60]
      node _T_1 = eq(io.nC_in[1], UInt<1>("h0")) @[router.scala 39:76]
      node _T_2 = and(_T, _T_1) @[router.scala 39:73]
      node _T_3 = eq(io.x_in, UInt<1>("h0")) @[router.scala 39:104]
      node _T_4 = and(UInt<1>("h0"), _T_3) @[router.scala 39:94]
      when _T_4 : @[router.scala 39:117]
        io.x_out <= UInt<1>("h1") @[router.scala 40:10]

  module Str_Crit :
    input clock : Clock
    input reset : Reset
    output io : { flip en_r : UInt<1>, flip x_in : UInt<1>, x_out : UInt<1>, flip nI_in : UInt<1>[3], nI_out : UInt<1>[3], flip nT_in : UInt<1>[3], nT_out : UInt<1>[3], flip nC_in : UInt<1>[3], nC_out : UInt<1>[3], flip nE_in : UInt<1>[3], nE_out : UInt<1>[3]}

    io.x_out <= io.x_in @[node.scala 25:9]
    io.nI_out <= io.nI_in @[node.scala 26:10]
    io.nT_out <= io.nT_in @[node.scala 27:10]
    io.nC_out <= io.nC_in @[node.scala 28:10]
    io.nE_out <= io.nE_in @[node.scala 29:10]
    when io.en_r : @[router.scala 45:14]
      node _T = eq(io.x_in, UInt<1>("h1")) @[router.scala 46:14]
      when _T : @[router.scala 46:25]
        io.x_out <= UInt<1>("h0") @[router.scala 47:10]

  module system :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip en_a : UInt<4>, x_out : UInt<1>, nI_out : UInt<1>[3], nT_out : UInt<1>[3], nC_out : UInt<1>[3], nE_out : UInt<1>[3]}

    wire x_init : UInt<1> @[system.scala 14:18]
    reg x_reg : UInt<1>, clock with :
      reset => (reset, x_init) @[system.scala 15:20]
    io.x_out <= x_reg @[system.scala 16:9]
    wire nI_init : UInt<1>[3] @[system.scala 17:19]
    reg nI_reg : UInt<1>[3], clock with :
      reset => (reset, nI_init) @[system.scala 18:21]
    io.nI_out <= nI_reg @[system.scala 19:10]
    wire nT_init : UInt<1>[3] @[system.scala 20:19]
    reg nT_reg : UInt<1>[3], clock with :
      reset => (reset, nT_init) @[system.scala 21:21]
    io.nT_out <= nT_reg @[system.scala 22:10]
    wire nC_init : UInt<1>[3] @[system.scala 23:19]
    reg nC_reg : UInt<1>[3], clock with :
      reset => (reset, nC_init) @[system.scala 24:21]
    io.nC_out <= nC_reg @[system.scala 25:10]
    wire nE_init : UInt<1>[3] @[system.scala 26:19]
    reg nE_reg : UInt<1>[3], clock with :
      reset => (reset, nE_init) @[system.scala 27:21]
    io.nE_out <= nE_reg @[system.scala 28:10]
    nI_init[0] <= UInt<1>("h1") @[system.scala 30:12]
    nT_init[0] <= UInt<1>("h0") @[system.scala 31:12]
    nC_init[0] <= UInt<1>("h0") @[system.scala 32:12]
    nE_init[0] <= UInt<1>("h0") @[system.scala 33:12]
    nI_init[1] <= UInt<1>("h1") @[system.scala 30:12]
    nT_init[1] <= UInt<1>("h0") @[system.scala 31:12]
    nC_init[1] <= UInt<1>("h0") @[system.scala 32:12]
    nE_init[1] <= UInt<1>("h0") @[system.scala 33:12]
    nI_init[2] <= UInt<1>("h1") @[system.scala 30:12]
    nT_init[2] <= UInt<1>("h0") @[system.scala 31:12]
    nC_init[2] <= UInt<1>("h0") @[system.scala 32:12]
    nE_init[2] <= UInt<1>("h0") @[system.scala 33:12]
    x_init <= UInt<1>("h1") @[system.scala 35:8]
    inst rules_0 of Try @[system.scala 37:16]
    rules_0.clock <= clock
    rules_0.reset <= reset
    inst rules_1 of Try_1 @[system.scala 37:16]
    rules_1.clock <= clock
    rules_1.reset <= reset
    inst rules_2 of Crit @[system.scala 40:16]
    rules_2.clock <= clock
    rules_2.reset <= reset
    inst rules_3 of Crit_1 @[system.scala 40:16]
    rules_3.clock <= clock
    rules_3.reset <= reset
    inst rules_4 of Exit @[system.scala 43:16]
    rules_4.clock <= clock
    rules_4.reset <= reset
    inst rules_5 of Exit_1 @[system.scala 43:16]
    rules_5.clock <= clock
    rules_5.reset <= reset
    inst rules_6 of Idle @[system.scala 46:16]
    rules_6.clock <= clock
    rules_6.reset <= reset
    inst rules_7 of Idle_1 @[system.scala 46:16]
    rules_7.clock <= clock
    rules_7.reset <= reset
    inst rules_8 of Str_Idle @[system.scala 48:16]
    rules_8.clock <= clock
    rules_8.reset <= reset
    inst rules_9 of Str_Crit @[system.scala 49:16]
    rules_9.clock <= clock
    rules_9.reset <= reset
    rules_0.io.x_in <= x_reg @[system.scala 51:18]
    rules_0.io.nI_in[0] <= nI_reg[0] @[system.scala 52:19]
    rules_0.io.nI_in[1] <= nI_reg[1] @[system.scala 52:19]
    rules_0.io.nI_in[2] <= nI_reg[2] @[system.scala 52:19]
    rules_0.io.nT_in[0] <= nT_reg[0] @[system.scala 53:19]
    rules_0.io.nT_in[1] <= nT_reg[1] @[system.scala 53:19]
    rules_0.io.nT_in[2] <= nT_reg[2] @[system.scala 53:19]
    rules_0.io.nC_in[0] <= nC_reg[0] @[system.scala 54:19]
    rules_0.io.nC_in[1] <= nC_reg[1] @[system.scala 54:19]
    rules_0.io.nC_in[2] <= nC_reg[2] @[system.scala 54:19]
    rules_0.io.nE_in[0] <= nE_reg[0] @[system.scala 55:19]
    rules_0.io.nE_in[1] <= nE_reg[1] @[system.scala 55:19]
    rules_0.io.nE_in[2] <= nE_reg[2] @[system.scala 55:19]
    node _T = eq(io.en_a, UInt<1>("h0")) @[system.scala 56:27]
    rules_0.io.en_r <= _T @[system.scala 56:17]
    node _T_1 = eq(io.en_a, UInt<1>("h0")) @[system.scala 57:13]
    when _T_1 : @[system.scala 57:21]
      x_reg <= rules_0.io.x_out @[system.scala 58:7]
      nI_reg <= rules_0.io.nI_out @[system.scala 59:8]
      nT_reg <= rules_0.io.nT_out @[system.scala 60:8]
      nC_reg <= rules_0.io.nC_out @[system.scala 61:8]
      nE_reg <= rules_0.io.nE_out @[system.scala 62:8]
    rules_1.io.x_in <= x_reg @[system.scala 51:18]
    rules_1.io.nI_in[0] <= nI_reg[0] @[system.scala 52:19]
    rules_1.io.nI_in[1] <= nI_reg[1] @[system.scala 52:19]
    rules_1.io.nI_in[2] <= nI_reg[2] @[system.scala 52:19]
    rules_1.io.nT_in[0] <= nT_reg[0] @[system.scala 53:19]
    rules_1.io.nT_in[1] <= nT_reg[1] @[system.scala 53:19]
    rules_1.io.nT_in[2] <= nT_reg[2] @[system.scala 53:19]
    rules_1.io.nC_in[0] <= nC_reg[0] @[system.scala 54:19]
    rules_1.io.nC_in[1] <= nC_reg[1] @[system.scala 54:19]
    rules_1.io.nC_in[2] <= nC_reg[2] @[system.scala 54:19]
    rules_1.io.nE_in[0] <= nE_reg[0] @[system.scala 55:19]
    rules_1.io.nE_in[1] <= nE_reg[1] @[system.scala 55:19]
    rules_1.io.nE_in[2] <= nE_reg[2] @[system.scala 55:19]
    node _T_2 = eq(io.en_a, UInt<1>("h1")) @[system.scala 56:27]
    rules_1.io.en_r <= _T_2 @[system.scala 56:17]
    node _T_3 = eq(io.en_a, UInt<1>("h1")) @[system.scala 57:13]
    when _T_3 : @[system.scala 57:21]
      x_reg <= rules_1.io.x_out @[system.scala 58:7]
      nI_reg <= rules_1.io.nI_out @[system.scala 59:8]
      nT_reg <= rules_1.io.nT_out @[system.scala 60:8]
      nC_reg <= rules_1.io.nC_out @[system.scala 61:8]
      nE_reg <= rules_1.io.nE_out @[system.scala 62:8]
    rules_2.io.x_in <= x_reg @[system.scala 51:18]
    rules_2.io.nI_in[0] <= nI_reg[0] @[system.scala 52:19]
    rules_2.io.nI_in[1] <= nI_reg[1] @[system.scala 52:19]
    rules_2.io.nI_in[2] <= nI_reg[2] @[system.scala 52:19]
    rules_2.io.nT_in[0] <= nT_reg[0] @[system.scala 53:19]
    rules_2.io.nT_in[1] <= nT_reg[1] @[system.scala 53:19]
    rules_2.io.nT_in[2] <= nT_reg[2] @[system.scala 53:19]
    rules_2.io.nC_in[0] <= nC_reg[0] @[system.scala 54:19]
    rules_2.io.nC_in[1] <= nC_reg[1] @[system.scala 54:19]
    rules_2.io.nC_in[2] <= nC_reg[2] @[system.scala 54:19]
    rules_2.io.nE_in[0] <= nE_reg[0] @[system.scala 55:19]
    rules_2.io.nE_in[1] <= nE_reg[1] @[system.scala 55:19]
    rules_2.io.nE_in[2] <= nE_reg[2] @[system.scala 55:19]
    node _T_4 = eq(io.en_a, UInt<2>("h2")) @[system.scala 56:27]
    rules_2.io.en_r <= _T_4 @[system.scala 56:17]
    node _T_5 = eq(io.en_a, UInt<2>("h2")) @[system.scala 57:13]
    when _T_5 : @[system.scala 57:21]
      x_reg <= rules_2.io.x_out @[system.scala 58:7]
      nI_reg <= rules_2.io.nI_out @[system.scala 59:8]
      nT_reg <= rules_2.io.nT_out @[system.scala 60:8]
      nC_reg <= rules_2.io.nC_out @[system.scala 61:8]
      nE_reg <= rules_2.io.nE_out @[system.scala 62:8]
    rules_3.io.x_in <= x_reg @[system.scala 51:18]
    rules_3.io.nI_in[0] <= nI_reg[0] @[system.scala 52:19]
    rules_3.io.nI_in[1] <= nI_reg[1] @[system.scala 52:19]
    rules_3.io.nI_in[2] <= nI_reg[2] @[system.scala 52:19]
    rules_3.io.nT_in[0] <= nT_reg[0] @[system.scala 53:19]
    rules_3.io.nT_in[1] <= nT_reg[1] @[system.scala 53:19]
    rules_3.io.nT_in[2] <= nT_reg[2] @[system.scala 53:19]
    rules_3.io.nC_in[0] <= nC_reg[0] @[system.scala 54:19]
    rules_3.io.nC_in[1] <= nC_reg[1] @[system.scala 54:19]
    rules_3.io.nC_in[2] <= nC_reg[2] @[system.scala 54:19]
    rules_3.io.nE_in[0] <= nE_reg[0] @[system.scala 55:19]
    rules_3.io.nE_in[1] <= nE_reg[1] @[system.scala 55:19]
    rules_3.io.nE_in[2] <= nE_reg[2] @[system.scala 55:19]
    node _T_6 = eq(io.en_a, UInt<2>("h3")) @[system.scala 56:27]
    rules_3.io.en_r <= _T_6 @[system.scala 56:17]
    node _T_7 = eq(io.en_a, UInt<2>("h3")) @[system.scala 57:13]
    when _T_7 : @[system.scala 57:21]
      x_reg <= rules_3.io.x_out @[system.scala 58:7]
      nI_reg <= rules_3.io.nI_out @[system.scala 59:8]
      nT_reg <= rules_3.io.nT_out @[system.scala 60:8]
      nC_reg <= rules_3.io.nC_out @[system.scala 61:8]
      nE_reg <= rules_3.io.nE_out @[system.scala 62:8]
    rules_4.io.x_in <= x_reg @[system.scala 51:18]
    rules_4.io.nI_in[0] <= nI_reg[0] @[system.scala 52:19]
    rules_4.io.nI_in[1] <= nI_reg[1] @[system.scala 52:19]
    rules_4.io.nI_in[2] <= nI_reg[2] @[system.scala 52:19]
    rules_4.io.nT_in[0] <= nT_reg[0] @[system.scala 53:19]
    rules_4.io.nT_in[1] <= nT_reg[1] @[system.scala 53:19]
    rules_4.io.nT_in[2] <= nT_reg[2] @[system.scala 53:19]
    rules_4.io.nC_in[0] <= nC_reg[0] @[system.scala 54:19]
    rules_4.io.nC_in[1] <= nC_reg[1] @[system.scala 54:19]
    rules_4.io.nC_in[2] <= nC_reg[2] @[system.scala 54:19]
    rules_4.io.nE_in[0] <= nE_reg[0] @[system.scala 55:19]
    rules_4.io.nE_in[1] <= nE_reg[1] @[system.scala 55:19]
    rules_4.io.nE_in[2] <= nE_reg[2] @[system.scala 55:19]
    node _T_8 = eq(io.en_a, UInt<3>("h4")) @[system.scala 56:27]
    rules_4.io.en_r <= _T_8 @[system.scala 56:17]
    node _T_9 = eq(io.en_a, UInt<3>("h4")) @[system.scala 57:13]
    when _T_9 : @[system.scala 57:21]
      x_reg <= rules_4.io.x_out @[system.scala 58:7]
      nI_reg <= rules_4.io.nI_out @[system.scala 59:8]
      nT_reg <= rules_4.io.nT_out @[system.scala 60:8]
      nC_reg <= rules_4.io.nC_out @[system.scala 61:8]
      nE_reg <= rules_4.io.nE_out @[system.scala 62:8]
    rules_5.io.x_in <= x_reg @[system.scala 51:18]
    rules_5.io.nI_in[0] <= nI_reg[0] @[system.scala 52:19]
    rules_5.io.nI_in[1] <= nI_reg[1] @[system.scala 52:19]
    rules_5.io.nI_in[2] <= nI_reg[2] @[system.scala 52:19]
    rules_5.io.nT_in[0] <= nT_reg[0] @[system.scala 53:19]
    rules_5.io.nT_in[1] <= nT_reg[1] @[system.scala 53:19]
    rules_5.io.nT_in[2] <= nT_reg[2] @[system.scala 53:19]
    rules_5.io.nC_in[0] <= nC_reg[0] @[system.scala 54:19]
    rules_5.io.nC_in[1] <= nC_reg[1] @[system.scala 54:19]
    rules_5.io.nC_in[2] <= nC_reg[2] @[system.scala 54:19]
    rules_5.io.nE_in[0] <= nE_reg[0] @[system.scala 55:19]
    rules_5.io.nE_in[1] <= nE_reg[1] @[system.scala 55:19]
    rules_5.io.nE_in[2] <= nE_reg[2] @[system.scala 55:19]
    node _T_10 = eq(io.en_a, UInt<3>("h5")) @[system.scala 56:27]
    rules_5.io.en_r <= _T_10 @[system.scala 56:17]
    node _T_11 = eq(io.en_a, UInt<3>("h5")) @[system.scala 57:13]
    when _T_11 : @[system.scala 57:21]
      x_reg <= rules_5.io.x_out @[system.scala 58:7]
      nI_reg <= rules_5.io.nI_out @[system.scala 59:8]
      nT_reg <= rules_5.io.nT_out @[system.scala 60:8]
      nC_reg <= rules_5.io.nC_out @[system.scala 61:8]
      nE_reg <= rules_5.io.nE_out @[system.scala 62:8]
    rules_6.io.x_in <= x_reg @[system.scala 51:18]
    rules_6.io.nI_in[0] <= nI_reg[0] @[system.scala 52:19]
    rules_6.io.nI_in[1] <= nI_reg[1] @[system.scala 52:19]
    rules_6.io.nI_in[2] <= nI_reg[2] @[system.scala 52:19]
    rules_6.io.nT_in[0] <= nT_reg[0] @[system.scala 53:19]
    rules_6.io.nT_in[1] <= nT_reg[1] @[system.scala 53:19]
    rules_6.io.nT_in[2] <= nT_reg[2] @[system.scala 53:19]
    rules_6.io.nC_in[0] <= nC_reg[0] @[system.scala 54:19]
    rules_6.io.nC_in[1] <= nC_reg[1] @[system.scala 54:19]
    rules_6.io.nC_in[2] <= nC_reg[2] @[system.scala 54:19]
    rules_6.io.nE_in[0] <= nE_reg[0] @[system.scala 55:19]
    rules_6.io.nE_in[1] <= nE_reg[1] @[system.scala 55:19]
    rules_6.io.nE_in[2] <= nE_reg[2] @[system.scala 55:19]
    node _T_12 = eq(io.en_a, UInt<3>("h6")) @[system.scala 56:27]
    rules_6.io.en_r <= _T_12 @[system.scala 56:17]
    node _T_13 = eq(io.en_a, UInt<3>("h6")) @[system.scala 57:13]
    when _T_13 : @[system.scala 57:21]
      x_reg <= rules_6.io.x_out @[system.scala 58:7]
      nI_reg <= rules_6.io.nI_out @[system.scala 59:8]
      nT_reg <= rules_6.io.nT_out @[system.scala 60:8]
      nC_reg <= rules_6.io.nC_out @[system.scala 61:8]
      nE_reg <= rules_6.io.nE_out @[system.scala 62:8]
    rules_7.io.x_in <= x_reg @[system.scala 51:18]
    rules_7.io.nI_in[0] <= nI_reg[0] @[system.scala 52:19]
    rules_7.io.nI_in[1] <= nI_reg[1] @[system.scala 52:19]
    rules_7.io.nI_in[2] <= nI_reg[2] @[system.scala 52:19]
    rules_7.io.nT_in[0] <= nT_reg[0] @[system.scala 53:19]
    rules_7.io.nT_in[1] <= nT_reg[1] @[system.scala 53:19]
    rules_7.io.nT_in[2] <= nT_reg[2] @[system.scala 53:19]
    rules_7.io.nC_in[0] <= nC_reg[0] @[system.scala 54:19]
    rules_7.io.nC_in[1] <= nC_reg[1] @[system.scala 54:19]
    rules_7.io.nC_in[2] <= nC_reg[2] @[system.scala 54:19]
    rules_7.io.nE_in[0] <= nE_reg[0] @[system.scala 55:19]
    rules_7.io.nE_in[1] <= nE_reg[1] @[system.scala 55:19]
    rules_7.io.nE_in[2] <= nE_reg[2] @[system.scala 55:19]
    node _T_14 = eq(io.en_a, UInt<3>("h7")) @[system.scala 56:27]
    rules_7.io.en_r <= _T_14 @[system.scala 56:17]
    node _T_15 = eq(io.en_a, UInt<3>("h7")) @[system.scala 57:13]
    when _T_15 : @[system.scala 57:21]
      x_reg <= rules_7.io.x_out @[system.scala 58:7]
      nI_reg <= rules_7.io.nI_out @[system.scala 59:8]
      nT_reg <= rules_7.io.nT_out @[system.scala 60:8]
      nC_reg <= rules_7.io.nC_out @[system.scala 61:8]
      nE_reg <= rules_7.io.nE_out @[system.scala 62:8]
    rules_8.io.x_in <= x_reg @[system.scala 51:18]
    rules_8.io.nI_in[0] <= nI_reg[0] @[system.scala 52:19]
    rules_8.io.nI_in[1] <= nI_reg[1] @[system.scala 52:19]
    rules_8.io.nI_in[2] <= nI_reg[2] @[system.scala 52:19]
    rules_8.io.nT_in[0] <= nT_reg[0] @[system.scala 53:19]
    rules_8.io.nT_in[1] <= nT_reg[1] @[system.scala 53:19]
    rules_8.io.nT_in[2] <= nT_reg[2] @[system.scala 53:19]
    rules_8.io.nC_in[0] <= nC_reg[0] @[system.scala 54:19]
    rules_8.io.nC_in[1] <= nC_reg[1] @[system.scala 54:19]
    rules_8.io.nC_in[2] <= nC_reg[2] @[system.scala 54:19]
    rules_8.io.nE_in[0] <= nE_reg[0] @[system.scala 55:19]
    rules_8.io.nE_in[1] <= nE_reg[1] @[system.scala 55:19]
    rules_8.io.nE_in[2] <= nE_reg[2] @[system.scala 55:19]
    node _T_16 = eq(io.en_a, UInt<4>("h8")) @[system.scala 56:27]
    rules_8.io.en_r <= _T_16 @[system.scala 56:17]
    node _T_17 = eq(io.en_a, UInt<4>("h8")) @[system.scala 57:13]
    when _T_17 : @[system.scala 57:21]
      x_reg <= rules_8.io.x_out @[system.scala 58:7]
      nI_reg <= rules_8.io.nI_out @[system.scala 59:8]
      nT_reg <= rules_8.io.nT_out @[system.scala 60:8]
      nC_reg <= rules_8.io.nC_out @[system.scala 61:8]
      nE_reg <= rules_8.io.nE_out @[system.scala 62:8]
    rules_9.io.x_in <= x_reg @[system.scala 51:18]
    rules_9.io.nI_in[0] <= nI_reg[0] @[system.scala 52:19]
    rules_9.io.nI_in[1] <= nI_reg[1] @[system.scala 52:19]
    rules_9.io.nI_in[2] <= nI_reg[2] @[system.scala 52:19]
    rules_9.io.nT_in[0] <= nT_reg[0] @[system.scala 53:19]
    rules_9.io.nT_in[1] <= nT_reg[1] @[system.scala 53:19]
    rules_9.io.nT_in[2] <= nT_reg[2] @[system.scala 53:19]
    rules_9.io.nC_in[0] <= nC_reg[0] @[system.scala 54:19]
    rules_9.io.nC_in[1] <= nC_reg[1] @[system.scala 54:19]
    rules_9.io.nC_in[2] <= nC_reg[2] @[system.scala 54:19]
    rules_9.io.nE_in[0] <= nE_reg[0] @[system.scala 55:19]
    rules_9.io.nE_in[1] <= nE_reg[1] @[system.scala 55:19]
    rules_9.io.nE_in[2] <= nE_reg[2] @[system.scala 55:19]
    node _T_18 = eq(io.en_a, UInt<4>("h9")) @[system.scala 56:27]
    rules_9.io.en_r <= _T_18 @[system.scala 56:17]
    node _T_19 = eq(io.en_a, UInt<4>("h9")) @[system.scala 57:13]
    when _T_19 : @[system.scala 57:21]
      x_reg <= rules_9.io.x_out @[system.scala 58:7]
      nI_reg <= rules_9.io.nI_out @[system.scala 59:8]
      nT_reg <= rules_9.io.nT_out @[system.scala 60:8]
      nC_reg <= rules_9.io.nC_out @[system.scala 61:8]
      nE_reg <= rules_9.io.nE_out @[system.scala 62:8]
    node _T_20 = neq(UInt<1>("h1"), UInt<1>("h1")) @[system.scala 75:14]
    node _T_21 = eq(_T_20, UInt<1>("h0")) @[system.scala 75:9]
    node _T_22 = eq(nC_reg[1], UInt<1>("h0")) @[system.scala 75:24]
    node _T_23 = eq(nC_reg[1], UInt<1>("h0")) @[system.scala 75:37]
    node _T_24 = or(_T_22, _T_23) @[system.scala 75:34]
    node _T_25 = or(_T_21, _T_24) @[system.scala 75:21]
    node _T_26 = bits(reset, 0, 0) @[system.scala 75:7]
    node _T_27 = eq(_T_26, UInt<1>("h0")) @[system.scala 75:7]
    when _T_27 : @[system.scala 75:7]
      node _T_28 = eq(_T_25, UInt<1>("h0")) @[system.scala 75:7]
      when _T_28 : @[system.scala 75:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:75 assert((!(i.U=/=j.U)||(!nC_reg(i)||(!nC_reg(j)))))\n") : printf @[system.scala 75:7]
      assert(clock, _T_25, UInt<1>("h1"), "") : assert @[system.scala 75:7]
    node _T_29 = neq(UInt<1>("h1"), UInt<2>("h2")) @[system.scala 75:14]
    node _T_30 = eq(_T_29, UInt<1>("h0")) @[system.scala 75:9]
    node _T_31 = eq(nC_reg[1], UInt<1>("h0")) @[system.scala 75:24]
    node _T_32 = eq(nC_reg[2], UInt<1>("h0")) @[system.scala 75:37]
    node _T_33 = or(_T_31, _T_32) @[system.scala 75:34]
    node _T_34 = or(_T_30, _T_33) @[system.scala 75:21]
    node _T_35 = bits(reset, 0, 0) @[system.scala 75:7]
    node _T_36 = eq(_T_35, UInt<1>("h0")) @[system.scala 75:7]
    when _T_36 : @[system.scala 75:7]
      node _T_37 = eq(_T_34, UInt<1>("h0")) @[system.scala 75:7]
      when _T_37 : @[system.scala 75:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:75 assert((!(i.U=/=j.U)||(!nC_reg(i)||(!nC_reg(j)))))\n") : printf_1 @[system.scala 75:7]
      assert(clock, _T_34, UInt<1>("h1"), "") : assert_1 @[system.scala 75:7]
    node _T_38 = neq(UInt<2>("h2"), UInt<1>("h1")) @[system.scala 75:14]
    node _T_39 = eq(_T_38, UInt<1>("h0")) @[system.scala 75:9]
    node _T_40 = eq(nC_reg[2], UInt<1>("h0")) @[system.scala 75:24]
    node _T_41 = eq(nC_reg[1], UInt<1>("h0")) @[system.scala 75:37]
    node _T_42 = or(_T_40, _T_41) @[system.scala 75:34]
    node _T_43 = or(_T_39, _T_42) @[system.scala 75:21]
    node _T_44 = bits(reset, 0, 0) @[system.scala 75:7]
    node _T_45 = eq(_T_44, UInt<1>("h0")) @[system.scala 75:7]
    when _T_45 : @[system.scala 75:7]
      node _T_46 = eq(_T_43, UInt<1>("h0")) @[system.scala 75:7]
      when _T_46 : @[system.scala 75:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:75 assert((!(i.U=/=j.U)||(!nC_reg(i)||(!nC_reg(j)))))\n") : printf_2 @[system.scala 75:7]
      assert(clock, _T_43, UInt<1>("h1"), "") : assert_2 @[system.scala 75:7]
    node _T_47 = neq(UInt<2>("h2"), UInt<2>("h2")) @[system.scala 75:14]
    node _T_48 = eq(_T_47, UInt<1>("h0")) @[system.scala 75:9]
    node _T_49 = eq(nC_reg[2], UInt<1>("h0")) @[system.scala 75:24]
    node _T_50 = eq(nC_reg[2], UInt<1>("h0")) @[system.scala 75:37]
    node _T_51 = or(_T_49, _T_50) @[system.scala 75:34]
    node _T_52 = or(_T_48, _T_51) @[system.scala 75:21]
    node _T_53 = bits(reset, 0, 0) @[system.scala 75:7]
    node _T_54 = eq(_T_53, UInt<1>("h0")) @[system.scala 75:7]
    when _T_54 : @[system.scala 75:7]
      node _T_55 = eq(_T_52, UInt<1>("h0")) @[system.scala 75:7]
      when _T_55 : @[system.scala 75:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:75 assert((!(i.U=/=j.U)||(!nC_reg(i)||(!nC_reg(j)))))\n") : printf_3 @[system.scala 75:7]
      assert(clock, _T_52, UInt<1>("h1"), "") : assert_3 @[system.scala 75:7]
    node _T_56 = neq(UInt<1>("h1"), UInt<1>("h1")) @[system.scala 80:14]
    node _T_57 = eq(_T_56, UInt<1>("h0")) @[system.scala 80:9]
    node _T_58 = eq(nE_reg[1], UInt<1>("h0")) @[system.scala 80:24]
    node _T_59 = eq(nE_reg[1], UInt<1>("h0")) @[system.scala 80:37]
    node _T_60 = or(_T_58, _T_59) @[system.scala 80:34]
    node _T_61 = or(_T_57, _T_60) @[system.scala 80:21]
    node _T_62 = bits(reset, 0, 0) @[system.scala 80:7]
    node _T_63 = eq(_T_62, UInt<1>("h0")) @[system.scala 80:7]
    when _T_63 : @[system.scala 80:7]
      node _T_64 = eq(_T_61, UInt<1>("h0")) @[system.scala 80:7]
      when _T_64 : @[system.scala 80:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:80 assert((!(i.U=/=j.U)||(!nE_reg(i)||(!nE_reg(j)))))\n") : printf_4 @[system.scala 80:7]
      assert(clock, _T_61, UInt<1>("h1"), "") : assert_4 @[system.scala 80:7]
    node _T_65 = neq(UInt<1>("h1"), UInt<2>("h2")) @[system.scala 80:14]
    node _T_66 = eq(_T_65, UInt<1>("h0")) @[system.scala 80:9]
    node _T_67 = eq(nE_reg[1], UInt<1>("h0")) @[system.scala 80:24]
    node _T_68 = eq(nE_reg[2], UInt<1>("h0")) @[system.scala 80:37]
    node _T_69 = or(_T_67, _T_68) @[system.scala 80:34]
    node _T_70 = or(_T_66, _T_69) @[system.scala 80:21]
    node _T_71 = bits(reset, 0, 0) @[system.scala 80:7]
    node _T_72 = eq(_T_71, UInt<1>("h0")) @[system.scala 80:7]
    when _T_72 : @[system.scala 80:7]
      node _T_73 = eq(_T_70, UInt<1>("h0")) @[system.scala 80:7]
      when _T_73 : @[system.scala 80:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:80 assert((!(i.U=/=j.U)||(!nE_reg(i)||(!nE_reg(j)))))\n") : printf_5 @[system.scala 80:7]
      assert(clock, _T_70, UInt<1>("h1"), "") : assert_5 @[system.scala 80:7]
    node _T_74 = neq(UInt<2>("h2"), UInt<1>("h1")) @[system.scala 80:14]
    node _T_75 = eq(_T_74, UInt<1>("h0")) @[system.scala 80:9]
    node _T_76 = eq(nE_reg[2], UInt<1>("h0")) @[system.scala 80:24]
    node _T_77 = eq(nE_reg[1], UInt<1>("h0")) @[system.scala 80:37]
    node _T_78 = or(_T_76, _T_77) @[system.scala 80:34]
    node _T_79 = or(_T_75, _T_78) @[system.scala 80:21]
    node _T_80 = bits(reset, 0, 0) @[system.scala 80:7]
    node _T_81 = eq(_T_80, UInt<1>("h0")) @[system.scala 80:7]
    when _T_81 : @[system.scala 80:7]
      node _T_82 = eq(_T_79, UInt<1>("h0")) @[system.scala 80:7]
      when _T_82 : @[system.scala 80:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:80 assert((!(i.U=/=j.U)||(!nE_reg(i)||(!nE_reg(j)))))\n") : printf_6 @[system.scala 80:7]
      assert(clock, _T_79, UInt<1>("h1"), "") : assert_6 @[system.scala 80:7]
    node _T_83 = neq(UInt<2>("h2"), UInt<2>("h2")) @[system.scala 80:14]
    node _T_84 = eq(_T_83, UInt<1>("h0")) @[system.scala 80:9]
    node _T_85 = eq(nE_reg[2], UInt<1>("h0")) @[system.scala 80:24]
    node _T_86 = eq(nE_reg[2], UInt<1>("h0")) @[system.scala 80:37]
    node _T_87 = or(_T_85, _T_86) @[system.scala 80:34]
    node _T_88 = or(_T_84, _T_87) @[system.scala 80:21]
    node _T_89 = bits(reset, 0, 0) @[system.scala 80:7]
    node _T_90 = eq(_T_89, UInt<1>("h0")) @[system.scala 80:7]
    when _T_90 : @[system.scala 80:7]
      node _T_91 = eq(_T_88, UInt<1>("h0")) @[system.scala 80:7]
      when _T_91 : @[system.scala 80:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:80 assert((!(i.U=/=j.U)||(!nE_reg(i)||(!nE_reg(j)))))\n") : printf_7 @[system.scala 80:7]
      assert(clock, _T_88, UInt<1>("h1"), "") : assert_7 @[system.scala 80:7]
    node _T_92 = neq(UInt<1>("h1"), UInt<1>("h1")) @[system.scala 85:14]
    node _T_93 = eq(_T_92, UInt<1>("h0")) @[system.scala 85:9]
    node _T_94 = eq(nE_reg[1], UInt<1>("h0")) @[system.scala 85:24]
    node _T_95 = eq(nC_reg[1], UInt<1>("h0")) @[system.scala 85:37]
    node _T_96 = or(_T_94, _T_95) @[system.scala 85:34]
    node _T_97 = or(_T_93, _T_96) @[system.scala 85:21]
    node _T_98 = bits(reset, 0, 0) @[system.scala 85:7]
    node _T_99 = eq(_T_98, UInt<1>("h0")) @[system.scala 85:7]
    when _T_99 : @[system.scala 85:7]
      node _T_100 = eq(_T_97, UInt<1>("h0")) @[system.scala 85:7]
      when _T_100 : @[system.scala 85:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:85 assert((!(i.U=/=j.U)||(!nE_reg(i)||(!nC_reg(j)))))\n") : printf_8 @[system.scala 85:7]
      assert(clock, _T_97, UInt<1>("h1"), "") : assert_8 @[system.scala 85:7]
    node _T_101 = neq(UInt<1>("h1"), UInt<2>("h2")) @[system.scala 85:14]
    node _T_102 = eq(_T_101, UInt<1>("h0")) @[system.scala 85:9]
    node _T_103 = eq(nE_reg[1], UInt<1>("h0")) @[system.scala 85:24]
    node _T_104 = eq(nC_reg[2], UInt<1>("h0")) @[system.scala 85:37]
    node _T_105 = or(_T_103, _T_104) @[system.scala 85:34]
    node _T_106 = or(_T_102, _T_105) @[system.scala 85:21]
    node _T_107 = bits(reset, 0, 0) @[system.scala 85:7]
    node _T_108 = eq(_T_107, UInt<1>("h0")) @[system.scala 85:7]
    when _T_108 : @[system.scala 85:7]
      node _T_109 = eq(_T_106, UInt<1>("h0")) @[system.scala 85:7]
      when _T_109 : @[system.scala 85:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:85 assert((!(i.U=/=j.U)||(!nE_reg(i)||(!nC_reg(j)))))\n") : printf_9 @[system.scala 85:7]
      assert(clock, _T_106, UInt<1>("h1"), "") : assert_9 @[system.scala 85:7]
    node _T_110 = neq(UInt<2>("h2"), UInt<1>("h1")) @[system.scala 85:14]
    node _T_111 = eq(_T_110, UInt<1>("h0")) @[system.scala 85:9]
    node _T_112 = eq(nE_reg[2], UInt<1>("h0")) @[system.scala 85:24]
    node _T_113 = eq(nC_reg[1], UInt<1>("h0")) @[system.scala 85:37]
    node _T_114 = or(_T_112, _T_113) @[system.scala 85:34]
    node _T_115 = or(_T_111, _T_114) @[system.scala 85:21]
    node _T_116 = bits(reset, 0, 0) @[system.scala 85:7]
    node _T_117 = eq(_T_116, UInt<1>("h0")) @[system.scala 85:7]
    when _T_117 : @[system.scala 85:7]
      node _T_118 = eq(_T_115, UInt<1>("h0")) @[system.scala 85:7]
      when _T_118 : @[system.scala 85:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:85 assert((!(i.U=/=j.U)||(!nE_reg(i)||(!nC_reg(j)))))\n") : printf_10 @[system.scala 85:7]
      assert(clock, _T_115, UInt<1>("h1"), "") : assert_10 @[system.scala 85:7]
    node _T_119 = neq(UInt<2>("h2"), UInt<2>("h2")) @[system.scala 85:14]
    node _T_120 = eq(_T_119, UInt<1>("h0")) @[system.scala 85:9]
    node _T_121 = eq(nE_reg[2], UInt<1>("h0")) @[system.scala 85:24]
    node _T_122 = eq(nC_reg[2], UInt<1>("h0")) @[system.scala 85:37]
    node _T_123 = or(_T_121, _T_122) @[system.scala 85:34]
    node _T_124 = or(_T_120, _T_123) @[system.scala 85:21]
    node _T_125 = bits(reset, 0, 0) @[system.scala 85:7]
    node _T_126 = eq(_T_125, UInt<1>("h0")) @[system.scala 85:7]
    when _T_126 : @[system.scala 85:7]
      node _T_127 = eq(_T_124, UInt<1>("h0")) @[system.scala 85:7]
      when _T_127 : @[system.scala 85:7]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at system.scala:85 assert((!(i.U=/=j.U)||(!nE_reg(i)||(!nC_reg(j)))))\n") : printf_11 @[system.scala 85:7]
      assert(clock, _T_124, UInt<1>("h1"), "") : assert_11 @[system.scala 85:7]


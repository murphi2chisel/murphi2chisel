Timeout: 3600, Memory_limit: 64000
	10000.000000 (abstract query)
	10000.000000 (concrete query)

Config:
	(concrete bit-width limit: 0)
	(fineness: 2)
	(interpret-ex-cc-level: 2)
	(forward-check:	0)
	(full projection)
	(prioritization:	single)

#STAT# num_bits= 13 num_regs= 14 num_total_bits= 51
1  13
2  4
3  10

System
  int : 609
  bool : 532
  sum : 1141
  bool_op : 529
  int_op : 12
    !  25
    !=_int  2
    &&  22
    ==  13
    ==_int  46
    ?:  137
    ?:_int  276
    |_2  3
    |_3  8
    |_5  1
    ||  8


Property
  int : 0
  bool : 33
  sum : 33
  bool_op : 14
  int_op : 0
    !  8
    &&  5
    ==  1

Partial interpretation info:
  depth: 0
  count: 0
  count (d=0): 0

  depth (prop): 0
  count (prop): 0
  count (d=0) (prop): 0

	# of Inst.                  : 1223	(864 bytes each)
	  ExInst::hm_ExInst.size()  : 0	(984 bytes each)
	  SigInst::hm_SigInst.size(): 66	(904 bytes each)
	  NumInst::hm_NumInst.size(): 30	(888 bytes each)
	  OpInst::hm_OpInst.size()  : 151	(944 bytes each)
	  OpInst::hm_ITEInst.size() : 413	(944 bytes each)
	  OpInst::hm_ETCInst.size() : 8	(944 bytes each)
	Total                       : 668

	Memory (est.)               : 1.007721 MB
	  ExInst                    : 0.000000 MB
	  SigInst                   : 0.056900 MB
	  NumInst                   : 0.025406 MB
	  OpInst::OP                : 0.135941 MB
	  OpInst::ITE               : 0.371811 MB
	  OpInst::ETC               : 0.007202 MB

	(maximum function composition in T: 1)

---------------------------------------------------------------------------------------------
 Reachability Analysis Begins
---------------------------------------------------------------------------------------------
Loop_FrameNumber_#ReachabilityIterations_#RefinementIterations
---------------------------------------------------------------------------------------------
Loop_0_0_0
---------------------------------------------------------------------------------------------
[Basis Step]:
	F[0] = I
	SAT_a ? [ F[0] && !P ]: UNSAT

[First Step]:
	SAT_a ? [ F[0] & T & !P ]: UNSAT

[RES_1]       0	: 0	: 0 s: 0
[RES_0]    L  0 : 0 s: 0, mem: 13, time: 0.007957
[RES_1]       0	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 13, time: 0.008116
---------------------------------------------------------------------------------------------
Loop_1_0_0
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 4	(4 + 0 + 0 + 0 + 0)
	(concrete cube) 4	(4 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 3	(3 + 0 + 0 + 0 + 0)
	(concrete cube) 3	(3 + 0 + 0 + 0)
		(Next: ((_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 12)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 10)

	[Simulation check]: 
[Sim_1]    =========== Simulation Begins ===============
	1: A[1]
[1] Cube to CubeNext+ is UNSAT

		(cc core: 36 -> 2)
resMusBv: 1
		ACEXT is infeasible
			(unsat: A[1] to A[0] )
[Sim_1]    Adding lemma to ensure following never happens: 
	_s26_id73
	(_i1_io_en_a == 5'd1)

[Sim_1]    Processing failure condition: 
	_s26_id73
	(_i1_io_en_a == 5'd1)

			(adding predicate (absent)   _s26_id73 )
						(learning signal    _s26_id73 )
			(adding predicate (absent)   (_i1_io_en_a == 5'd1) )
			(finding parent expressions)	(_i1_io_en_a == 5'd1)
				(parent expression)
					(_i1_io_en_a == 5'd1) := (_i1_io_en_a == 5'd1)
						(learning signal    _i1_io_en_a )
						(learning constant  5'd1 )
[Sim_1]    =========== Simulation Ends ===============

	[Lemmas]: 
		[1] !((((_i1_io_en_a == 5'd1) || (_i1_io_en_a != 5'd1)) && b$1997 && (_s26_id73 || !(_s26_id73)) && _s26_id73))
#1321
#Lemmas = 3
[RES_1]       1	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.018069
---------------------------------------------------------------------------------------------
Loop_1_0_1
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd2) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd2) && _s26_id73))
#1334
#Lemmas = 4
[RES_1]       2	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.019828
---------------------------------------------------------------------------------------------
Loop_1_0_2
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd3) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd3) && _s26_id73))
#1342
#Lemmas = 5
[RES_1]       3	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.021442
---------------------------------------------------------------------------------------------
Loop_1_0_3
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd4) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd4) && _s26_id73))
#1350
#Lemmas = 6
[RES_1]       4	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.023025
---------------------------------------------------------------------------------------------
Loop_1_0_4
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd5) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd5) && _s26_id73))
#1358
#Lemmas = 7
[RES_1]       5	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.024561
---------------------------------------------------------------------------------------------
Loop_1_0_5
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd6) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd6) && _s26_id73))
#1366
#Lemmas = 8
[RES_1]       6	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.026053
---------------------------------------------------------------------------------------------
Loop_1_0_6
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd7) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd7) && _s26_id73))
#1374
#Lemmas = 9
[RES_1]       7	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.027537
---------------------------------------------------------------------------------------------
Loop_1_0_7
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #11
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #11
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd8) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd8) && _s26_id73))
#1382
#Lemmas = 10
[RES_1]       8	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.028957
---------------------------------------------------------------------------------------------
Loop_1_0_8
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd9) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd9) && _s26_id73))
#1390
#Lemmas = 11
[RES_1]       9	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.030351
---------------------------------------------------------------------------------------------
Loop_1_0_9
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd10) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd10) && _s26_id73))
#1398
#Lemmas = 12
[RES_1]       10	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.031703
---------------------------------------------------------------------------------------------
Loop_1_0_10
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd11) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd11) && _s26_id73))
#1409
#Lemmas = 13
[RES_1]       11	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.033104
---------------------------------------------------------------------------------------------
Loop_1_0_11
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd12) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd12) && _s26_id73))
#1420
#Lemmas = 14
[RES_1]       12	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.034444
---------------------------------------------------------------------------------------------
Loop_1_0_12
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd13) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd13) && _s26_id73))
#1431
#Lemmas = 15
[RES_1]       13	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.035744
---------------------------------------------------------------------------------------------
Loop_1_0_13
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd14) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd14) && _s26_id73))
#1442
#Lemmas = 16
[RES_1]       14	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.037009
---------------------------------------------------------------------------------------------
Loop_1_0_14
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd15) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd15) && _s26_id73))
#1453
#Lemmas = 17
[RES_1]       15	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.038255
---------------------------------------------------------------------------------------------
Loop_1_0_15
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd16) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd16) && _s26_id73))
#1464
#Lemmas = 18
[RES_1]       16	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.03946
---------------------------------------------------------------------------------------------
Loop_1_0_16
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd17) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd17) && _s26_id73))
#1472
#Lemmas = 19
[RES_1]       17	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.040579
---------------------------------------------------------------------------------------------
Loop_1_0_17
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd18) && _s26_id73)

	[Lemmas]: 
		[1] !(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd18) && _s26_id73))
#1480
#Lemmas = 20
[RES_1]       18	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 16, time: 0.041644
---------------------------------------------------------------------------------------------
Loop_1_0_18
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(29 + 6 -> 29 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s2_cache_reg_2 == 2'd2)
		[1] w2	((_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 1	: 0 1 s: 1
[RES_0]    L  1 : 0 2 s: 2, mem: 16, time: 0.042035
---------------------------------------------------------------------------------------------
Loop_1_1_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(29 + 6 -> 29 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 == 2'd2)
		[1] w2	((_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 1	: 0 2 s: 2
[RES_0]    L  1 : 0 4 s: 4, mem: 16, time: 0.042403
---------------------------------------------------------------------------------------------
Loop_1_2_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: UNSAT
[RES_1]       18	: 1	: 0 2 s: 2
[RES_0]    L  1 : 0 4 s: 4, mem: 16, time: 0.04243
	[Forward propagation]:
	(F1 about to converge: #2)
		((_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
		((_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 2	: 0 2 0 s: 2
[RES_0]    L  2 : 0 4 0 s: 4, mem: 17, time: 0.042799
---------------------------------------------------------------------------------------------
Loop_2_0_18
---------------------------------------------------------------------------------------------
	F[2] = P
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(29 + 6 -> 29 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s2_cache_reg_2$next)
	(6 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 2	: 0 2 1 s: 3
[RES_0]    L  2 : 0 4 3 s: 7, mem: 17, time: 0.044155
---------------------------------------------------------------------------------------------
Loop_2_1_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(30 + 4 -> 30 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s7_channel2_4_reg_1 == 3'd6)
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(31 + 6 -> 31 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 == 2'd2)
		[1] w2	((_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 2	: 0 2 1 s: 3
[RES_0]    L  2 : 0 4 2 s: 6, mem: 17, time: 0.045383
---------------------------------------------------------------------------------------------
Loop_2_2_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(31 + 4 -> 31 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_channel2_4_reg_2 == 3'd6)
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(33 + 6 -> 33 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s2_cache_reg_2 == 2'd2)
		[1] w2	((_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 2	: 0 2 2 s: 4
[RES_0]    L  2 : 0 4 4 s: 8, mem: 17, time: 0.046774
---------------------------------------------------------------------------------------------
Loop_2_3_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: UNSAT
[RES_1]       18	: 2	: 0 2 2 s: 4
[RES_0]    L  2 : 0 4 4 s: 8, mem: 17, time: 0.046806
	[Forward propagation]:
	(F1 about to converge: #2)
		((_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
		((_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	(F2 about to converge: #2)
		((_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
		((_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 3	: 0 2 2 0 s: 4
[RES_0]    L  3 : 0 4 4 0 s: 8, mem: 17, time: 0.047577
---------------------------------------------------------------------------------------------
Loop_3_0_18
---------------------------------------------------------------------------------------------
	F[3] = P
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(30 + 6 -> 30 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s2_cache_reg_2$next)
	(6 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 3	: 0 2 2 1 s: 5
[RES_0]    L  3 : 0 4 4 3 s: 11, mem: 17, time: 0.04876
---------------------------------------------------------------------------------------------
Loop_3_1_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 11 -> 1)
	(36 + 11 -> 36 + 1)
	(11 -> 1 -> 1)
	(11 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s13_home_current_command_reg == 3'd2)
		[1] w3	((_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(37 + 4 -> 37 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s7_channel2_4_reg_1 == 3'd6)
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(32 + 6 -> 32 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 == 2'd2)
		[1] w2	((_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 3	: 0 2 2 1 s: 5
[RES_0]    L  3 : 0 4 4 2 s: 10, mem: 17, time: 0.051475
---------------------------------------------------------------------------------------------
Loop_3_2_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(40 + 4 -> 40 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_channel2_4_reg_2 == 3'd6)
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(34 + 6 -> 34 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s2_cache_reg_2 == 2'd2)
		[1] w2	((_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 3	: 0 1 2 2 s: 5
[RES_0]    L  3 : 0 2 4 4 s: 10, mem: 17, time: 0.053371
---------------------------------------------------------------------------------------------
Loop_3_3_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: UNSAT
[RES_1]       18	: 3	: 0 1 2 2 s: 5
[RES_0]    L  3 : 0 2 4 4 s: 10, mem: 17, time: 0.053397
	[Forward propagation]:
	(F1 about to converge: #1)
		((_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	(F2 about to converge: #2)
		((_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
		((_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	(F3 about to converge: #2)
		((_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
		((_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 4	: 0 1 2 2 0 s: 5
[RES_0]    L  4 : 0 2 4 4 0 s: 10, mem: 17, time: 0.054391
---------------------------------------------------------------------------------------------
Loop_4_0_18
---------------------------------------------------------------------------------------------
	F[4] = P
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(30 + 6 -> 30 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s2_cache_reg_2$next)
	(6 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 4	: 0 1 2 2 1 s: 6
[RES_0]    L  4 : 0 2 4 4 3 s: 13, mem: 17, time: 0.055586
---------------------------------------------------------------------------------------------
Loop_4_1_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 14 -> 1)
	(37 + 14 -> 37 + 1)
	(14 -> 1 -> 1)
	(14 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s13_home_current_command_reg != _s7_channel2_4_reg_1)
		[1] w3	((_s13_home_current_command_reg != _s7_channel2_4_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(37 + 12 -> 37 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_channel1_reg_1 == 3'd2)
		[1] w3	((_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(50 + 11 -> 50 + 4)
	(11 -> 4 -> 2)
	(11 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(38 + 4 -> 38 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s7_channel2_4_reg_1 == 3'd6)
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(32 + 6 -> 32 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 == 2'd2)
		[1] w2	((_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 4	: 0 3 2 2 1 s: 8
[RES_0]    L  4 : 0 6 5 4 2 s: 17, mem: 17, time: 0.061954
---------------------------------------------------------------------------------------------
Loop_4_2_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(38 + 13 -> 38 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_channel2_4_reg_2 != _s13_home_current_command_reg)
		[1] w3	((_s8_channel2_4_reg_2 != _s13_home_current_command_reg) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 11 -> 1)
	(38 + 11 -> 38 + 1)
	(11 -> 1 -> 1)
	(11 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel1_reg_2 == 3'd2)
		[1] w3	((_s5_channel1_reg_2 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(55 + 10 -> 55 + 3)
	(10 -> 3 -> 1)
	(10 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s13_home_current_command_reg == 3'd2)
		[1] w3	((_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(42 + 4 -> 42 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_channel2_4_reg_2 == 3'd6)
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(34 + 6 -> 34 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s2_cache_reg_2 == 2'd2)
		[1] w2	((_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 4	: 0 4 1 2 2 s: 9
[RES_0]    L  4 : 0 8 2 4 4 s: 18, mem: 18, time: 0.0682
---------------------------------------------------------------------------------------------
Loop_4_3_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: UNSAT
[RES_1]       18	: 4	: 0 4 1 2 2 s: 9
[RES_0]    L  4 : 0 8 2 4 4 s: 18, mem: 18, time: 0.068228
	[Forward propagation]:
	(F2 about to converge: #1)
		((_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	(F3 about to converge: #2)
		((_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
		((_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	(F4 about to converge: #2)
		((_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
		((_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 5	: 0 4 1 2 2 0 s: 9
[RES_0]    L  5 : 0 8 2 4 4 0 s: 18, mem: 18, time: 0.070318
---------------------------------------------------------------------------------------------
Loop_5_0_18
---------------------------------------------------------------------------------------------
	F[5] = P
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(30 + 6 -> 30 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s2_cache_reg_2$next)
	(6 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       18	: 5	: 0 4 1 2 2 1 s: 10
[RES_0]    L  5 : 0 8 2 4 4 3 s: 21, mem: 18, time: 0.071541
---------------------------------------------------------------------------------------------
Loop_5_1_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(4 + 2 + 0 + 0 + 0)
	(concrete cube) 6	(4 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 14 -> 2)
	(60 + 14 -> 60 + 2)
	(14 -> 2 -> 2)
	(14 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd2) && (_s13_home_current_command_reg != _s7_channel2_4_reg_1))
		[1] w3	((_s4_channel1_reg_1 == 3'd2) && (_s13_home_current_command_reg != _s7_channel2_4_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 14 -> 1)
	(38 + 14 -> 38 + 1)
	(14 -> 1 -> 1)
	(14 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s4_channel1_reg_1 != _s7_channel2_4_reg_1)
		[1] w3	((_s4_channel1_reg_1 != _s7_channel2_4_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(38 + 12 -> 38 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 == 2'd1)
		[1] w2	((_s1_cache_reg_1 == 2'd1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 15 -> 1)
	(38 + 15 -> 38 + 1)
	(15 -> 1 -> 1)
	(15 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 != _s2_cache_reg_2)
		[1] w2	((_s1_cache_reg_1 != _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding required pred. from inp_c to ab. cube) #19
	(adding pred. from inp_c to cc. cube) #19
	(abstract cube) 20	(19 + 1 + 0 + 0 + 0)
	(concrete cube) 20	(19 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs) && (_s4_channel1_reg_1$next == _s4_channel1_reg_1$next_rhs) && (_s7_channel2_4_reg_1$next == _s7_channel2_4_reg_1$next_rhs) && (_s13_home_current_command_reg$next == _s13_home_current_command_reg$next_rhs) && (_s19_home_sharer_list_reg_1$next == _s19_home_sharer_list_reg_1$next_rhs) && (_s20_home_sharer_list_reg_2$next == _s20_home_sharer_list_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 19)
		SAT_c ? [ A[3] & T[3] & A[2]+ ]: 		(bv input core size: 31)
		SAT_c ? [ A[4] & T[4] & A[3]+ ]: 		(bv input core size: 33)
		SAT_c ? [ A[5] & T[5] & A[4]+ ]: 		(bv input core size: 42)

	[Simulation check]: 
[Sim_1]    =========== Simulation Begins ===============
	1: A[5]

	2: A[4]

	3: A[3]

	4: A[2]

	5: A[1]
[1] Cube to CubeNext+ is UNSAT

		(cc core: 111 -> 3)
resMusBv: 1
		ACEXT is infeasible
			(unsat: A[1] to A[0] )
[Sim_1]    Adding lemma to ensure following never happens: 
	(_s2_cache_reg_2 == 2'd0)
	ReductionOr_1_2(_s2_cache_reg_2$next)
	(_i1_io_en_a == 5'd15)
	(_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)

[Sim_1]    Processing failure condition: 
	(_s2_cache_reg_2 == 2'd0)
	ReductionOr_1_2(_s2_cache_reg_2$next)
	(_i1_io_en_a == 5'd15)
	(_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)

			(adding predicate (absent)   (_i1_io_en_a == 5'd15) )
			(finding parent expressions)	(_i1_io_en_a == 5'd15)
				(parent expression)
					(_i1_io_en_a == 5'd15) := (_i1_io_en_a == 5'd15)
						(learning constant  5'd15 )
			(adding predicate (absent)   (_s2_cache_reg_2 == 2'd0) )
			(finding parent expressions)	(_s2_cache_reg_2 == 2'd0)
				(number value parent)	2'd0	:=	_s2_cache_reg_2
				(parent expression)
					(_s2_cache_reg_2 == 2'd0) := (_s2_cache_reg_2 == _s2_cache_reg_2)
						(learning signal    _s2_cache_reg_2 )
						(learning constant  2'd0 )
[Sim_1]    =========== Simulation Ends ===============

	[Lemmas]: 
		[1] !((((_s2_cache_reg_2 == 2'd0) || (_s2_cache_reg_2 != 2'd0)) && (_s2_cache_reg_2 == 2'd0) && ((_i1_io_en_a == 5'd15) || (_i1_io_en_a != 5'd15)) && b$1586 && ReductionOr_1_2(_s2_cache_reg_2$next) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))
#2013
#Lemmas = 21
[RES_1]       19	: 5	: 0 7 2 2 2 1 s: 14
[RES_0]    L  5 : 0 14 5 4 4 3 s: 30, mem: 20, time: 0.101799
---------------------------------------------------------------------------------------------
Loop_5_0_19
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 8	(5 + 3 + 0 + 0 + 0)
	(concrete cube) 8	(5 + 3 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 14 -> 1)
	(39 + 14 -> 39 + 1)
	(14 -> 1 -> 1)
	(14 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s2_cache_reg_2 != 2'd0)
		[1] w2	((_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(66 + 13 -> 66 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd0) && (_s4_channel1_reg_1 == 3'd2))
		[1] w3	((_s2_cache_reg_2 != 2'd0) && (_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(53 + 12 -> 53 + 3)
	(12 -> 3 -> 3)
	(12 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(39 + 5 -> 39 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd0) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s2_cache_reg_2 != 2'd0) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 8 -> 2)
	(33 + 8 -> 33 + 2)
	(8 -> 2 -> 2)
	(8 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd0) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	((_s2_cache_reg_2 != 2'd0) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       19	: 5	: 0 8 3 3 3 2 s: 19
[RES_0]    L  5 : 0 16 8 8 7 6 s: 45, mem: 20, time: 0.109137
---------------------------------------------------------------------------------------------
Loop_5_1_19
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(4 + 3 + 0 + 0 + 0)
	(concrete cube) 7	(4 + 3 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(34 + 7 -> 34 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (ReductionOr_1_2(_s2_cache_reg_2) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	(ReductionOr_1_2(_s2_cache_reg_2) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       19	: 5	: 0 8 3 3 3 3 s: 20
[RES_0]    L  5 : 0 16 8 8 7 9 s: 48, mem: 20, time: 0.110067
---------------------------------------------------------------------------------------------
Loop_5_2_19
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 8	(5 + 3 + 0 + 0 + 0)
	(concrete cube) 8	(5 + 3 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 13	(11 + 2 + 0 + 0 + 0)
	(concrete cube) 13	(11 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 16	(14 + 2 + 0 + 0 + 0)
	(concrete cube) 16	(14 + 2 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 16 -> 3)
	(72 + 16 -> 72 + 3)
	(16 -> 3 -> 2)
	(16 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == _s2_cache_reg_2) && (_s2_cache_reg_2 != 2'd0))
		[1] w2	((_s1_cache_reg_1 == _s2_cache_reg_2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(58 + 13 -> 58 + 3)
	(13 -> 3 -> 3)
	(13 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s13_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(44 + 6 -> 44 + 3)
	(6 -> 3 -> 3)
	(6 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd6) && (_s1_cache_reg_1 == _s2_cache_reg_2) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && (_s1_cache_reg_1 == _s2_cache_reg_2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 8	(7 + 1 + 0 + 0 + 0)
	(concrete cube) 8	(7 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 2)
	(75 + 17 -> 75 + 2)
	(17 -> 2 -> 2)
	(17 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 == 3'd2) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s5_channel1_reg_2 == 3'd2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(61 + 14 -> 61 + 3)
	(14 -> 3 -> 2)
	(14 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg == 3'd2) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s13_home_current_command_reg == 3'd2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(46 + 8 -> 46 + 3)
	(8 -> 3 -> 2)
	(8 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd6) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 15 -> 3)
	(78 + 15 -> 78 + 3)
	(15 -> 3 -> 2)
	(15 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 != _s13_home_current_command_reg) && (_s5_channel1_reg_2 == 3'd2))
		[1] w3	((_s8_channel2_4_reg_2 != _s13_home_current_command_reg) && (_s5_channel1_reg_2 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(79 + 13 -> 79 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s5_channel1_reg_2 == 3'd2))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s5_channel1_reg_2 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(65 + 12 -> 65 + 4)
	(12 -> 4 -> 3)
	(12 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && (_s1_cache_reg_1 != 2'd0) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd2) && (_s1_cache_reg_1 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(48 + 6 -> 48 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 8 -> 2)
	(38 + 8 -> 38 + 2)
	(8 -> 2 -> 2)
	(8 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s2_cache_reg_2 == 2'd2))
		[1] w2	((_s1_cache_reg_1 != 2'd0) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       19	: 5	: 0 8 7 4 5 4 s: 28
[RES_0]    L  5 : 0 16 20 11 13 12 s: 72, mem: 20, time: 0.131093
---------------------------------------------------------------------------------------------
Loop_5_3_19
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(4 + 3 + 0 + 0 + 0)
	(concrete cube) 7	(4 + 3 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 14 -> 1)
	(39 + 14 -> 39 + 1)
	(14 -> 1 -> 1)
	(14 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel1_reg_2 != _s8_channel2_4_reg_2)
		[1] w3	((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #19
	(adding from pre_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #19
	(abstract cube) 21	(20 + 1 + 0 + 0 + 0)
	(concrete cube) 21	(20 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs) && (_s5_channel1_reg_2$next == _s5_channel1_reg_2$next_rhs) && (_s8_channel2_4_reg_2$next == _s8_channel2_4_reg_2$next_rhs) && (_s13_home_current_command_reg$next == _s13_home_current_command_reg$next_rhs) && (_s19_home_sharer_list_reg_1$next == _s19_home_sharer_list_reg_1$next_rhs) && (_s20_home_sharer_list_reg_2$next == _s20_home_sharer_list_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 2)
UNSAT

		[MUS(s)]:
		[1] ((_s1_cache_reg_1 == 2'd0) && ReductionOr_1_2(_s1_cache_reg_1))

	[Lemmas]: 
		[1] !(((_s1_cache_reg_1 == 2'd0) && ReductionOr_1_2(_s1_cache_reg_1)))
#2215
		[2] !(((_s1_cache_reg_1$next == 2'd0) && ReductionOr_1_2(_s1_cache_reg_1$next)))
#2217
#Lemmas = 23
[RES_1]       21	: 5	: 0 9 7 4 5 4 s: 29
[RES_0]    L  5 : 0 18 20 11 13 12 s: 74, mem: 20, time: 0.136439
---------------------------------------------------------------------------------------------
Loop_5_0_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: UNSAT
[RES_1]       21	: 5	: 0 9 7 4 5 4 s: 29
[RES_0]    L  5 : 0 18 20 11 13 12 s: 74, mem: 20, time: 0.136496
	[Forward propagation]:
[RES_1]       21	: 6	: 0 9 7 4 5 4 0 s: 29
[RES_0]    L  6 : 0 18 20 11 13 12 0 s: 74, mem: 20, time: 0.144058
---------------------------------------------------------------------------------------------
Loop_6_0_20
---------------------------------------------------------------------------------------------
	F[6] = P
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(4 + 3 + 0 + 0 + 0)
	(concrete cube) 7	(4 + 3 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(45 + 5 -> 45 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next == _s7_channel2_4_reg_1$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd6) && (_s8_channel2_4_reg_2 == _s7_channel2_4_reg_1))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && (_s8_channel2_4_reg_2 == _s7_channel2_4_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(41 + 5 -> 41 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd6) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(43 + 4 -> 43 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 == 2'd2))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(36 + 7 -> 36 + 3)
	(7 -> 3 -> 2)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s2_cache_reg_2$next)
	(7 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 6	: 0 9 7 4 6 5 1 s: 32
[RES_0]    L  6 : 0 18 20 11 16 15 3 s: 83, mem: 20, time: 0.153125
---------------------------------------------------------------------------------------------
Loop_6_1_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 8	(5 + 3 + 0 + 0 + 0)
	(concrete cube) 8	(5 + 3 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 5)
	(72 + 13 -> 72 + 5)
	(13 -> 5 -> 3)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
	(13 -> 5 -> 6 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd2) && (_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2))
		[1] w3	((_s4_channel1_reg_1 == 3'd2) && (_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(62 + 12 -> 62 + 4)
	(12 -> 4 -> 4)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(12 -> 4 -> 7 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && (_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && (_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(41 + 12 -> 41 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_channel2_4_reg_2 == 3'd5)
		[1] w3	((_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(75 + 11 -> 75 + 3)
	(11 -> 3 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
	(11 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd5) && (_s4_channel1_reg_1 == 3'd2))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd5) && (_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 4)
	(64 + 10 -> 64 + 4)
	(10 -> 4 -> 3)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(10 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd5) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd5) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(51 + 5 -> 51 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
	(5 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd6) && (_s8_channel2_4_reg_2 == 3'd5))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && (_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #17
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #17
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 19	(18 + 1 + 0 + 0 + 0)
	(concrete cube) 19	(18 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 19 -> 5)
	(78 + 19 -> 78 + 5)
	(19 -> 5 -> 1)
	(19 -> 5 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s2_cache_reg_2 != 2'd0)
		[1] w2	((_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 15 -> 2)
	(68 + 15 -> 68 + 2)
	(15 -> 2 -> 2)
	(15 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd2) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s4_channel1_reg_1 == 3'd2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(58 + 12 -> 58 + 3)
	(12 -> 3 -> 3)
	(12 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(47 + 5 -> 47 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(48 + 5 -> 48 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd5) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd5) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(39 + 8 -> 39 + 3)
	(8 -> 3 -> 2)
	(8 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd0) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	((_s2_cache_reg_2 != 2'd0) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 6	: 0 9 7 7 7 6 2 s: 38
[RES_0]    L  6 : 0 18 19 22 20 18 6 s: 103, mem: 20, time: 0.185936
---------------------------------------------------------------------------------------------
Loop_6_2_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(4 + 3 + 0 + 0 + 0)
	(concrete cube) 7	(4 + 3 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(40 + 7 -> 40 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (ReductionOr_1_2(_s2_cache_reg_2) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	(ReductionOr_1_2(_s2_cache_reg_2) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 6	: 0 9 7 7 7 5 3 s: 38
[RES_0]    L  6 : 0 18 19 22 20 15 9 s: 103, mem: 20, time: 0.187044
---------------------------------------------------------------------------------------------
Loop_6_3_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 8	(5 + 3 + 0 + 0 + 0)
	(concrete cube) 8	(5 + 3 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 4)
	(85 + 13 -> 85 + 4)
	(13 -> 4 -> 2)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
	(13 -> 4 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd5) && (_s5_channel1_reg_2 == 3'd2))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd5) && (_s5_channel1_reg_2 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(75 + 12 -> 75 + 4)
	(12 -> 4 -> 2)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
	(12 -> 4 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd5) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd5) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(64 + 5 -> 64 + 3)
	(5 -> 3 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
	(5 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd5) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd5) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(52 + 4 -> 52 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd5) && (_s2_cache_reg_2 == 2'd2))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd5) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 8	(7 + 1 + 0 + 0 + 0)
	(concrete cube) 8	(7 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(79 + 17 -> 79 + 3)
	(17 -> 3 -> 3)
	(17 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s5_channel1_reg_2 == 3'd2) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s5_channel1_reg_2 == 3'd2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 14 -> 5)
	(67 + 14 -> 67 + 5)
	(14 -> 5 -> 4)
	(14 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && (_s1_cache_reg_1 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s12_home_current_client_reg == 2'd2) && (_s1_cache_reg_1 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 8 -> 5)
	(54 + 8 -> 54 + 5)
	(8 -> 5 -> 3)
	(8 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 18	(17 + 1 + 0 + 0 + 0)
	(concrete cube) 18	(17 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 18 -> 5)
	(92 + 18 -> 92 + 5)
	(18 -> 5 -> 1)
	(18 -> 5 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 != 2'd0)
		[1] w2	((_s1_cache_reg_1 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 15 -> 3)
	(83 + 15 -> 83 + 3)
	(15 -> 3 -> 2)
	(15 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	((_s5_channel1_reg_2 == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(70 + 12 -> 70 + 4)
	(12 -> 4 -> 3)
	(12 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && (_s1_cache_reg_1 != 2'd0) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd2) && (_s1_cache_reg_1 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(56 + 6 -> 56 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(44 + 8 -> 44 + 3)
	(8 -> 3 -> 2)
	(8 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s2_cache_reg_2 == 2'd2))
		[1] w2	((_s1_cache_reg_1 != 2'd0) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 6	: 0 9 8 8 8 6 4 s: 43
[RES_0]    L  6 : 0 18 21 24 24 18 12 s: 117, mem: 20, time: 0.221016
---------------------------------------------------------------------------------------------
Loop_6_4_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: UNSAT
[RES_1]       21	: 6	: 0 9 8 8 8 6 4 s: 43
[RES_0]    L  6 : 0 18 21 24 24 18 12 s: 117, mem: 20, time: 0.221052
	[Forward propagation]:
[RES_1]       21	: 7	: 0 7 10 8 8 6 4 0 s: 43
[RES_0]    L  7 : 0 14 25 24 24 18 12 0 s: 117, mem: 20, time: 0.233248
---------------------------------------------------------------------------------------------
Loop_7_0_20
---------------------------------------------------------------------------------------------
	F[7] = P
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(4 + 3 + 0 + 0 + 0)
	(concrete cube) 7	(4 + 3 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(73 + 11 -> 73 + 3)
	(11 -> 3 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(11 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd6) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(74 + 11 -> 74 + 3)
	(11 -> 3 -> 2)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
	(11 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd6) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(60 + 5 -> 60 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next == _s7_channel2_4_reg_1$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd6) && (_s8_channel2_4_reg_2 == _s7_channel2_4_reg_1))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && (_s8_channel2_4_reg_2 == _s7_channel2_4_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(66 + 11 -> 66 + 4)
	(11 -> 4 -> 2)
	(11 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s1_cache_reg_1 == 2'd2) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(48 + 5 -> 48 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd6) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(68 + 10 -> 68 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd2) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s2_cache_reg_2 == 2'd2) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(51 + 4 -> 51 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 == 2'd2))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(36 + 7 -> 36 + 3)
	(7 -> 3 -> 2)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s2_cache_reg_2$next)
	(7 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 7	: 0 7 10 8 9 7 5 1 s: 47
[RES_0]    L  7 : 0 14 25 24 27 21 15 3 s: 129, mem: 21, time: 0.254915
---------------------------------------------------------------------------------------------
Loop_7_1_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 8	(5 + 3 + 0 + 0 + 0)
	(concrete cube) 8	(5 + 3 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #17
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #17
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 19	(18 + 1 + 0 + 0 + 0)
	(concrete cube) 19	(18 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 19 -> 3)
	(97 + 19 -> 97 + 3)
	(19 -> 3 -> 2)
	(19 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd1) && (_s2_cache_reg_2 != 2'd0))
		[1] w2	((_s2_cache_reg_2 != 2'd1) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 15 -> 3)
	(83 + 15 -> 83 + 3)
	(15 -> 3 -> 2)
	(15 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd1) && (_s2_cache_reg_2 != 2'd0))
		[1] w2	((_s2_cache_reg_2 != 2'd1) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(72 + 12 -> 72 + 4)
	(12 -> 4 -> 3)
	(12 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd1) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s2_cache_reg_2 != 2'd1) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 16 -> 2)
	(100 + 16 -> 100 + 2)
	(16 -> 2 -> 2)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s2_cache_reg_2$next)
	(16 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd1) && (_s1_cache_reg_1 == _s2_cache_reg_2))
		[1] w2	((_s1_cache_reg_1 == 2'd1) && (_s1_cache_reg_1 == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 18	(17 + 1 + 0 + 0 + 0)
	(concrete cube) 18	(17 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 18 -> 2)
	(101 + 18 -> 101 + 2)
	(18 -> 2 -> 2)
	(18 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd1) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	((_s2_cache_reg_2 == 2'd1) && (_s1_cache_reg_1 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 15 -> 5)
	(112 + 15 -> 112 + 5)
	(15 -> 5 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next == _s7_channel2_4_reg_1$next)
	(15 -> 5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd5) && (_s8_channel2_4_reg_2 == _s7_channel2_4_reg_1))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd5) && (_s8_channel2_4_reg_2 == _s7_channel2_4_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #17
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #17
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 19	(18 + 1 + 0 + 0 + 0)
	(concrete cube) 19	(18 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 19 -> 5)
	(113 + 19 -> 113 + 5)
	(19 -> 5 -> 2)
	(19 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 != _s7_channel2_4_reg_1) && (_s8_channel2_4_reg_2 == 3'd5))
		[1] w3	((_s4_channel1_reg_1 != _s7_channel2_4_reg_1) && (_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 17 -> 2)
	(104 + 17 -> 104 + 2)
	(17 -> 2 -> 2)
	(17 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd1) && (_s4_channel1_reg_1 != _s7_channel2_4_reg_1))
		[1] w3	((_s2_cache_reg_2 == 2'd1) && (_s4_channel1_reg_1 != _s7_channel2_4_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 15 -> 5)
	(115 + 15 -> 115 + 5)
	(15 -> 5 -> 2)
	(15 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd5))
		[1] w3	(!(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 14 -> 2)
	(106 + 14 -> 106 + 2)
	(14 -> 2 -> 2)
	(14 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 == 2'd1))
		[1] w2	(!(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 == 2'd1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 14 -> 4)
	(107 + 14 -> 107 + 4)
	(14 -> 4 -> 3)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
	(14 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s4_channel1_reg_1 == 3'd2) && (_s8_channel2_4_reg_2 == 3'd5))
		[1] w3	(!(_s20_home_sharer_list_reg_2) && (_s4_channel1_reg_1 == 3'd2) && (_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 13 -> 4)
	(90 + 13 -> 90 + 4)
	(13 -> 4 -> 3)
	(13 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 == 2'd1) && (_s4_channel1_reg_1 == 3'd2))
		[1] w3	(!(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 == 2'd1) && (_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 11 -> 6)
	(91 + 11 -> 91 + 6)
	(11 -> 6 -> 4)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(11 -> 6 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd5) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	(!(_s20_home_sharer_list_reg_2) && (_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd5) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 10 -> 4)
	(75 + 10 -> 75 + 4)
	(10 -> 4 -> 4)
		(added cond. from num.)	(_s12_home_current_client_reg$next == _s2_cache_reg_2$next)
	(10 -> 4 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && (_s12_home_current_client_reg == _s2_cache_reg_2))
		[1] w3	(!(_s20_home_sharer_list_reg_2) && (_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && (_s12_home_current_client_reg == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(94 + 11 -> 94 + 4)
	(11 -> 4 -> 2)
	(11 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s12_home_current_client_reg == 2'd2) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(77 + 5 -> 77 + 3)
	(5 -> 3 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
	(5 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd6) && (_s8_channel2_4_reg_2 == 3'd5))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && (_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(56 + 5 -> 56 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(80 + 10 -> 80 + 2)
	(10 -> 2 -> 2)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s12_home_current_client_reg$next)
	(10 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s12_home_current_client_reg))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s12_home_current_client_reg) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(58 + 5 -> 58 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd5) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd5) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(39 + 8 -> 39 + 3)
	(8 -> 3 -> 2)
	(8 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd0) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	((_s2_cache_reg_2 != 2'd0) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 7	: 0 7 13 13 12 9 6 2 s: 62
[RES_0]    L  7 : 0 14 34 40 39 30 18 6 s: 181, mem: 21, time: 0.320796
---------------------------------------------------------------------------------------------
Loop_7_2_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(4 + 3 + 0 + 0 + 0)
	(concrete cube) 7	(4 + 3 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(40 + 7 -> 40 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (ReductionOr_1_2(_s2_cache_reg_2) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	(ReductionOr_1_2(_s2_cache_reg_2) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 7	: 0 7 13 13 12 9 5 3 s: 62
[RES_0]    L  7 : 0 14 34 40 39 30 15 9 s: 181, mem: 21, time: 0.321911
---------------------------------------------------------------------------------------------
Loop_7_3_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 8	(5 + 3 + 0 + 0 + 0)
	(concrete cube) 8	(5 + 3 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 10 -> 4)
	(101 + 10 -> 101 + 4)
	(10 -> 4 -> 4)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
	(10 -> 4 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd1) && (_s7_channel2_4_reg_1 == 3'd5) && !(_s20_home_sharer_list_reg_2) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s2_cache_reg_2 == 2'd1) && (_s7_channel2_4_reg_1 == 3'd5) && !(_s20_home_sharer_list_reg_2) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(85 + 6 -> 85 + 3)
	(6 -> 3 -> 3)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
	(6 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd5) && (_s8_channel2_4_reg_2 == 3'd6) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd5) && (_s8_channel2_4_reg_2 == 3'd6) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(103 + 11 -> 103 + 5)
	(11 -> 5 -> 2)
	(11 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #18
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #18
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 20	(19 + 1 + 0 + 0 + 0)
	(concrete cube) 20	(19 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 20 -> 4)
	(131 + 20 -> 131 + 4)
	(20 -> 4 -> 2)
	(20 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && (_s7_channel2_4_reg_1 == 3'd5))
		[1] w3	((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && (_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 16 -> 5)
	(132 + 16 -> 132 + 5)
	(16 -> 5 -> 2)
	(16 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd5))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 16 -> 5)
	(123 + 16 -> 123 + 5)
	(16 -> 5 -> 3)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
	(16 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s5_channel1_reg_2 == 3'd2) && (_s7_channel2_4_reg_1 == 3'd5))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s5_channel1_reg_2 == 3'd2) && (_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(105 + 12 -> 105 + 5)
	(12 -> 5 -> 4)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
	(12 -> 5 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s12_home_current_client_reg == 2'd2) && (_s7_channel2_4_reg_1 == 3'd5) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s12_home_current_client_reg == 2'd2) && (_s7_channel2_4_reg_1 == 3'd5) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(88 + 5 -> 88 + 3)
	(5 -> 3 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
	(5 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd5) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd5) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 9 -> 2)
	(89 + 9 -> 89 + 2)
	(9 -> 2 -> 2)
		(added cond. from num.)	(_s2_cache_reg_2$next != _s12_home_current_client_reg$next)
		(added cond. from num.)	(_s2_cache_reg_2$next != _s12_home_current_client_reg$next)
	(9 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s2_cache_reg_2 == 2'd2))
		[1] w2	((_s12_home_current_client_reg == 2'd1) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(64 + 4 -> 64 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd2) && (_s7_channel2_4_reg_1 == 3'd5))
		[1] w3	((_s2_cache_reg_2 == 2'd2) && (_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 8	(7 + 1 + 0 + 0 + 0)
	(concrete cube) 8	(7 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 17 -> 4)
	(110 + 17 -> 110 + 4)
	(17 -> 4 -> 4)
	(17 -> 4 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 == 3'd2) && !(_s20_home_sharer_list_reg_2) && (_s1_cache_reg_1 != 2'd0) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s5_channel1_reg_2 == 3'd2) && !(_s20_home_sharer_list_reg_2) && (_s1_cache_reg_1 != 2'd0) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 14 -> 5)
	(92 + 14 -> 92 + 5)
	(14 -> 5 -> 5)
	(14 -> 5 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && !(_s20_home_sharer_list_reg_2) && (_s1_cache_reg_1 != 2'd0) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd2) && !(_s20_home_sharer_list_reg_2) && (_s1_cache_reg_1 != 2'd0) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(66 + 8 -> 66 + 3)
	(8 -> 3 -> 3)
	(8 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 18	(17 + 1 + 0 + 0 + 0)
	(concrete cube) 18	(17 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 18 -> 3)
	(131 + 18 -> 131 + 3)
	(18 -> 3 -> 2)
	(18 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	(!(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 15 -> 4)
	(114 + 15 -> 114 + 4)
	(15 -> 4 -> 3)
	(15 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s5_channel1_reg_2 == 3'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s5_channel1_reg_2 == 3'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 6)
	(95 + 12 -> 95 + 6)
	(12 -> 6 -> 4)
	(12 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s12_home_current_client_reg == 2'd2) && (_s1_cache_reg_1 != 2'd0) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s12_home_current_client_reg == 2'd2) && (_s1_cache_reg_1 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(68 + 6 -> 68 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(44 + 8 -> 44 + 3)
	(8 -> 3 -> 2)
	(8 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	((_s2_cache_reg_2 == 2'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 7	: 0 7 15 15 16 11 6 4 s: 74
[RES_0]    L  7 : 0 14 40 47 58 41 18 12 s: 230, mem: 21, time: 0.388245
---------------------------------------------------------------------------------------------
Loop_7_4_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: UNSAT
[RES_1]       21	: 7	: 0 7 15 15 16 11 6 4 s: 74
[RES_0]    L  7 : 0 14 40 47 58 41 18 12 s: 230, mem: 21, time: 0.388299
	[Forward propagation]:
[RES_1]       21	: 8	: 0 7 15 15 16 11 6 4 0 s: 74
[RES_0]    L  8 : 0 14 40 47 58 41 18 12 0 s: 230, mem: 21, time: 0.410994
---------------------------------------------------------------------------------------------
Loop_8_0_20
---------------------------------------------------------------------------------------------
	F[8] = P
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(4 + 3 + 0 + 0 + 0)
	(concrete cube) 7	(4 + 3 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 14 -> 2)
	(118 + 14 -> 118 + 2)
	(14 -> 2 -> 2)
	(14 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	(!(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(99 + 11 -> 99 + 4)
	(11 -> 4 -> 3)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(11 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd6) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	(!(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd6) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(120 + 14 -> 120 + 3)
	(14 -> 3 -> 2)
	(14 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(101 + 11 -> 101 + 4)
	(11 -> 4 -> 3)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
	(11 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd6) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd6) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(72 + 5 -> 72 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next == _s7_channel2_4_reg_1$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd6) && (_s8_channel2_4_reg_2 == _s7_channel2_4_reg_1))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && (_s8_channel2_4_reg_2 == _s7_channel2_4_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 14 -> 4)
	(104 + 14 -> 104 + 4)
	(14 -> 4 -> 2)
	(14 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	(!(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(79 + 11 -> 79 + 5)
	(11 -> 5 -> 3)
	(11 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(48 + 5 -> 48 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd6) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(108 + 13 -> 108 + 3)
	(13 -> 3 -> 2)
	(13 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 == 2'd2))
		[1] w2	(!(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 10 -> 4)
	(82 + 10 -> 82 + 4)
	(10 -> 4 -> 3)
	(10 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 == 2'd2) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	(!(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 == 2'd2) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(51 + 4 -> 51 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 == 2'd2))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(36 + 7 -> 36 + 3)
	(7 -> 3 -> 2)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s2_cache_reg_2$next)
	(7 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 8	: 0 7 15 15 18 14 7 5 1 s: 82
[RES_0]    L  8 : 0 14 40 47 64 52 23 15 3 s: 258, mem: 22, time: 0.44768
---------------------------------------------------------------------------------------------
Loop_8_1_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 8	(5 + 3 + 0 + 0 + 0)
	(concrete cube) 8	(5 + 3 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #19
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #19
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 21	(20 + 1 + 0 + 0 + 0)
	(concrete cube) 21	(20 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 21 -> 3)
	(148 + 21 -> 148 + 3)
	(21 -> 3 -> 3)
	(21 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 != _s7_channel2_4_reg_1) && !(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd5))
		[1] w3	((_s4_channel1_reg_1 != _s7_channel2_4_reg_1) && !(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 18	(17 + 1 + 0 + 0 + 0)
	(concrete cube) 18	(17 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(43 + 13 -> 43 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s13_home_current_command_reg == 3'd1)
		[1] w3	((_s13_home_current_command_reg == 3'd1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 18 -> 3)
	(161 + 18 -> 161 + 3)
	(18 -> 3 -> 1)
	(18 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_channel2_4_reg_2 == 3'd5)
		[1] w3	((_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 17 -> 2)
	(150 + 17 -> 150 + 2)
	(17 -> 2 -> 2)
	(17 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd5))
		[1] w3	(!(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 16 -> 3)
	(132 + 16 -> 132 + 3)
	(16 -> 3 -> 3)
	(16 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s13_home_current_command_reg)) && !(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd5))
		[1] w3	(!(ReductionOr_1_3(_s13_home_current_command_reg)) && !(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 18	(17 + 1 + 0 + 0 + 0)
	(concrete cube) 18	(17 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(165 + 12 -> 165 + 4)
	(12 -> 4 -> 1)
	(12 -> 4 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s13_home_current_command_reg == 3'd1)
		[1] w3	((_s13_home_current_command_reg == 3'd1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 18 -> 3)
	(154 + 18 -> 154 + 3)
	(18 -> 3 -> 1)
	(18 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_channel2_4_reg_2 == 3'd5)
		[1] w3	((_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 13 -> 4)
	(135 + 13 -> 135 + 4)
	(13 -> 4 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(13 -> 4 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd5) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd5) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 6)
	(114 + 12 -> 114 + 6)
	(12 -> 6 -> 3)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(12 -> 6 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd5) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	(!(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd5) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 6)
	(169 + 17 -> 169 + 6)
	(17 -> 6 -> 2)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s5_channel1_reg_2$next)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s5_channel1_reg_2$next)
	(17 -> 6 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 == 3'd1) && (_s4_channel1_reg_1 == 3'd2))
		[1] w3	((_s5_channel1_reg_2 == 3'd1) && (_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 16 -> 5)
	(159 + 16 -> 159 + 5)
	(16 -> 5 -> 2)
		(added cond. from num.)	(_s5_channel1_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel1_reg_2$next != _s13_home_current_command_reg$next)
	(16 -> 5 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 == 3'd1) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s5_channel1_reg_2 == 3'd1) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 15 -> 3)
	(138 + 15 -> 138 + 3)
	(15 -> 3 -> 2)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
	(15 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 == 3'd1) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s5_channel1_reg_2 == 3'd1) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(116 + 11 -> 116 + 4)
	(11 -> 4 -> 3)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
	(11 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg == 3'd1) && (_s12_home_current_client_reg == 2'd2) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s13_home_current_command_reg == 3'd1) && (_s12_home_current_client_reg == 2'd2) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(87 + 5 -> 87 + 3)
	(5 -> 3 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
	(5 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd6) && (_s8_channel2_4_reg_2 == 3'd5))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && (_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 15 -> 4)
	(118 + 15 -> 118 + 4)
	(15 -> 4 -> 3)
	(15 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 != 2'd0))
		[1] w2	((_s2_cache_reg_2 != 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 12 -> 6)
	(89 + 12 -> 89 + 6)
	(12 -> 6 -> 4)
	(12 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s2_cache_reg_2 != 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(143 + 17 -> 143 + 3)
	(17 -> 3 -> 3)
	(17 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 != _s7_channel2_4_reg_1) && (_s2_cache_reg_2 == 2'd1) && !(_s20_home_sharer_list_reg_2))
		[1] w3	((_s4_channel1_reg_1 != _s7_channel2_4_reg_1) && (_s2_cache_reg_2 == 2'd1) && !(_s20_home_sharer_list_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 15 -> 1)
	(166 + 15 -> 166 + 1)
	(15 -> 1 -> 1)
	(15 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s2_cache_reg_2 == 2'd1)
		[1] w2	((_s2_cache_reg_2 == 2'd1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 14 -> 1)
	(145 + 14 -> 145 + 1)
	(14 -> 1 -> 1)
	(14 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s2_cache_reg_2 == 2'd1)
		[1] w2	((_s2_cache_reg_2 == 2'd1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(122 + 13 -> 122 + 3)
	(13 -> 3 -> 3)
	(13 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s13_home_current_command_reg)) && (_s2_cache_reg_2 == 2'd1) && !(_s20_home_sharer_list_reg_2))
		[1] w3	(!(ReductionOr_1_3(_s13_home_current_command_reg)) && (_s2_cache_reg_2 == 2'd1) && !(_s20_home_sharer_list_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(124 + 11 -> 124 + 3)
	(11 -> 3 -> 2)
	(11 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd1) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s2_cache_reg_2 == 2'd1) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 10 -> 4)
	(92 + 10 -> 92 + 4)
	(10 -> 4 -> 3)
	(10 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s2_cache_reg_2 == 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(56 + 5 -> 56 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd6) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(127 + 13 -> 127 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 == 3'd1) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s5_channel1_reg_2 == 3'd1) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(96 + 10 -> 96 + 3)
	(10 -> 3 -> 3)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s12_home_current_client_reg$next)
	(10 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg == 3'd1) && (_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s12_home_current_client_reg))
		[1] w3	((_s13_home_current_command_reg == 3'd1) && (_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s12_home_current_client_reg) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(58 + 5 -> 58 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd5) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd5) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(39 + 8 -> 39 + 3)
	(8 -> 3 -> 2)
	(8 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd0) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	((_s2_cache_reg_2 != 2'd0) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 8	: 0 6 13 12 19 19 9 6 2 s: 86
[RES_0]    L  8 : 0 12 33 35 62 71 33 18 6 s: 270, mem: 22, time: 0.542206
---------------------------------------------------------------------------------------------
Loop_8_2_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(4 + 3 + 0 + 0 + 0)
	(concrete cube) 7	(4 + 3 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(40 + 7 -> 40 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (ReductionOr_1_2(_s2_cache_reg_2) && (_s1_cache_reg_1 == 2'd2))
		[1] w2	(ReductionOr_1_2(_s2_cache_reg_2) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 8	: 0 6 13 12 19 19 9 5 3 s: 86
[RES_0]    L  8 : 0 12 33 35 62 71 33 15 9 s: 270, mem: 22, time: 0.54333
---------------------------------------------------------------------------------------------
Loop_8_3_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 8	(5 + 3 + 0 + 0 + 0)
	(concrete cube) 8	(5 + 3 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #20
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #20
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 21	(20 + 1 + 0 + 0 + 0)
	(concrete cube) 21	(20 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #20
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #20
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 22	(21 + 1 + 0 + 0 + 0)
	(concrete cube) 22	(21 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 22 -> 4)
	(188 + 22 -> 188 + 4)
	(22 -> 4 -> 2)
	(22 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd1) && (_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2))
		[1] w3	((_s4_channel1_reg_1 == 3'd1) && (_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 21 -> 5)
	(178 + 21 -> 178 + 5)
	(21 -> 5 -> 3)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s13_home_current_command_reg$next)
	(21 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd1) && (_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s4_channel1_reg_1 == 3'd1) && (_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 6)
	(190 + 17 -> 190 + 6)
	(17 -> 6 -> 2)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s5_channel1_reg_2$next)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s5_channel1_reg_2$next)
	(17 -> 6 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd1) && (_s5_channel1_reg_2 == 3'd2))
		[1] w3	((_s4_channel1_reg_1 == 3'd1) && (_s5_channel1_reg_2 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 16 -> 5)
	(180 + 16 -> 180 + 5)
	(16 -> 5 -> 2)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s13_home_current_command_reg$next)
	(16 -> 5 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd1) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s4_channel1_reg_1 == 3'd1) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(157 + 13 -> 157 + 2)
	(13 -> 2 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
	(13 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd1) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s4_channel1_reg_1 == 3'd1) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(133 + 12 -> 133 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd1) && (_s2_cache_reg_2 == 2'd2))
		[1] w3	((_s4_channel1_reg_1 == 3'd1) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(134 + 12 -> 134 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s2_cache_reg_2 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 10 -> 5)
	(135 + 10 -> 135 + 5)
	(10 -> 5 -> 3)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(10 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg == 3'd1) && (_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s13_home_current_command_reg == 3'd1) && (_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 9 -> 3)
	(103 + 9 -> 103 + 3)
	(9 -> 3 -> 3)
		(added cond. from num.)	(_s2_cache_reg_2$next != _s12_home_current_client_reg$next)
		(added cond. from num.)	(_s2_cache_reg_2$next != _s12_home_current_client_reg$next)
	(9 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg == 3'd1) && (_s12_home_current_client_reg == 2'd1) && (_s2_cache_reg_2 == 2'd2))
		[1] w3	((_s13_home_current_command_reg == 3'd1) && (_s12_home_current_client_reg == 2'd1) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(104 + 6 -> 104 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s2_cache_reg_2 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #18
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #18
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 20	(19 + 1 + 0 + 0 + 0)
	(concrete cube) 20	(19 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 20 -> 3)
	(187 + 20 -> 187 + 3)
	(20 -> 3 -> 3)
	(20 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && !(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd5))
		[1] w3	((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && !(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(200 + 17 -> 200 + 3)
	(17 -> 3 -> 1)
	(17 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s7_channel2_4_reg_1 == 3'd5)
		[1] w3	((_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 16 -> 2)
	(189 + 16 -> 189 + 2)
	(16 -> 2 -> 1)
	(16 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s7_channel2_4_reg_1 == 3'd5)
		[1] w3	((_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 16 -> 2)
	(165 + 16 -> 165 + 2)
	(16 -> 2 -> 2)
	(16 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd5))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(167 + 13 -> 167 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && (_s7_channel2_4_reg_1 == 3'd5))
		[1] w3	((_s12_home_current_client_reg == 2'd2) && (_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(140 + 12 -> 140 + 3)
	(12 -> 3 -> 3)
	(12 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && !(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd5))
		[1] w3	((_s12_home_current_client_reg == 2'd2) && !(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(106 + 5 -> 106 + 3)
	(5 -> 3 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s7_channel2_4_reg_1$next)
	(5 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 == 3'd5) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s7_channel2_4_reg_1 == 3'd5) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(64 + 4 -> 64 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd2) && (_s7_channel2_4_reg_1 == 3'd5))
		[1] w3	((_s2_cache_reg_2 == 2'd2) && (_s7_channel2_4_reg_1 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 8	(7 + 1 + 0 + 0 + 0)
	(concrete cube) 8	(7 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 8 -> 4)
	(65 + 8 -> 65 + 4)
	(8 -> 4 -> 2)
	(8 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s2_cache_reg_2 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 18	(17 + 1 + 0 + 0 + 0)
	(concrete cube) 18	(17 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #18
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #18
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 20	(19 + 1 + 0 + 0 + 0)
	(concrete cube) 20	(19 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 20 -> 1)
	(197 + 20 -> 197 + 1)
	(20 -> 1 -> 1)
	(20 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 != 2'd0)
		[1] w2	((_s1_cache_reg_1 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 18 -> 1)
	(173 + 18 -> 173 + 1)
	(18 -> 1 -> 1)
	(18 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s1_cache_reg_1 != 2'd0)
		[1] w2	((_s1_cache_reg_1 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 15 -> 2)
	(145 + 15 -> 145 + 2)
	(15 -> 2 -> 2)
	(15 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	(!(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(147 + 13 -> 147 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && (_s1_cache_reg_1 != 2'd0))
		[1] w2	((_s12_home_current_client_reg == 2'd2) && (_s1_cache_reg_1 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(111 + 12 -> 111 + 5)
	(12 -> 5 -> 4)
	(12 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && !(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd2) && !(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(67 + 6 -> 67 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s1_cache_reg_1 != 2'd0) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(44 + 8 -> 44 + 3)
	(8 -> 3 -> 2)
	(8 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 != 2'd0) && (_s2_cache_reg_2 == 2'd2))
		[1] w2	((_s1_cache_reg_1 != 2'd0) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 8	: 0 6 11 10 18 21 10 7 4 s: 87
[RES_0]    L  8 : 0 12 28 27 52 74 39 21 12 s: 265, mem: 23, time: 0.630054
---------------------------------------------------------------------------------------------
Loop_8_4_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: UNSAT
[RES_1]       21	: 8	: 0 6 11 10 18 21 10 7 4 s: 87
[RES_0]    L  8 : 0 12 28 27 52 74 39 21 12 s: 265, mem: 23, time: 0.630091
	[Forward propagation]:
[RES_1]       21	: 9	: 0 6 8 7 19 20 11 7 4 0 s: 82
[RES_0]    L  9 : 0 12 22 18 51 69 44 21 12 0 s: 249, mem: 23, time: 0.658235
---------------------------------------------------------------------------------------------
Loop_9_0_20
---------------------------------------------------------------------------------------------
	F[9] = P
	SAT_a ? [ F[9] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(4 + 3 + 0 + 0 + 0)
	(concrete cube) 7	(4 + 3 + 0 + 0)
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 16 -> 3)
	(222 + 16 -> 222 + 3)
	(16 -> 3 -> 2)
		(added cond. from num.)	(_s5_channel1_reg_2$next == _s4_channel1_reg_1$next)
	(16 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 == 3'd2) && (_s5_channel1_reg_2 == _s4_channel1_reg_1))
		[1] w3	((_s5_channel1_reg_2 == 3'd2) && (_s5_channel1_reg_2 == _s4_channel1_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 15 -> 6)
	(212 + 15 -> 212 + 6)
	(15 -> 6 -> 2)
		(added cond. from num.)	(_s13_home_current_command_reg$next == _s5_channel1_reg_2$next)
	(15 -> 6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg == 3'd2) && (_s13_home_current_command_reg == _s5_channel1_reg_2))
		[1] w3	((_s13_home_current_command_reg == 3'd2) && (_s13_home_current_command_reg == _s5_channel1_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 15 -> 2)
	(187 + 15 -> 187 + 2)
	(15 -> 2 -> 2)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
	(15 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 == 3'd2) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s5_channel1_reg_2 == 3'd2) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(156 + 12 -> 156 + 3)
	(12 -> 3 -> 3)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
	(12 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s5_channel1_reg_2 == 3'd2) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s5_channel1_reg_2 == 3'd2) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 14 -> 4)
	(117 + 14 -> 117 + 4)
	(14 -> 4 -> 4)
	(14 -> 4 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s13_home_current_command_reg)) && !(_s19_home_sharer_list_reg_1) && (_s5_channel1_reg_2 == 3'd2) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	(!(ReductionOr_1_3(_s13_home_current_command_reg)) && !(_s19_home_sharer_list_reg_1) && (_s5_channel1_reg_2 == 3'd2) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(158 + 11 -> 158 + 3)
	(11 -> 3 -> 3)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
	(11 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && (_s7_channel2_4_reg_1 == 3'd6) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd2) && (_s7_channel2_4_reg_1 == 3'd6) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 16 -> 2)
	(159 + 16 -> 159 + 2)
	(16 -> 2 -> 2)
	(16 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 == 3'd2) && (_s1_cache_reg_1 == 2'd2))
		[1] w3	((_s5_channel1_reg_2 == 3'd2) && (_s1_cache_reg_1 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(121 + 12 -> 121 + 4)
	(12 -> 4 -> 3)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s12_home_current_client_reg$next)
	(12 -> 4 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s13_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 == _s12_home_current_client_reg))
		[1] w3	((_s1_cache_reg_1 == 2'd2) && (_s13_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 == _s12_home_current_client_reg) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 10 -> 5)
	(122 + 10 -> 122 + 5)
	(10 -> 5 -> 4)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
		(added cond. from num.)	(_s13_home_current_command_reg$next != _s7_channel2_4_reg_1$next)
	(10 -> 5 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd2) && !(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd6) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd2) && !(_s19_home_sharer_list_reg_1) && (_s7_channel2_4_reg_1 == 3'd6) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 11 -> 6)
	(78 + 11 -> 78 + 6)
	(11 -> 6 -> 4)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s12_home_current_client_reg$next)
	(11 -> 6 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2) && (_s13_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 == _s12_home_current_client_reg))
		[1] w3	(!(_s19_home_sharer_list_reg_1) && (_s1_cache_reg_1 == 2'd2) && (_s13_home_current_command_reg == 3'd2) && (_s1_cache_reg_1 == _s12_home_current_client_reg) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(163 + 14 -> 163 + 3)
	(14 -> 3 -> 3)
	(14 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s13_home_current_command_reg)) && !(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	(!(ReductionOr_1_3(_s13_home_current_command_reg)) && !(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #18
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #18
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 19	(18 + 1 + 0 + 0 + 0)
	(concrete cube) 19	(18 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 19 -> 6)
	(222 + 19 -> 222 + 6)
	(19 -> 6 -> 2)
		(added cond. from num.)	(_s13_home_current_command_reg$next == _s4_channel1_reg_1$next)
	(19 -> 6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg == 3'd2) && (_s13_home_current_command_reg == _s4_channel1_reg_1))
		[1] w3	((_s13_home_current_command_reg == 3'd2) && (_s13_home_current_command_reg == _s4_channel1_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 16 -> 2)
	(197 + 16 -> 197 + 2)
	(16 -> 2 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
	(16 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd2) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s4_channel1_reg_1 == 3'd2) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(165 + 12 -> 165 + 4)
	(12 -> 4 -> 3)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(12 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd6) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd6) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 11 -> 5)
	(126 + 11 -> 126 + 5)
	(11 -> 5 -> 4)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(11 -> 5 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd6) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s8_channel2_4_reg_2 == 3'd6) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(80 + 5 -> 80 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next == _s7_channel2_4_reg_1$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd6) && (_s8_channel2_4_reg_2 == _s7_channel2_4_reg_1))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd6) && (_s8_channel2_4_reg_2 == _s7_channel2_4_reg_1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(48 + 5 -> 48 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s8_channel2_4_reg_2 == 3'd6))
		[1] w3	((_s1_cache_reg_1 == 2'd2) && (_s8_channel2_4_reg_2 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 13 -> 4)
	(130 + 13 -> 130 + 4)
	(13 -> 4 -> 3)
	(13 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s13_home_current_command_reg)) && (_s2_cache_reg_2 == 2'd2) && !(_s20_home_sharer_list_reg_2))
		[1] w3	(!(ReductionOr_1_3(_s13_home_current_command_reg)) && (_s2_cache_reg_2 == 2'd2) && !(_s20_home_sharer_list_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 15 -> 2)
	(170 + 15 -> 170 + 2)
	(15 -> 2 -> 2)
	(15 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd2) && (_s2_cache_reg_2 == 2'd2))
		[1] w3	((_s4_channel1_reg_1 == 3'd2) && (_s2_cache_reg_2 == 2'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(133 + 11 -> 133 + 4)
	(11 -> 4 -> 3)
		(added cond. from num.)	(_s2_cache_reg_2$next != _s12_home_current_client_reg$next)
		(added cond. from num.)	(_s2_cache_reg_2$next != _s12_home_current_client_reg$next)
	(11 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s2_cache_reg_2 == 2'd2) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s2_cache_reg_2 == 2'd2) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 10 -> 5)
	(84 + 10 -> 84 + 5)
	(10 -> 5 -> 4)
		(added cond. from num.)	(_s2_cache_reg_2$next != _s12_home_current_client_reg$next)
		(added cond. from num.)	(_s2_cache_reg_2$next != _s12_home_current_client_reg$next)
	(10 -> 5 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 == 2'd2) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 == 2'd2) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(51 + 4 -> 51 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd2) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s2_cache_reg_2 == 2'd2) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[8] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(36 + 7 -> 36 + 3)
	(7 -> 3 -> 2)
		(added cond. from num.)	(_s1_cache_reg_1$next == _s2_cache_reg_2$next)
	(7 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2))
		[1] w2	((_s1_cache_reg_1 == 2'd2) && (_s1_cache_reg_1 == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
[RES_1]       21	: 9	: 0 6 9 9 21 26 16 8 5 1 s: 101
[RES_0]    L  9 : 0 12 25 24 57 91 68 28 15 3 s: 323, mem: 24, time: 0.76918
---------------------------------------------------------------------------------------------
Loop_9_1_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[9] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 8	(5 + 3 + 0 + 0 + 0)
	(concrete cube) 8	(5 + 3 + 0 + 0)
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 15 -> 5)
	(137 + 15 -> 137 + 5)
	(15 -> 5 -> 4)
	(15 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s13_home_current_command_reg)) && (_s2_cache_reg_2 != 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	(!(ReductionOr_1_3(_s13_home_current_command_reg)) && (_s2_cache_reg_2 != 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(176 + 17 -> 176 + 3)
	(17 -> 3 -> 3)
	(17 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 != 2'd1) && (_s4_channel1_reg_1 == 3'd2) && (_s2_cache_reg_2 != 2'd0))
		[1] w3	((_s2_cache_reg_2 != 2'd1) && (_s4_channel1_reg_1 == 3'd2) && (_s2_cache_reg_2 != 2'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 13 -> 5)
	(139 + 13 -> 139 + 5)
	(13 -> 5 -> 4)
		(added cond. from num.)	(_s2_cache_reg_2$next != _s12_home_current_client_reg$next)
	(13 -> 5 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && (_s2_cache_reg_2 != _s12_home_current_client_reg))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && (_s2_cache_reg_2 != _s12_home_current_client_reg) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 12 -> 6)
	(89 + 12 -> 89 + 6)
	(12 -> 6 -> 5)
		(added cond. from num.)	(_s2_cache_reg_2$next != _s12_home_current_client_reg$next)
	(12 -> 6 -> 6 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && (_s2_cache_reg_2 != _s12_home_current_client_reg))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s2_cache_reg_2 != 2'd0) && (_s13_home_current_command_reg == 3'd2) && (_s2_cache_reg_2 != _s12_home_current_client_reg) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 14 -> 2)
	(212 + 14 -> 212 + 2)
	(14 -> 2 -> 2)
	(14 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 == 3'd5) && !(_s20_home_sharer_list_reg_2))
		[1] w3	((_s8_channel2_4_reg_2 == 3'd5) && !(_s20_home_sharer_list_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #22
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #22
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 23	(22 + 1 + 0 + 0 + 0)
	(concrete cube) 23	(22 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 23 -> 5)
	(239 + 23 -> 239 + 5)
	(23 -> 5 -> 2)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s13_home_current_command_reg$next)
	(23 -> 5 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg == 3'd1) && (_s4_channel1_reg_1 == 3'd2))
		[1] w3	((_s13_home_current_command_reg == 3'd1) && (_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(214 + 17 -> 214 + 3)
	(17 -> 3 -> 2)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
	(17 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd2) && (_s8_channel2_4_reg_2 == 3'd5))
		[1] w3	((_s4_channel1_reg_1 == 3'd2) && (_s8_channel2_4_reg_2 == 3'd5) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(181 + 14 -> 181 + 3)
	(14 -> 3 -> 3)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s4_channel1_reg_1$next)
	(14 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 == 3'd2) && (_s8_channel2_4_reg_2 == 3'd5) && !(_s20_home_sharer_list_reg_2))
		[1] w3	((_s4_channel1_reg_1 == 3'd2) && (_s8_channel2_4_reg_2 == 3'd5) && !(_s20_home_sharer_list_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #19
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #19
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 21	(20 + 1 + 0 + 0 + 0)
	(concrete cube) 21	(20 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 21 -> 2)
	(182 + 21 -> 182 + 2)
	(21 -> 2 -> 2)
	(21 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s2_cache_reg_2 == 2'd1) && (_s4_channel1_reg_1 == 3'd2))
		[1] w3	((_s2_cache_reg_2 == 2'd1) && (_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 13 -> 5)
	(143 + 13 -> 143 + 5)
	(13 -> 5 -> 4)
	(13 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(ReductionOr_1_3(_s13_home_current_command_reg)) && (_s2_cache_reg_2 == 2'd1) && (_s4_channel1_reg_1 == 3'd2) && !(_s20_home_sharer_list_reg_2))
		[1] w3	(!(ReductionOr_1_3(_s13_home_current_command_reg)) && (_s2_cache_reg_2 == 2'd1) && (_s4_channel1_reg_1 == 3'd2) && !(_s20_home_sharer_list_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(184 + 12 -> 184 + 4)
	(12 -> 4 -> 3)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(12 -> 4 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd5) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd5) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(145 + 11 -> 145 + 4)
	(11 -> 4 -> 3)
		(added cond. from num.)	(_s12_home_current_client_reg$next == _s2_cache_reg_2$next)
	(11 -> 4 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && (_s12_home_current_client_reg == _s2_cache_reg_2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && (_s12_home_current_client_reg == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 11 -> 4)
	(146 + 11 -> 146 + 4)
	(11 -> 4 -> 4)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s8_channel2_4_reg_2$next != _s13_home_current_command_reg$next)
	(11 -> 4 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd5) && !(_s20_home_sharer_list_reg_2) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && (_s8_channel2_4_reg_2 == 3'd5) && !(_s20_home_sharer_list_reg_2) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 10 -> 5)
	(93 + 10 -> 93 + 5)
	(10 -> 5 -> 4)
		(added cond. from num.)	(_s12_home_current_client_reg$next == _s2_cache_reg_2$next)
	(10 -> 5 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s12_home_current_client_reg == 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s13_home_current_command_reg == 3'd2) && (_s12_home_current_client_reg == _s2_cache_reg_2))
		[1] w3	((_s12_home_current_client_reg == 2'd1) && !(_s20_home_sharer_list_reg_2) && (_s13_home_current_command_reg == 3'd2) && (_s12_home_current_client_reg == _s2_cache_reg_2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #20
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #20
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 21	(20 + 1 + 0 + 0 + 0)
	(concrete cube) 21	(20 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #26
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #26
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 28	(27 + 1 + 0 + 0 + 0)
	(concrete cube) 28	(27 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #34
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #34
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 36	(35 + 1 + 0 + 0 + 0)
	(concrete cube) 36	(35 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 36 -> 4)
	(259 + 36 -> 259 + 4)
	(36 -> 4 -> 2)
	(36 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg != _s7_channel2_4_reg_1) && (_s5_channel1_reg_2 == 3'd1))
		[1] w3	((_s13_home_current_command_reg != _s7_channel2_4_reg_1) && (_s5_channel1_reg_2 == 3'd1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 28 -> 5)
	(249 + 28 -> 249 + 5)
	(28 -> 5 -> 3)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s5_channel1_reg_2$next)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s5_channel1_reg_2$next)
	(28 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg != _s7_channel2_4_reg_1) && (_s5_channel1_reg_2 == 3'd1) && (_s4_channel1_reg_1 == 3'd2))
		[1] w3	((_s13_home_current_command_reg != _s7_channel2_4_reg_1) && (_s5_channel1_reg_2 == 3'd1) && (_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #20
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #20
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 22	(21 + 1 + 0 + 0 + 0)
	(concrete cube) 22	(21 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #27
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #27
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 29	(28 + 1 + 0 + 0 + 0)
	(concrete cube) 29	(28 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 29 -> 4)
	(261 + 29 -> 261 + 4)
	(29 -> 4 -> 2)
	(29 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s4_channel1_reg_1 != _s7_channel2_4_reg_1) && (_s5_channel1_reg_2 == 3'd1))
		[1] w3	((_s4_channel1_reg_1 != _s7_channel2_4_reg_1) && (_s5_channel1_reg_2 == 3'd1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #21
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #21
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 23	(22 + 1 + 0 + 0 + 0)
	(concrete cube) 23	(22 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 23 -> 3)
	(262 + 23 -> 262 + 3)
	(23 -> 3 -> 2)
	(23 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2) && (_s5_channel1_reg_2 == 3'd1))
		[1] w3	((_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2) && (_s5_channel1_reg_2 == 3'd1) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 22 -> 5)
	(252 + 22 -> 252 + 5)
	(22 -> 5 -> 3)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s5_channel1_reg_2$next)
		(added cond. from num.)	(_s4_channel1_reg_1$next != _s5_channel1_reg_2$next)
	(22 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 != _s13_home_current_command_reg) && (_s5_channel1_reg_2 == 3'd1) && (_s4_channel1_reg_1 == 3'd2))
		[1] w3	((_s8_channel2_4_reg_2 != _s13_home_current_command_reg) && (_s5_channel1_reg_2 == 3'd1) && (_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 21 -> 6)
	(224 + 21 -> 224 + 6)
	(21 -> 6 -> 4)
		(added cond. from num.)	(_s5_channel1_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel1_reg_2$next != _s13_home_current_command_reg$next)
	(21 -> 6 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2) && (_s5_channel1_reg_2 == 3'd1) && (_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s7_channel2_4_reg_1 != _s8_channel2_4_reg_2) && (_s5_channel1_reg_2 == 3'd1) && (_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #20
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #20
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 22	(21 + 1 + 0 + 0 + 0)
	(concrete cube) 22	(21 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #20
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #20
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 22	(21 + 1 + 0 + 0 + 0)
	(concrete cube) 22	(21 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 22 -> 4)
	(265 + 22 -> 265 + 4)
	(22 -> 4 -> 2)
	(22 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && (_s4_channel1_reg_1 == 3'd2))
		[1] w3	((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && (_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 22 -> 5)
	(255 + 22 -> 255 + 5)
	(22 -> 5 -> 3)
	(22 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && (_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && (_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 18	(17 + 1 + 0 + 0 + 0)
	(concrete cube) 18	(17 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 18 -> 1)
	(43 + 18 -> 43 + 1)
	(18 -> 1 -> 1)
	(18 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s5_channel1_reg_2 != 3'd0)
		[1] w3	((_s5_channel1_reg_2 != 3'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(268 + 17 -> 268 + 3)
	(17 -> 3 -> 2)
	(17 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 != 3'd0) && (_s4_channel1_reg_1 == 3'd2))
		[1] w3	((_s5_channel1_reg_2 != 3'd0) && (_s4_channel1_reg_1 == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 17 -> 4)
	(257 + 17 -> 257 + 4)
	(17 -> 4 -> 2)
	(17 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 != 3'd0) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s5_channel1_reg_2 != 3'd0) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 18	(17 + 1 + 0 + 0 + 0)
	(concrete cube) 18	(17 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 18 -> 4)
	(270 + 18 -> 270 + 4)
	(18 -> 4 -> 1)
	(18 -> 4 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s8_channel2_4_reg_2 != 3'd0)
		[1] w3	((_s8_channel2_4_reg_2 != 3'd0) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 17 -> 3)
	(259 + 17 -> 259 + 3)
	(17 -> 3 -> 2)
	(17 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s13_home_current_command_reg != 3'd0) && (_s8_channel2_4_reg_2 == _s13_home_current_command_reg))
		[1] w3	((_s13_home_current_command_reg != 3'd0) && (_s8_channel2_4_reg_2 == _s13_home_current_command_reg) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 16 -> 7)
	(228 + 16 -> 228 + 7)
	(16 -> 7 -> 4)
		(added cond. from num.)	(_s5_channel1_reg_2$next != _s13_home_current_command_reg$next)
		(added cond. from num.)	(_s5_channel1_reg_2$next != _s13_home_current_command_reg$next)
	(16 -> 7 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s7_channel2_4_reg_1 != 3'd0) && (_s5_channel1_reg_2 == 3'd1) && (_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2))
		[1] w3	((_s7_channel2_4_reg_1 != 3'd0) && (_s5_channel1_reg_2 == 3'd1) && (_s12_home_current_client_reg == 2'd1) && (_s13_home_current_command_reg == 3'd2) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #17
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #17
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 19	(18 + 1 + 0 + 0 + 0)
	(concrete cube) 19	(18 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 19 -> 2)
	(229 + 19 -> 229 + 2)
	(19 -> 2 -> 2)
	(19 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 != _s13_home_current_command_reg) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s5_channel1_reg_2 != _s13_home_current_command_reg) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 15 -> 4)
	(230 + 15 -> 230 + 4)
	(15 -> 4 -> 2)
	(15 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s5_channel1_reg_2 != _s8_channel2_4_reg_2) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 15 -> 3)
	(192 + 15 -> 192 + 3)
	(15 -> 3 -> 3)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
		(added cond. from num.)	(_s7_channel2_4_reg_1$next != _s5_channel1_reg_2$next)
	(15 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s8_channel2_4_reg_2 != _s13_home_current_command_reg) && (_s5_channel1_reg_2 == 3'd1) && (_s7_channel2_4_reg_1 == 3'd6))
		[1] w3	((_s8_channel2_4_reg_2 != _s13_home_current_command_reg) && (_s5_channel1_reg_2 == 3'd1) && (_s7_channel2_4_reg_1 == 3'd6) && !((!(_s22_id52) && _s26_id73)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #19
	(adding from pre_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #19
	(abstract cube) 21	(20 + 1 + 0 + 0 + 0)
	(concrete cube) 21	(20 + 1 + 0 + 0)
		(Next: (!(_s26_id73$next) && (_s1_cache_reg_1$next == _s1_cache_reg_1$next_rhs) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs) && (_s4_channel1_reg_1$next == _s4_channel1_reg_1$next_rhs) && (_s5_channel1_reg_2$next == _s5_channel1_reg_2$next_rhs) && (_s7_channel2_4_reg_1$next == _s7_channel2_4_reg_1$next_rhs) && (_s8_channel2_4_reg_2$next == _s8_channel2_4_reg_2$next_rhs) && (_s13_home_current_command_reg$next == _s13_home_current_command_reg$next_rhs) && (_s14_home_exclusive_granted_reg$next == _s14_home_exclusive_granted_reg$next_rhs) && (_s19_home_sharer_list_reg_1$next == _s19_home_sharer_list_reg_1$next_rhs) && (_s20_home_sharer_list_reg_2$next == _s20_home_sharer_list_reg_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 10)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 16)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 17)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[3] & T[3] & A[2]+ ]: 		(bv input core size: 21)
		SAT_c ? [ A[4] & T[4] & A[3]+ ]: 		(bv input core size: 31)
		SAT_c ? [ A[5] & T[5] & A[4]+ ]: 		(bv input core size: 32)
		SAT_c ? [ A[6] & T[6] & A[5]+ ]: 		(bv input core size: 36)
		SAT_c ? [ A[7] & T[7] & A[6]+ ]: 		(bv input core size: 37)
		SAT_c ? [ A[8] & T[8] & A[7]+ ]: 		(bv input core size: 38)
		SAT_c ? [ A[9] & T[9] & A[8]+ ]: 		(bv input core size: 47)

	[Simulation check]: 
[Sim_1]    =========== Simulation Begins ===============
	1: A[9]

	2: A[8]

	3: A[7]

	4: A[6]

	5: A[5]

	6: A[4]

	7: A[3]

	8: A[2]

	9: A[1]

	10: A[0]

		ACEXT is feasible
[Sim_1]    =========== Simulation Ends ===============
[RES_1]       21	: 9	: 0 7 15 15 26 31 20 10 5 1 s: 130
[RES_0]    L  9 : 0 14 42 45 75 110 87 39 15 3 s: 430, mem: 26, time: 0.977027

-----------
Refinements
-----------
[1]	((b$71 || b$76) && (b$71$next || b$76$next))
[2]	!(_s26_id73$next)
[3]	!((((_i1_io_en_a == 5'd1) || (_i1_io_en_a != 5'd1)) && b$1997 && (_s26_id73 || !(_s26_id73)) && _s26_id73))
[4]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd2) && _s26_id73))
[5]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd3) && _s26_id73))
[6]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd4) && _s26_id73))
[7]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd5) && _s26_id73))
[8]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd6) && _s26_id73))
[9]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd7) && _s26_id73))
[10]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd8) && _s26_id73))
[11]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd9) && _s26_id73))
[12]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd10) && _s26_id73))
[13]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd11) && _s26_id73))
[14]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd12) && _s26_id73))
[15]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd13) && _s26_id73))
[16]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd14) && _s26_id73))
[17]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd15) && _s26_id73))
[18]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd16) && _s26_id73))
[19]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd17) && _s26_id73))
[20]	!(((((b$71 || b$76) && (b$71$next || b$76$next)) && !(_s26_id73$next)) && (_i1_io_en_a == 5'd18) && _s26_id73))
[21]	!((((_s2_cache_reg_2 == 2'd0) || (_s2_cache_reg_2 != 2'd0)) && (_s2_cache_reg_2 == 2'd0) && ((_i1_io_en_a == 5'd15) || (_i1_io_en_a != 5'd15)) && b$1586 && ReductionOr_1_2(_s2_cache_reg_2$next) && (_s2_cache_reg_2$next == _s2_cache_reg_2$next_rhs)))
[22]	!(((_s1_cache_reg_1 == 2'd0) && ReductionOr_1_2(_s1_cache_reg_1)))
[23]	!(((_s1_cache_reg_1$next == 2'd0) && ReductionOr_1_2(_s1_cache_reg_1$next)))
-----------
[RES_0]    refinement-lemmas-check successful!
 s: 430, mem: 26, time: 0.98
Frames explored (20 datapath refinements) : 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 5 
CEXT lengths (21 feasibility checks) : 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 6 6 10 
DP lemmas (20 feasibility checks) : 
3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 
Block= 49 BlockT= 57 BlockS= 49 BlockU= 8 Oblig= 495 ObligT= 495 ObligS= 252 ObligU= 243 FPT= 257 FPS= 248 FPU= 9 CallT= 3599 CallS= 2369 CallU= 1230 MUST= 298 MUSS= 35 MUSU= 263 sMUST= 9 sMUSS= 5 sMUSU= 4 dMUST= 124 dMUSS= 88 dMUSU= 36 rMUST= 1663 rMUSS= 759 rMUSU= 904 All_clauses= 243 All_literals= 787 Clauses= 130 Literals= 430 DPLemmas= 23 DPrefsNoDPL= 0 DPRefs= 20

pme_fail: 0, pme_succ: 0, lit_before: 0, lit_after: 0
coi_before: 0, coi_after: 0
mus_before: 2902 mus_lit: 544 mus_cls: 243 mus_cnt: 243
S+M	Call = 3897 (sat=2404, 61.69%)
SAT	Call = 3599 (sat=2369, 65.82%)
MUS	Call = 298 (sat=35, 11.74%)

Detailed Stats:

  (reachability)
	#Frame Restrictions:	243
	#TB                :	301
	#cubes-subsumed    :	113
	#context reset     :	0
	#Y2 reset          :	0
	#frame solver reset:	8
	avg-sz-frame-restriction:  	3.24

	avg-sz-ab-cube:  	11.07
		%t1-ab-cube:   	100.00%	[sel: 100.00% ]
		%t2-ab-cube:   	0.00%	[sel: 0.00% ]
		%t3-ab-cube:   	0.00%	[sel: 0.00% ]
		%t4-ab-cube:   	0.00%	[sel: 0.00% ]

		ab-cube info:	
			s == s:	2.04%	[sel: 3.56% ]
			s == n:	30.15%	[sel: 43.58% ]
			s == o:	0.00%	[sel: 0.00% ]
			n == o:	0.00%	[sel: 0.00% ]
			o == o:	0.00%	[sel: 0.00% ]
			s != s:	4.05%	[sel: 3.81% ]
			s != n:	33.57%	[sel: 10.17% ]
			s != o:	0.00%	[sel: 0.00% ]
			n != o:	0.00%	[sel: 0.00% ]
			o != o:	0.00%	[sel: 0.00% ]
			s bool:	20.91%	[sel: 6.61% ]
			up    :	9.27%	[sel: 32.27% ]
			oth   :	0.00%	[sel: 0.00% ]

		%coi-ab-cube  :	88.99%	[sel: 99.75% ]
			s (==):	2.04%	[sel: 3.56% ]
			s (!=):	4.05%	[sel: 3.81% ]
			n (==):	30.15%	[sel: 43.58% ]
			n (!=):	31.53%	[sel: 9.91% ]
			other :	21.21%	[sel: 38.88% ]
		%pred-ab-cube :	11.01%	[sel: 0.25% ]
		%fproj-ab-cube:	0.00%	[sel: 0.00% ]
			s (==):	0.00%	[sel: 0.00% ]
			s (!=):	0.00%	[sel: 0.00% ]
			n (==):	0.00%	[sel: 0.00% ]
			n (!=):	0.00%	[sel: 0.00% ]
		%proj-ab-cube :	0.00%	[sel: 0.00% ]
			s (==):	0.00%	[sel: 0.00% ]
			s (!=):	0.00%	[sel: 0.00% ]
			n (==):	0.00%	[sel: 0.00% ]
			n (!=):	0.00%	[sel: 0.00% ]
		%subs-ab-cube :	0.00%	[sel: 0.00% ]
	avg-#sv-ab-cube:  	5.00
	avg-tsb-ab-cube:  	11.00
	relevancy:       	69.06%

	avg-sz-cc-cube:  	11.00
		%coi-cc-cube  :	88.99%
		%pred-cc-cube :	11.01%
		%fproj-cc-cube:	0.00%
			s (==):	0.00%
			s (!=):	0.00%
			n (==):	0.00%
			n (!=):	0.00%
		%proj-cc-cube :	0.00%
			s (==):	0.00%
			s (!=):	0.00%
			n (==):	0.00%
			n (!=):	0.00%

	tb_cube_time:     	0.08 (8.20%)
		cube_eval_time: 	0.03 (2.68%)
		cube_pred_time: 	0.00 (0.08%)
		cube_fproj_time:	0.00 (0.00%)
		cube_proj_time: 	0.00 (0.00%)
		cube _subs_time:	0.00 (0.01%)
		sum:            	0.03 (33.77% of tb_cube_time)

	tb_ct_time:      	0.03 (2.99%)
		ct isblocked_time:  	0.00 (0.00%)
		ct isinitial_time:  	0.02 (1.87%)
		ct containment_time:	0.00 (0.04%)
		ct fastforward_time:	0.00 (0.00%)
		sum:                	0.02 (63.70% of tb_ct_time)

	setcontain_time:	0.00 (0.00%)

	updatesolver_time:	0.01 (0.56%)

	tb_time:	0.80 (81.86%)
		tb_reach_time:    	0.19 (19.51%)
		tb_val_time:    	0.01 (1.30%) [ cti_val_time: 0.00 (0.08%) ]
		tb_cube_time:      	0.08 (8.20%)
		tb_mus_time:      	0.46 (46.74%)
			tb_mus_core_time:      	0.09 (9.61%)
			tb_mus_min_time:      	0.36 (36.47%)
		tb_ct_time:       	0.03 (2.99%)
		tb_extra_time:    	0.00 (0.00%)
		sum:           	0.76 (94.60% of tb_time)


  (refinement)
	sim_time:		0.05 (5.07%) 	 [57.43% of dpr_time]

  pre_time:	0.00 (0.18%)
  cti_time:	0.01 (0.51%)	[cti_i_time:	0.00 (0.16%) ]
  tb_time:	0.80 (81.86%)
  fp_time:	0.07 (7.47%)	[fp_extra_time:	0.00 (0.00%) ]
  refine_time:	0.09 (8.83%)
  sol_set_time:	0.00 (0.40%)
  inv_time:	0.00 (0.19%)	[induct_time:	0.00 (0.00%) ]
  draw_time:	0.00 (0.00%)
  sum:		0.97 (99.43%)

  extra_time:	0.00 (0.00%)

  timeout_time:	0.00 (0.00%)

[simplified] 0 (ex), 0 (cc), 0 (ot)

===   VIOLATED   ===

Averroes finished.

br-#mus         243           
        hard        soft         out           
           
      103.59       11.94        3.07               (br-core)           
      103.59        3.07        2.24                (br-min)          

         sat       unsat           
                                          #Calls           
           0         243   (br-core)           
           0           0  (br-core2)           
         759         661    (br-min)           
                                      Time (sec)           
        0.01        0.09   (br-core)           
        0.00        0.00  (br-core2)           
        0.09        0.22    (br-min)           
                                    Avg. Time (microsec)           
           0         350   (br-core)           
           0           0  (br-core2)           
         123         336    (br-min)           
                                    Max Time (microsec)           
        1144         919   (br-core)           
           0           0  (br-core2)           
         593         854    (br-min)          

                      ab                      bv           
         sat       unsat         sat       unsat           
                                                      #Calls           
         266          11          14          23   (oneshot)           
        1996         913          58          20       (inc)           
           0         243          35          20    (assume)           
                       0                       0   (timeout)          

                                                  Time (sec)           
        0.00        0.00        0.00        0.00   (oneshot)           
        0.21        0.30        0.00        0.00       (inc)           
        0.00        0.08        0.01        0.00    (assume)           
                    0.00                    0.00   (timeout)          

                                                Avg. Time (microsec)
           5           9          67           3   (oneshot)           
         102         333          43          24       (inc)           
           0         331         236         193    (assume)           
                       0                       0   (timeout)           
           
      Result        Time        Mem.       #Refs           
                     sec          MB                       
           v        0.98          26          21
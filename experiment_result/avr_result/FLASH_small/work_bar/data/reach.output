Timeout: 3600, Memory_limit: 64000
	10000.000000 (abstract query)
	10000.000000 (concrete query)

Config:
	(concrete bit-width limit: 0)
	(fineness: 2)
	(interpret-ex-cc-level: 2)
	(forward-check:	0)
	(full projection)
	(prioritization:	single)

#STAT# num_bits= 36 num_regs= 36 num_total_bits= 112
1  36
2  32
3  4

System
  int : 9505
  bool : 9979
  sum : 19484
  bool_op : 9624
  int_op : 10
    !  40
    !=_int  6
    &&  116
    ==  36
    ==_int  209
    ?:  4379
    ?:_int  4643
    {}  3
    |_2  6
    |_8  1
    ||  195


Property
  int : 0
  bool : 33
  sum : 33
  bool_op : 14
  int_op : 0
    !  8
    &&  5
    ==  1

Partial interpretation info:
  depth: 0
  count: 0
  count (d=0): 0

  depth (prop): 0
  count (prop): 0
  count (d=0) (prop): 0

	# of Inst.                  : 19613	(864 bytes each)
	  ExInst::hm_ExInst.size()  : 0	(984 bytes each)
	  SigInst::hm_SigInst.size(): 158	(904 bytes each)
	  NumInst::hm_NumInst.size(): 141	(888 bytes each)
	  OpInst::hm_OpInst.size()  : 546	(944 bytes each)
	  OpInst::hm_ITEInst.size() : 9022	(944 bytes each)
	  OpInst::hm_ETCInst.size() : 97	(944 bytes each)
	Total                       : 9964

	Memory (est.)               : 16.160614 MB
	  ExInst                    : 0.000000 MB
	  SigInst                   : 0.136215 MB
	  NumInst                   : 0.119408 MB
	  OpInst::OP                : 0.491547 MB
	  OpInst::ITE               : 8.122223 MB
	  OpInst::ETC               : 0.087326 MB

	(maximum function composition in T: 1)

---------------------------------------------------------------------------------------------
 Reachability Analysis Begins
---------------------------------------------------------------------------------------------
Loop_FrameNumber_#ReachabilityIterations_#RefinementIterations
---------------------------------------------------------------------------------------------
Loop_0_0_0
---------------------------------------------------------------------------------------------
[Basis Step]:
	F[0] = I
	SAT_a ? [ F[0] && !P ]: UNSAT

[First Step]:
	SAT_a ? [ F[0] & T & !P ]: UNSAT

[RES_1]       0	: 0	: 0 s: 0
[RES_0]    L  0 : 0 s: 0, mem: 34, time: 0.05345
[RES_1]       0	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 34, time: 0.053586
---------------------------------------------------------------------------------------------
Loop_1_0_0
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 3	(3 + 0 + 0 + 0 + 0)
	(concrete cube) 3	(3 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #40
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #40
	(abstract cube) 3	(3 + 0 + 0 + 0 + 0)
	(concrete cube) 3	(3 + 0 + 0 + 0)
		(Next: ((_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 11)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 9)

	[Simulation check]: 
[Sim_1]    =========== Simulation Begins ===============
	1: A[1]
[1] Cube to CubeNext+ is UNSAT

		(cc core: 80 -> 2)
resMusBv: 1
		ACEXT is infeasible
			(unsat: A[1] to A[0] )
[Sim_1]    Adding lemma to ensure following never happens: 
	_s71_id163
	(_i1_io_en_a == 8'd91)

[Sim_1]    Processing failure condition: 
	_s71_id163
	(_i1_io_en_a == 8'd91)

			(adding predicate (absent)   _s71_id163 )
						(learning signal    _s71_id163 )
			(adding predicate (absent)   (_i1_io_en_a == 8'd91) )
			(finding parent expressions)	(_i1_io_en_a == 8'd91)
				(parent expression)
					(_i1_io_en_a == 8'd91) := (_i1_io_en_a == 8'd91)
						(learning signal    _i1_io_en_a )
						(learning constant  8'd91 )
[Sim_1]    =========== Simulation Ends ===============

	[Lemmas]: 
		[1] !((((_i1_io_en_a == 8'd91) || (_i1_io_en_a != 8'd91)) && b$54506 && (_s71_id163 || !(_s71_id163)) && _s71_id163))
#19796
#Lemmas = 3
[RES_1]       1	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.169561
---------------------------------------------------------------------------------------------
Loop_1_0_1
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #127
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #127
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd4) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd4) && _s71_id163))
#19981
#Lemmas = 4
[RES_1]       2	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.189535
---------------------------------------------------------------------------------------------
Loop_1_0_2
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #126
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #126
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd5) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd5) && _s71_id163))
#19989
#Lemmas = 5
[RES_1]       3	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.205093
---------------------------------------------------------------------------------------------
Loop_1_0_3
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd6) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd6) && _s71_id163))
#19997
#Lemmas = 6
[RES_1]       4	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.220685
---------------------------------------------------------------------------------------------
Loop_1_0_4
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #124
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #124
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd7) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd7) && _s71_id163))
#20005
#Lemmas = 7
[RES_1]       5	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.235499
---------------------------------------------------------------------------------------------
Loop_1_0_5
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd8) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd8) && _s71_id163))
#20013
#Lemmas = 8
[RES_1]       6	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.249914
---------------------------------------------------------------------------------------------
Loop_1_0_6
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #122
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #122
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd9) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd9) && _s71_id163))
#20021
#Lemmas = 9
[RES_1]       7	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.264419
---------------------------------------------------------------------------------------------
Loop_1_0_7
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #121
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #121
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd10) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd10) && _s71_id163))
#20029
#Lemmas = 10
[RES_1]       8	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.278503
---------------------------------------------------------------------------------------------
Loop_1_0_8
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #120
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #120
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd11) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd11) && _s71_id163))
#20037
#Lemmas = 11
[RES_1]       9	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.292534
---------------------------------------------------------------------------------------------
Loop_1_0_9
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #119
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #119
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd12) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd12) && _s71_id163))
#20045
#Lemmas = 12
[RES_1]       10	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.306443
---------------------------------------------------------------------------------------------
Loop_1_0_10
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #118
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #118
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd13) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd13) && _s71_id163))
#20053
#Lemmas = 13
[RES_1]       11	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.320136
---------------------------------------------------------------------------------------------
Loop_1_0_11
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #117
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #117
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd14) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd14) && _s71_id163))
#20061
#Lemmas = 14
[RES_1]       12	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.33378
---------------------------------------------------------------------------------------------
Loop_1_0_12
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #116
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #116
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd15) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd15) && _s71_id163))
#20069
#Lemmas = 15
[RES_1]       13	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.346744
---------------------------------------------------------------------------------------------
Loop_1_0_13
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #115
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #115
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd16) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd16) && _s71_id163))
#20077
#Lemmas = 16
[RES_1]       14	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.35931
---------------------------------------------------------------------------------------------
Loop_1_0_14
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd17) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd17) && _s71_id163))
#20085
#Lemmas = 17
[RES_1]       15	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.371518
---------------------------------------------------------------------------------------------
Loop_1_0_15
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #113
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #113
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd18) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd18) && _s71_id163))
#20093
#Lemmas = 18
[RES_1]       16	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.383789
---------------------------------------------------------------------------------------------
Loop_1_0_16
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #112
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #112
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd19) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd19) && _s71_id163))
#20104
#Lemmas = 19
[RES_1]       17	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.395884
---------------------------------------------------------------------------------------------
Loop_1_0_17
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #111
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #111
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd20) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd20) && _s71_id163))
#20115
#Lemmas = 20
[RES_1]       18	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.407561
---------------------------------------------------------------------------------------------
Loop_1_0_18
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #110
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #110
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd21) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd21) && _s71_id163))
#20123
#Lemmas = 21
[RES_1]       19	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.419131
---------------------------------------------------------------------------------------------
Loop_1_0_19
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #109
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #109
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd22) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd22) && _s71_id163))
#20131
#Lemmas = 22
[RES_1]       20	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.430513
---------------------------------------------------------------------------------------------
Loop_1_0_20
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #108
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #108
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd23) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd23) && _s71_id163))
#20139
#Lemmas = 23
[RES_1]       21	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.44147
---------------------------------------------------------------------------------------------
Loop_1_0_21
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #107
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #107
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd24) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd24) && _s71_id163))
#20147
#Lemmas = 24
[RES_1]       22	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.452282
---------------------------------------------------------------------------------------------
Loop_1_0_22
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #106
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #106
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd25) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd25) && _s71_id163))
#20155
#Lemmas = 25
[RES_1]       23	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.462834
---------------------------------------------------------------------------------------------
Loop_1_0_23
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #105
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #105
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd26) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd26) && _s71_id163))
#20163
#Lemmas = 26
[RES_1]       24	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.473016
---------------------------------------------------------------------------------------------
Loop_1_0_24
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #104
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #104
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd27) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd27) && _s71_id163))
#20171
#Lemmas = 27
[RES_1]       25	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.483034
---------------------------------------------------------------------------------------------
Loop_1_0_25
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #103
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #103
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd28) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd28) && _s71_id163))
#20179
#Lemmas = 28
[RES_1]       26	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.493071
---------------------------------------------------------------------------------------------
Loop_1_0_26
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #102
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #102
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd29) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd29) && _s71_id163))
#20187
#Lemmas = 29
[RES_1]       27	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.503014
---------------------------------------------------------------------------------------------
Loop_1_0_27
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #101
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #101
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd30) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd30) && _s71_id163))
#20195
#Lemmas = 30
[RES_1]       28	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.512725
---------------------------------------------------------------------------------------------
Loop_1_0_28
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #100
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #100
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd31) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd31) && _s71_id163))
#20203
#Lemmas = 31
[RES_1]       29	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.522186
---------------------------------------------------------------------------------------------
Loop_1_0_29
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #99
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #99
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd32) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd32) && _s71_id163))
#20211
#Lemmas = 32
[RES_1]       30	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.531495
---------------------------------------------------------------------------------------------
Loop_1_0_30
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #98
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #98
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd33) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd33) && _s71_id163))
#20219
#Lemmas = 33
[RES_1]       31	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.540788
---------------------------------------------------------------------------------------------
Loop_1_0_31
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #97
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #97
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd34) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd34) && _s71_id163))
#20227
#Lemmas = 34
[RES_1]       32	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.549868
---------------------------------------------------------------------------------------------
Loop_1_0_32
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #96
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #96
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd35) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd35) && _s71_id163))
#20235
#Lemmas = 35
[RES_1]       33	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.558852
---------------------------------------------------------------------------------------------
Loop_1_0_33
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #95
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #95
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd36) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd36) && _s71_id163))
#20243
#Lemmas = 36
[RES_1]       34	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.56777
---------------------------------------------------------------------------------------------
Loop_1_0_34
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #94
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #94
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd37) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd37) && _s71_id163))
#20251
#Lemmas = 37
[RES_1]       35	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.576456
---------------------------------------------------------------------------------------------
Loop_1_0_35
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #93
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #93
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd38) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd38) && _s71_id163))
#20259
#Lemmas = 38
[RES_1]       36	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.584974
---------------------------------------------------------------------------------------------
Loop_1_0_36
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #92
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #92
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd39) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd39) && _s71_id163))
#20267
#Lemmas = 39
[RES_1]       37	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.593257
---------------------------------------------------------------------------------------------
Loop_1_0_37
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #91
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #91
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd40) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd40) && _s71_id163))
#20275
#Lemmas = 40
[RES_1]       38	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.601556
---------------------------------------------------------------------------------------------
Loop_1_0_38
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #90
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #90
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd41) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd41) && _s71_id163))
#20283
#Lemmas = 41
[RES_1]       39	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.610012
---------------------------------------------------------------------------------------------
Loop_1_0_39
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #89
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #89
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd42) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd42) && _s71_id163))
#20291
#Lemmas = 42
[RES_1]       40	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.61833
---------------------------------------------------------------------------------------------
Loop_1_0_40
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #88
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #88
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd43) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd43) && _s71_id163))
#20299
#Lemmas = 43
[RES_1]       41	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.626507
---------------------------------------------------------------------------------------------
Loop_1_0_41
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #87
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #87
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd44) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd44) && _s71_id163))
#20307
#Lemmas = 44
[RES_1]       42	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.634483
---------------------------------------------------------------------------------------------
Loop_1_0_42
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #86
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #86
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd45) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd45) && _s71_id163))
#20315
#Lemmas = 45
[RES_1]       43	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.642285
---------------------------------------------------------------------------------------------
Loop_1_0_43
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #85
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #85
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd46) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd46) && _s71_id163))
#20326
#Lemmas = 46
[RES_1]       44	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.650118
---------------------------------------------------------------------------------------------
Loop_1_0_44
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #84
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #84
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd47) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd47) && _s71_id163))
#20337
#Lemmas = 47
[RES_1]       45	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.657761
---------------------------------------------------------------------------------------------
Loop_1_0_45
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #83
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #83
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd48) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd48) && _s71_id163))
#20345
#Lemmas = 48
[RES_1]       46	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.665112
---------------------------------------------------------------------------------------------
Loop_1_0_46
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #82
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #82
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd49) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd49) && _s71_id163))
#20356
#Lemmas = 49
[RES_1]       47	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.672529
---------------------------------------------------------------------------------------------
Loop_1_0_47
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #81
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #81
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd50) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd50) && _s71_id163))
#20364
#Lemmas = 50
[RES_1]       48	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.67983
---------------------------------------------------------------------------------------------
Loop_1_0_48
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #80
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #80
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd51) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd51) && _s71_id163))
#20372
#Lemmas = 51
[RES_1]       49	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.687012
---------------------------------------------------------------------------------------------
Loop_1_0_49
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #79
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #79
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd52) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd52) && _s71_id163))
#20380
#Lemmas = 52
[RES_1]       50	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.694031
---------------------------------------------------------------------------------------------
Loop_1_0_50
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #78
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #78
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd53) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd53) && _s71_id163))
#20388
#Lemmas = 53
[RES_1]       51	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.701003
---------------------------------------------------------------------------------------------
Loop_1_0_51
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #77
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #77
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd54) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd54) && _s71_id163))
#20396
#Lemmas = 54
[RES_1]       52	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.70778
---------------------------------------------------------------------------------------------
Loop_1_0_52
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #76
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #76
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd55) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd55) && _s71_id163))
#20404
#Lemmas = 55
[RES_1]       53	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.714542
---------------------------------------------------------------------------------------------
Loop_1_0_53
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #75
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #75
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd56) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd56) && _s71_id163))
#20412
#Lemmas = 56
[RES_1]       54	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.721379
---------------------------------------------------------------------------------------------
Loop_1_0_54
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #74
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #74
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd57) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd57) && _s71_id163))
#20420
#Lemmas = 57
[RES_1]       55	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.72828
---------------------------------------------------------------------------------------------
Loop_1_0_55
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #73
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #73
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd58) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd58) && _s71_id163))
#20428
#Lemmas = 58
[RES_1]       56	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.734995
---------------------------------------------------------------------------------------------
Loop_1_0_56
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #72
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #72
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd59) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd59) && _s71_id163))
#20436
#Lemmas = 59
[RES_1]       57	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.741772
---------------------------------------------------------------------------------------------
Loop_1_0_57
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #71
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #71
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd60) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd60) && _s71_id163))
#20444
#Lemmas = 60
[RES_1]       58	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.748209
---------------------------------------------------------------------------------------------
Loop_1_0_58
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #70
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #70
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd61) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd61) && _s71_id163))
#20452
#Lemmas = 61
[RES_1]       59	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.754544
---------------------------------------------------------------------------------------------
Loop_1_0_59
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #69
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #69
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd62) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd62) && _s71_id163))
#20460
#Lemmas = 62
[RES_1]       60	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.760835
---------------------------------------------------------------------------------------------
Loop_1_0_60
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #68
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #68
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd63) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd63) && _s71_id163))
#20468
#Lemmas = 63
[RES_1]       61	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.767083
---------------------------------------------------------------------------------------------
Loop_1_0_61
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #67
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #67
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd64) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd64) && _s71_id163))
#20476
#Lemmas = 64
[RES_1]       62	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.773182
---------------------------------------------------------------------------------------------
Loop_1_0_62
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #66
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #66
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd65) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd65) && _s71_id163))
#20484
#Lemmas = 65
[RES_1]       63	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.779448
---------------------------------------------------------------------------------------------
Loop_1_0_63
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #65
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #65
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd66) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd66) && _s71_id163))
#20492
#Lemmas = 66
[RES_1]       64	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.78551
---------------------------------------------------------------------------------------------
Loop_1_0_64
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #64
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #64
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd67) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd67) && _s71_id163))
#20500
#Lemmas = 67
[RES_1]       65	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.791484
---------------------------------------------------------------------------------------------
Loop_1_0_65
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #63
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #63
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd68) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd68) && _s71_id163))
#20508
#Lemmas = 68
[RES_1]       66	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.797404
---------------------------------------------------------------------------------------------
Loop_1_0_66
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #62
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #62
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd69) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd69) && _s71_id163))
#20516
#Lemmas = 69
[RES_1]       67	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.803264
---------------------------------------------------------------------------------------------
Loop_1_0_67
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #61
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #61
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd70) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd70) && _s71_id163))
#20524
#Lemmas = 70
[RES_1]       68	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.809115
---------------------------------------------------------------------------------------------
Loop_1_0_68
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #60
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #60
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd71) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd71) && _s71_id163))
#20532
#Lemmas = 71
[RES_1]       69	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.814961
---------------------------------------------------------------------------------------------
Loop_1_0_69
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #59
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #59
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd72) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd72) && _s71_id163))
#20540
#Lemmas = 72
[RES_1]       70	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.820775
---------------------------------------------------------------------------------------------
Loop_1_0_70
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #58
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #58
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd73) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd73) && _s71_id163))
#20548
#Lemmas = 73
[RES_1]       71	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.826472
---------------------------------------------------------------------------------------------
Loop_1_0_71
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #57
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #57
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd74) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd74) && _s71_id163))
#20556
#Lemmas = 74
[RES_1]       72	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.832203
---------------------------------------------------------------------------------------------
Loop_1_0_72
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #56
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #56
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd75) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd75) && _s71_id163))
#20564
#Lemmas = 75
[RES_1]       73	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.837789
---------------------------------------------------------------------------------------------
Loop_1_0_73
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #55
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #55
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd76) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd76) && _s71_id163))
#20572
#Lemmas = 76
[RES_1]       74	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.843179
---------------------------------------------------------------------------------------------
Loop_1_0_74
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #54
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #54
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd77) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd77) && _s71_id163))
#20580
#Lemmas = 77
[RES_1]       75	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.848472
---------------------------------------------------------------------------------------------
Loop_1_0_75
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #53
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #53
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd78) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd78) && _s71_id163))
#20588
#Lemmas = 78
[RES_1]       76	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.853702
---------------------------------------------------------------------------------------------
Loop_1_0_76
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #52
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #52
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd79) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd79) && _s71_id163))
#20596
#Lemmas = 79
[RES_1]       77	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.858858
---------------------------------------------------------------------------------------------
Loop_1_0_77
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #51
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #51
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd80) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd80) && _s71_id163))
#20604
#Lemmas = 80
[RES_1]       78	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.863934
---------------------------------------------------------------------------------------------
Loop_1_0_78
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #50
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #50
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd81) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd81) && _s71_id163))
#20612
#Lemmas = 81
[RES_1]       79	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.868911
---------------------------------------------------------------------------------------------
Loop_1_0_79
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #49
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #49
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd82) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd82) && _s71_id163))
#20620
#Lemmas = 82
[RES_1]       80	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.873859
---------------------------------------------------------------------------------------------
Loop_1_0_80
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #48
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #48
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd83) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd83) && _s71_id163))
#20628
#Lemmas = 83
[RES_1]       81	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.878763
---------------------------------------------------------------------------------------------
Loop_1_0_81
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #47
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #47
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd84) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd84) && _s71_id163))
#20636
#Lemmas = 84
[RES_1]       82	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.883564
---------------------------------------------------------------------------------------------
Loop_1_0_82
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #46
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #46
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd85) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd85) && _s71_id163))
#20644
#Lemmas = 85
[RES_1]       83	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.888327
---------------------------------------------------------------------------------------------
Loop_1_0_83
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #45
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #45
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd86) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd86) && _s71_id163))
#20652
#Lemmas = 86
[RES_1]       84	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.893085
---------------------------------------------------------------------------------------------
Loop_1_0_84
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #44
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #44
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd87) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd87) && _s71_id163))
#20660
#Lemmas = 87
[RES_1]       85	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.89766
---------------------------------------------------------------------------------------------
Loop_1_0_85
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #43
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #43
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd88) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd88) && _s71_id163))
#20668
#Lemmas = 88
[RES_1]       86	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.902178
---------------------------------------------------------------------------------------------
Loop_1_0_86
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #42
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #42
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd89) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd89) && _s71_id163))
#20676
#Lemmas = 89
[RES_1]       87	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.906703
---------------------------------------------------------------------------------------------
Loop_1_0_87
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #41
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #41
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd90) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd90) && _s71_id163))
#20684
#Lemmas = 90
[RES_1]       88	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.911141
---------------------------------------------------------------------------------------------
Loop_1_0_88
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #39
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #39
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd92) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd92) && _s71_id163))
#20692
#Lemmas = 91
[RES_1]       89	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.91546
---------------------------------------------------------------------------------------------
Loop_1_0_89
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #38
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #38
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd93) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd93) && _s71_id163))
#20700
#Lemmas = 92
[RES_1]       90	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.91971
---------------------------------------------------------------------------------------------
Loop_1_0_90
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #37
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #37
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd94) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd94) && _s71_id163))
#20708
#Lemmas = 93
[RES_1]       91	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.923959
---------------------------------------------------------------------------------------------
Loop_1_0_91
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #36
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #36
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd95) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd95) && _s71_id163))
#20716
#Lemmas = 94
[RES_1]       92	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.928225
---------------------------------------------------------------------------------------------
Loop_1_0_92
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #35
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #35
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd96) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd96) && _s71_id163))
#20724
#Lemmas = 95
[RES_1]       93	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.932434
---------------------------------------------------------------------------------------------
Loop_1_0_93
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #34
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #34
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd97) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd97) && _s71_id163))
#20732
#Lemmas = 96
[RES_1]       94	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.936491
---------------------------------------------------------------------------------------------
Loop_1_0_94
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #33
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #33
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd98) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd98) && _s71_id163))
#20740
#Lemmas = 97
[RES_1]       95	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.940518
---------------------------------------------------------------------------------------------
Loop_1_0_95
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #32
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #32
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd99) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd99) && _s71_id163))
#20748
#Lemmas = 98
[RES_1]       96	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.944497
---------------------------------------------------------------------------------------------
Loop_1_0_96
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #31
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #31
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd100) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd100) && _s71_id163))
#20759
#Lemmas = 99
[RES_1]       97	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.948521
---------------------------------------------------------------------------------------------
Loop_1_0_97
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #30
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #30
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd101) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd101) && _s71_id163))
#20770
#Lemmas = 100
[RES_1]       98	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.95251
---------------------------------------------------------------------------------------------
Loop_1_0_98
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #29
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #29
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd102) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd102) && _s71_id163))
#20778
#Lemmas = 101
[RES_1]       99	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.956395
---------------------------------------------------------------------------------------------
Loop_1_0_99
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #28
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #28
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd103) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd103) && _s71_id163))
#20789
#Lemmas = 102
[RES_1]       100	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.9603
---------------------------------------------------------------------------------------------
Loop_1_0_100
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #27
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #27
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd104) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd104) && _s71_id163))
#20797
#Lemmas = 103
[RES_1]       101	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.964205
---------------------------------------------------------------------------------------------
Loop_1_0_101
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd105) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd105) && _s71_id163))
#20805
#Lemmas = 104
[RES_1]       102	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.968009
---------------------------------------------------------------------------------------------
Loop_1_0_102
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd106) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd106) && _s71_id163))
#20816
#Lemmas = 105
[RES_1]       103	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.971821
---------------------------------------------------------------------------------------------
Loop_1_0_103
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd107) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd107) && _s71_id163))
#20827
#Lemmas = 106
[RES_1]       104	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.975516
---------------------------------------------------------------------------------------------
Loop_1_0_104
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd108) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd108) && _s71_id163))
#20835
#Lemmas = 107
[RES_1]       105	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.979095
---------------------------------------------------------------------------------------------
Loop_1_0_105
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd109) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd109) && _s71_id163))
#20846
#Lemmas = 108
[RES_1]       106	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.982748
---------------------------------------------------------------------------------------------
Loop_1_0_106
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 14)
		(cc core: 14 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd110) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd110) && _s71_id163))
#20857
#Lemmas = 109
[RES_1]       107	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.986341
---------------------------------------------------------------------------------------------
Loop_1_0_107
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #20
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #20
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd111) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd111) && _s71_id163))
#20870
#Lemmas = 110
[RES_1]       108	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.989925
---------------------------------------------------------------------------------------------
Loop_1_0_108
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #19
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #19
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd112) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd112) && _s71_id163))
#20883
#Lemmas = 111
[RES_1]       109	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.993426
---------------------------------------------------------------------------------------------
Loop_1_0_109
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #18
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #18
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd113) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd113) && _s71_id163))
#20891
#Lemmas = 112
[RES_1]       110	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 0.996793
---------------------------------------------------------------------------------------------
Loop_1_0_110
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #17
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #17
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd114) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd114) && _s71_id163))
#20899
#Lemmas = 113
[RES_1]       111	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.00011
---------------------------------------------------------------------------------------------
Loop_1_0_111
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #16
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #16
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd115) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd115) && _s71_id163))
#20907
#Lemmas = 114
[RES_1]       112	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.00341
---------------------------------------------------------------------------------------------
Loop_1_0_112
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #15
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #15
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd116) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd116) && _s71_id163))
#20915
#Lemmas = 115
[RES_1]       113	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.00663
---------------------------------------------------------------------------------------------
Loop_1_0_113
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #14
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #14
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd117) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd117) && _s71_id163))
#20923
#Lemmas = 116
[RES_1]       114	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.01009
---------------------------------------------------------------------------------------------
Loop_1_0_114
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #13
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #13
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd118) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd118) && _s71_id163))
#20931
#Lemmas = 117
[RES_1]       115	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.01327
---------------------------------------------------------------------------------------------
Loop_1_0_115
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #12
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #12
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd119) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd119) && _s71_id163))
#20939
#Lemmas = 118
[RES_1]       116	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.01639
---------------------------------------------------------------------------------------------
Loop_1_0_116
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #11
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #11
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd120) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd120) && _s71_id163))
#20947
#Lemmas = 119
[RES_1]       117	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.01946
---------------------------------------------------------------------------------------------
Loop_1_0_117
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd121) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd121) && _s71_id163))
#20955
#Lemmas = 120
[RES_1]       118	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.02251
---------------------------------------------------------------------------------------------
Loop_1_0_118
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd122) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd122) && _s71_id163))
#20963
#Lemmas = 121
[RES_1]       119	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.02548
---------------------------------------------------------------------------------------------
Loop_1_0_119
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd123) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd123) && _s71_id163))
#20971
#Lemmas = 122
[RES_1]       120	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.02841
---------------------------------------------------------------------------------------------
Loop_1_0_120
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd124) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd124) && _s71_id163))
#20979
#Lemmas = 123
[RES_1]       121	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.03135
---------------------------------------------------------------------------------------------
Loop_1_0_121
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd125) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd125) && _s71_id163))
#20987
#Lemmas = 124
[RES_1]       122	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.03419
---------------------------------------------------------------------------------------------
Loop_1_0_122
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd126) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd126) && _s71_id163))
#20995
#Lemmas = 125
[RES_1]       123	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.03706
---------------------------------------------------------------------------------------------
Loop_1_0_123
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd127) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd127) && _s71_id163))
#21003
#Lemmas = 126
[RES_1]       124	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.03978
---------------------------------------------------------------------------------------------
Loop_1_0_124
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd128) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd128) && _s71_id163))
#21011
#Lemmas = 127
[RES_1]       125	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.04245
---------------------------------------------------------------------------------------------
Loop_1_0_125
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd129) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd129) && _s71_id163))
#21019
#Lemmas = 128
[RES_1]       126	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.04508
---------------------------------------------------------------------------------------------
Loop_1_0_126
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))

	[Concrete check]:

[ ACEXT ]: (Length: 2)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 13)
		(cc core: 13 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd130) && _s71_id163)

	[Lemmas]: 
		[1] !(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd130) && _s71_id163))
#21027
#Lemmas = 129
[RES_1]       127	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 55, time: 1.04768
---------------------------------------------------------------------------------------------
Loop_1_0_127
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 5 -> 1)
	(138 + 5 -> 138 + 1)
	(5 -> 1 -> 1)
	(5 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s36_Sta_reg_Proc_1_CacheState == 2'd2)
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 1	: 0 1 s: 1
[RES_0]    L  1 : 0 2 s: 2, mem: 55, time: 1.04864
---------------------------------------------------------------------------------------------
Loop_1_1_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 5 -> 1)
	(141 + 5 -> 141 + 1)
	(5 -> 1 -> 1)
	(5 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData)
		[1] w2	((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 1	: 0 2 s: 2
[RES_0]    L  1 : 0 4 s: 4, mem: 55, time: 1.05146
---------------------------------------------------------------------------------------------
Loop_1_2_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 1)
	(142 + 7 -> 142 + 1)
	(7 -> 1 -> 1)
	(7 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData)
		[1] w2	((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 1	: 0 3 s: 3
[RES_0]    L  1 : 0 6 s: 6, mem: 55, time: 1.05283
---------------------------------------------------------------------------------------------
Loop_1_3_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 5 -> 1)
	(143 + 5 -> 143 + 1)
	(5 -> 1 -> 1)
	(5 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s40_Sta_reg_Proc_2_CacheState == 2'd2)
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 1	: 0 4 s: 4
[RES_0]    L  1 : 0 8 s: 8, mem: 55, time: 1.05436
---------------------------------------------------------------------------------------------
Loop_1_4_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: UNSAT
[RES_1]       127	: 1	: 0 4 s: 4
[RES_0]    L  1 : 0 8 s: 8, mem: 55, time: 1.05439
	[Forward propagation]:
[RES_1]       127	: 2	: 0 4 0 s: 4
[RES_0]    L  2 : 0 8 0 s: 8, mem: 55, time: 1.0635
---------------------------------------------------------------------------------------------
Loop_2_0_127
---------------------------------------------------------------------------------------------
	F[2] = P
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(140 + 5 -> 140 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s40_Sta_reg_Proc_2_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState))
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 2	: 0 4 1 s: 5
[RES_0]    L  2 : 0 8 3 s: 11, mem: 55, time: 1.07992
---------------------------------------------------------------------------------------------
Loop_2_1_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(143 + 6 -> 143 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s18_Sta_reg_HomeProc_CacheState == 2'd2)
		[1] w2	((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(145 + 4 -> 145 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData)
		[1] w2	((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 4 -> 1)
	(147 + 4 -> 147 + 1)
	(4 -> 1 -> 1)
	(4 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData)
		[1] w2	((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(149 + 6 -> 149 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData)
		[1] w2	((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 1)
	(148 + 5 -> 148 + 1)
	(5 -> 1 -> 1)
	(5 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData)
		[1] w2	((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 2	: 0 7 2 s: 9
[RES_0]    L  2 : 0 14 5 s: 19, mem: 55, time: 1.10904
---------------------------------------------------------------------------------------------
Loop_2_2_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 1)
	(152 + 7 -> 152 + 1)
	(7 -> 1 -> 1)
	(7 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData)
		[1] w2	((_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(151 + 7 -> 151 + 2)
	(7 -> 2 -> 1)
	(7 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData)
		[1] w2	((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 2	: 0 7 3 s: 10
[RES_0]    L  2 : 0 14 7 s: 21, mem: 55, time: 1.13114
---------------------------------------------------------------------------------------------
Loop_2_3_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 1)
	(155 + 7 -> 155 + 1)
	(7 -> 1 -> 1)
	(7 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData)
		[1] w2	((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 1)
	(157 + 7 -> 157 + 1)
	(7 -> 1 -> 1)
	(7 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData)
		[1] w2	((_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(155 + 7 -> 155 + 2)
	(7 -> 2 -> 1)
	(7 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData)
		[1] w2	((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 2	: 0 8 4 s: 12
[RES_0]    L  2 : 0 16 9 s: 25, mem: 55, time: 1.1642
---------------------------------------------------------------------------------------------
Loop_2_4_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(157 + 5 -> 157 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 2	: 0 8 5 s: 13
[RES_0]    L  2 : 0 16 12 s: 28, mem: 55, time: 1.18586
---------------------------------------------------------------------------------------------
Loop_2_5_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(158 + 5 -> 158 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 2	: 0 8 6 s: 14
[RES_0]    L  2 : 0 16 15 s: 31, mem: 55, time: 1.20821
---------------------------------------------------------------------------------------------
Loop_2_6_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: UNSAT
[RES_1]       127	: 2	: 0 8 6 s: 14
[RES_0]    L  2 : 0 16 15 s: 31, mem: 55, time: 1.20827
	[Forward propagation]:
[RES_1]       127	: 3	: 0 3 11 0 s: 14
[RES_0]    L  3 : 0 6 25 0 s: 31, mem: 55, time: 1.2508
---------------------------------------------------------------------------------------------
Loop_3_0_127
---------------------------------------------------------------------------------------------
	F[3] = P
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(158 + 6 -> 158 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4)
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(167 + 5 -> 167 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(158 + 6 -> 158 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3)
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 1)
	(171 + 5 -> 171 + 1)
	(5 -> 1 -> 1)
	(5 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s36_Sta_reg_Proc_1_CacheState == 2'd2)
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(173 + 5 -> 173 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(150 + 5 -> 150 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s40_Sta_reg_Proc_2_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState))
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       127	: 3	: 0 4 12 1 s: 17
[RES_0]    L  3 : 0 8 27 3 s: 38, mem: 56, time: 1.35278
---------------------------------------------------------------------------------------------
Loop_3_1_127
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #118
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #118
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(161 + 13 -> 161 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s20_Sta_reg_HomeProc_ProcCmd == 2'd1)
		[1] w2	((_s20_Sta_reg_HomeProc_ProcCmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #118
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #118
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 16 -> 1)
	(161 + 16 -> 161 + 1)
	(16 -> 1 -> 1)
	(16 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s20_Sta_reg_HomeProc_ProcCmd != _s18_Sta_reg_HomeProc_CacheState)
		[1] w2	((_s20_Sta_reg_HomeProc_ProcCmd != _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #118
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #118
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(161 + 13 -> 161 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s29_Sta_reg_MemData != 2'd2) && (_s29_Sta_reg_MemData != 2'd1))
		[1] w2	((_s29_Sta_reg_MemData != 2'd2) && (_s29_Sta_reg_MemData != 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(178 + 6 -> 178 + 4)
	(6 -> 4 -> 2)
	(6 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s29_Sta_reg_MemData != 2'd2) && (_s29_Sta_reg_MemData != 2'd1))
		[1] w2	((_s29_Sta_reg_MemData != 2'd2) && (_s29_Sta_reg_MemData != 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #118
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #118
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding required pred. from inp_c to ab. cube) #130
	(adding pred. from inp_c to cc. cube) #130
	(abstract cube) 2	(1 + 1 + 0 + 0 + 0)
	(concrete cube) 2	(1 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s1_Sta_reg_Dir_Dirty$next == _s1_Sta_reg_Dir_Dirty$next_rhs) && (_s11_Sta_reg_Dir_Pending$next == _s11_Sta_reg_Dir_Pending$next_rhs) && (_s18_Sta_reg_HomeProc_CacheState$next == w$148) && (_s19_Sta_reg_HomeProc_InvMarked$next == _s19_Sta_reg_HomeProc_InvMarked$next_rhs) && (_s20_Sta_reg_HomeProc_ProcCmd$next == _s20_Sta_reg_HomeProc_ProcCmd$next_rhs) && (_s29_Sta_reg_MemData$next == _s29_Sta_reg_MemData$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 6)
UNSAT

		[MUS(s)]:
		[1] ((_s18_Sta_reg_HomeProc_CacheState$next == 2'd2) && (_i1_io_en_a == 8'd13) && !(ReductionOr_1_2(_s18_Sta_reg_HomeProc_CacheState)) && (_s18_Sta_reg_HomeProc_CacheState$next == w$148))

	[Lemmas]: 
		[1] !(((_s18_Sta_reg_HomeProc_CacheState$next == 2'd2) && (_i1_io_en_a == 8'd13) && !(ReductionOr_1_2(_s18_Sta_reg_HomeProc_CacheState)) && (_s18_Sta_reg_HomeProc_CacheState$next == w$148)))
#21398
#Lemmas = 130
[RES_1]       128	: 3	: 0 6 13 1 s: 20
[RES_0]    L  3 : 0 12 30 3 s: 45, mem: 60, time: 1.58798
---------------------------------------------------------------------------------------------
Loop_3_0_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 5 -> 1)
	(162 + 5 -> 162 + 1)
	(5 -> 1 -> 1)
	(5 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3)
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 5 -> 1)
	(162 + 5 -> 162 + 1)
	(5 -> 1 -> 1)
	(5 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4)
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(182 + 5 -> 182 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(162 + 6 -> 162 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s58_Sta_reg_UniMsg_2_Cmd == 3'd3)
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 1)
	(162 + 6 -> 162 + 1)
	(6 -> 1 -> 1)
	(6 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4)
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 1)
	(185 + 5 -> 185 + 1)
	(5 -> 1 -> 1)
	(5 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s40_Sta_reg_Proc_2_CacheState == 2'd2)
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #110
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #110
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 9 -> 5)
	(189 + 9 -> 189 + 5)
	(9 -> 5 -> 3)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next == _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s17_Sta_reg_HomeProc_CacheData$next)
		(added cond. from num.)	(_s0_Sta_reg_CurrData$next != _s17_Sta_reg_HomeProc_CacheData$next)
	(9 -> 5 -> 6 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData))
		[1] w2	((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(159 + 5 -> 159 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 3	: 0 9 13 2 s: 24
[RES_0]    L  3 : 0 18 29 6 s: 53, mem: 60, time: 1.92796
---------------------------------------------------------------------------------------------
Loop_3_1_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(161 + 7 -> 161 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 3	: 0 9 13 3 s: 25
[RES_0]    L  3 : 0 18 29 9 s: 56, mem: 60, time: 1.9473
---------------------------------------------------------------------------------------------
Loop_3_2_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(192 + 5 -> 192 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(194 + 5 -> 194 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(165 + 5 -> 165 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 3	: 0 9 15 4 s: 28
[RES_0]    L  3 : 0 18 35 12 s: 65, mem: 60, time: 2.14128
---------------------------------------------------------------------------------------------
Loop_3_3_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(167 + 7 -> 167 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 3	: 0 9 15 5 s: 29
[RES_0]    L  3 : 0 18 35 15 s: 68, mem: 60, time: 2.17711
---------------------------------------------------------------------------------------------
Loop_3_4_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(197 + 5 -> 197 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(198 + 5 -> 198 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(170 + 5 -> 170 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 3	: 0 9 17 6 s: 32
[RES_0]    L  3 : 0 18 41 18 s: 77, mem: 60, time: 2.39649
---------------------------------------------------------------------------------------------
Loop_3_5_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: UNSAT
[RES_1]       128	: 3	: 0 9 17 6 s: 32
[RES_0]    L  3 : 0 18 41 18 s: 77, mem: 60, time: 2.39656
	[Forward propagation]:
[RES_1]       128	: 4	: 0 7 15 9 1 s: 32
[RES_0]    L  4 : 0 14 35 25 3 s: 77, mem: 60, time: 2.65732
---------------------------------------------------------------------------------------------
Loop_4_0_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(207 + 6 -> 207 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next == _s58_Sta_reg_UniMsg_2_Cmd$next)
	(6 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s54_Sta_reg_UniMsg_1_Cmd == _s58_Sta_reg_UniMsg_2_Cmd))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s54_Sta_reg_UniMsg_1_Cmd == _s58_Sta_reg_UniMsg_2_Cmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(208 + 6 -> 208 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(182 + 5 -> 182 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(210 + 6 -> 210 + 3)
	(6 -> 3 -> 2)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
	(6 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(186 + 5 -> 186 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(212 + 6 -> 212 + 3)
	(6 -> 3 -> 2)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next == _s58_Sta_reg_UniMsg_2_Cmd$next)
	(6 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == _s58_Sta_reg_UniMsg_2_Cmd))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == _s58_Sta_reg_UniMsg_2_Cmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(189 + 5 -> 189 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(191 + 5 -> 191 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(152 + 5 -> 152 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s40_Sta_reg_Proc_2_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 4	: 0 7 19 13 2 s: 41
[RES_0]    L  4 : 0 14 47 37 6 s: 104, mem: 62, time: 3.17397
---------------------------------------------------------------------------------------------
Loop_4_1_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #97
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #97
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 1)
	(165 + 10 -> 165 + 1)
	(10 -> 1 -> 1)
	(10 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s58_Sta_reg_UniMsg_2_Cmd == 3'd1)
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(217 + 6 -> 217 + 3)
	(6 -> 3 -> 1)
	(6 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s58_Sta_reg_UniMsg_2_Cmd == 3'd3)
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(218 + 6 -> 218 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	(!(_s1_Sta_reg_Dir_Dirty) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(195 + 5 -> 195 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #113
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #113
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 11 -> 1)
	(165 + 11 -> 165 + 1)
	(11 -> 1 -> 1)
	(11 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) _s62_Sta_reg_WbMsg_Cmd
		[1] w1	(_s62_Sta_reg_WbMsg_Cmd && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(223 + 5 -> 223 + 2)
	(5 -> 2 -> 1)
	(5 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) _s62_Sta_reg_WbMsg_Cmd
		[1] w1	(_s62_Sta_reg_WbMsg_Cmd && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(165 + 12 -> 165 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1)
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(227 + 5 -> 227 + 3)
	(5 -> 3 -> 1)
	(5 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1)
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(198 + 5 -> 198 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #127
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #127
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #98
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #98
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 1)
	(167 + 10 -> 167 + 1)
	(10 -> 1 -> 1)
	(10 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s54_Sta_reg_UniMsg_1_Cmd == 3'd1)
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(230 + 6 -> 230 + 3)
	(6 -> 3 -> 1)
	(6 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3)
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(231 + 6 -> 231 + 4)
	(6 -> 4 -> 2)
	(6 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	(!(_s1_Sta_reg_Dir_Dirty) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(201 + 5 -> 201 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(204 + 4 -> 204 + 2)
	(4 -> 2 -> 1)
	(4 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) _s62_Sta_reg_WbMsg_Cmd
		[1] w1	(_s62_Sta_reg_WbMsg_Cmd && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(207 + 6 -> 207 + 2)
	(6 -> 2 -> 1)
	(6 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1)
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(161 + 5 -> 161 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 4	: 0 7 17 17 3 s: 44
[RES_0]    L  4 : 0 14 39 47 9 s: 109, mem: 63, time: 3.97164
---------------------------------------------------------------------------------------------
Loop_4_2_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(209 + 7 -> 209 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd3))
		[1] w3	((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(211 + 7 -> 211 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	((_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(165 + 7 -> 165 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 4	: 0 7 17 18 4 s: 46
[RES_0]    L  4 : 0 14 39 50 12 s: 115, mem: 63, time: 4.22444
---------------------------------------------------------------------------------------------
Loop_4_3_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(213 + 5 -> 213 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(214 + 5 -> 214 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(169 + 5 -> 169 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 4	: 0 7 16 19 5 s: 47
[RES_0]    L  4 : 0 14 36 53 15 s: 118, mem: 63, time: 4.60729
---------------------------------------------------------------------------------------------
Loop_4_4_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(217 + 7 -> 217 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(218 + 7 -> 218 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3))
		[1] w3	((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(173 + 7 -> 173 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 4	: 0 7 16 20 6 s: 49
[RES_0]    L  4 : 0 14 36 56 18 s: 124, mem: 63, time: 4.83762
---------------------------------------------------------------------------------------------
Loop_4_5_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(220 + 5 -> 220 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(221 + 5 -> 221 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(176 + 5 -> 176 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 4	: 0 7 15 21 7 s: 50
[RES_0]    L  4 : 0 14 33 59 21 s: 127, mem: 63, time: 5.23953
---------------------------------------------------------------------------------------------
Loop_4_6_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: UNSAT
[RES_1]       128	: 4	: 0 7 15 21 7 s: 50
[RES_0]    L  4 : 0 14 33 59 21 s: 127, mem: 63, time: 5.23961
	[Forward propagation]:
[RES_1]       128	: 5	: 0 7 12 18 13 0 s: 50
[RES_0]    L  5 : 0 14 24 50 39 0 s: 127, mem: 64, time: 5.8223
---------------------------------------------------------------------------------------------
Loop_5_0_128
---------------------------------------------------------------------------------------------
	F[5] = P
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(232 + 6 -> 232 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next == _s58_Sta_reg_UniMsg_2_Cmd$next)
	(6 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s54_Sta_reg_UniMsg_1_Cmd == _s58_Sta_reg_UniMsg_2_Cmd))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s54_Sta_reg_UniMsg_1_Cmd == _s58_Sta_reg_UniMsg_2_Cmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(233 + 6 -> 233 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(190 + 5 -> 190 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(235 + 6 -> 235 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(194 + 5 -> 194 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(196 + 5 -> 196 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(198 + 5 -> 198 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(154 + 5 -> 154 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s40_Sta_reg_Proc_2_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       128	: 5	: 0 7 12 17 16 1 s: 53
[RES_0]    L  5 : 0 14 24 47 48 3 s: 136, mem: 64, time: 6.74073
---------------------------------------------------------------------------------------------
Loop_5_1_128
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(202 + 6 -> 202 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1))
		[1] w2	((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(203 + 6 -> 203 + 4)
	(6 -> 4 -> 3)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s29_Sta_reg_MemData$next)
	(6 -> 4 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s29_Sta_reg_MemData != 2'd1) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState != _s29_Sta_reg_MemData))
		[1] w2	((_s29_Sta_reg_MemData != 2'd1) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState != _s29_Sta_reg_MemData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #24
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #24
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #93
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #93
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(270 + 11 -> 270 + 3)
	(11 -> 3 -> 2)
	(11 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #97
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #97
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #120
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #120
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(167 + 12 -> 167 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2)
		[1] w2	((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #120
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #120
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(167 + 13 -> 167 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s42_Sta_reg_Proc_2_ProcCmd != _s40_Sta_reg_Proc_2_CacheState)
		[1] w2	((_s42_Sta_reg_Proc_2_ProcCmd != _s40_Sta_reg_Proc_2_CacheState) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #120
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #120
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(167 + 12 -> 167 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) _s3_Sta_reg_Dir_HeadVld
		[1] w1	(_s3_Sta_reg_Dir_HeadVld && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(275 + 10 -> 275 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s3_Sta_reg_Dir_HeadVld && !(_s1_Sta_reg_Dir_Dirty))
		[1] w1	(_s3_Sta_reg_Dir_HeadVld && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #95
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #95
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #120
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #120
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding required pred. from inp_c to ab. cube) #130
	(adding pred. from inp_c to cc. cube) #130
	(abstract cube) 2	(1 + 1 + 0 + 0 + 0)
	(concrete cube) 2	(1 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s1_Sta_reg_Dir_Dirty$next == _s1_Sta_reg_Dir_Dirty$next_rhs) && (_s3_Sta_reg_Dir_HeadVld$next == _s3_Sta_reg_Dir_HeadVld$next_rhs) && (_s11_Sta_reg_Dir_Pending$next == _s11_Sta_reg_Dir_Pending$next_rhs) && (_s29_Sta_reg_MemData$next == _s29_Sta_reg_MemData$next_rhs) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225) && (_s41_Sta_reg_Proc_2_InvMarked$next == _s41_Sta_reg_Proc_2_InvMarked$next_rhs) && (_s42_Sta_reg_Proc_2_ProcCmd$next == _s42_Sta_reg_Proc_2_ProcCmd$next_rhs) && (_s45_Sta_reg_RpMsg_2_Cmd$next == _s45_Sta_reg_RpMsg_2_Cmd$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 16)
		(cc core: 16 -> 7)
UNSAT

		[MUS(s)]:
		[1] ((_s40_Sta_reg_Proc_2_CacheState$next == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_i1_io_en_a == 8'd107) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225))

	[Lemmas]: 
		[1] !(((_s40_Sta_reg_Proc_2_CacheState$next == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_i1_io_en_a == 8'd107) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))
#21913
#Lemmas = 131
[RES_1]       129	: 5	: 0 10 14 17 18 1 s: 60
[RES_0]    L  5 : 0 20 30 47 55 3 s: 155, mem: 67, time: 7.35936
---------------------------------------------------------------------------------------------
Loop_5_0_129
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(205 + 5 -> 205 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #127
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #127
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(206 + 6 -> 206 + 4)
	(6 -> 4 -> 3)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next != _s29_Sta_reg_MemData$next)
	(6 -> 4 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s29_Sta_reg_MemData != 2'd1) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState != _s29_Sta_reg_MemData))
		[1] w2	((_s29_Sta_reg_MemData != 2'd1) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState != _s29_Sta_reg_MemData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #127
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #127
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #25
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #25
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #96
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #96
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #121
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #121
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(168 + 12 -> 168 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2)
		[1] w2	((_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #121
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #121
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(168 + 13 -> 168 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s38_Sta_reg_Proc_1_ProcCmd != _s36_Sta_reg_Proc_1_CacheState)
		[1] w2	((_s38_Sta_reg_Proc_1_ProcCmd != _s36_Sta_reg_Proc_1_CacheState) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #121
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #121
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding required pred. from inp_c to ab. cube) #130
	(adding pred. from inp_c to cc. cube) #130
	(abstract cube) 2	(1 + 1 + 0 + 0 + 0)
	(concrete cube) 2	(1 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s1_Sta_reg_Dir_Dirty$next == _s1_Sta_reg_Dir_Dirty$next_rhs) && (_s3_Sta_reg_Dir_HeadVld$next == _s3_Sta_reg_Dir_HeadVld$next_rhs) && (_s11_Sta_reg_Dir_Pending$next == _s11_Sta_reg_Dir_Pending$next_rhs) && (_s29_Sta_reg_MemData$next == _s29_Sta_reg_MemData$next_rhs) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s37_Sta_reg_Proc_1_InvMarked$next == _s37_Sta_reg_Proc_1_InvMarked$next_rhs) && (_s38_Sta_reg_Proc_1_ProcCmd$next == _s38_Sta_reg_Proc_1_ProcCmd$next_rhs) && (_s44_Sta_reg_RpMsg_1_Cmd$next == _s44_Sta_reg_RpMsg_1_Cmd$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 16)
		(cc core: 16 -> 7)
UNSAT

		[MUS(s)]:
		[1] ((_s36_Sta_reg_Proc_1_CacheState$next == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_i1_io_en_a == 8'd106) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194))

	[Lemmas]: 
		[1] !(((_s36_Sta_reg_Proc_1_CacheState$next == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_i1_io_en_a == 8'd106) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194)))
#21975
#Lemmas = 132
[RES_1]       130	: 5	: 0 12 14 16 20 1 s: 63
[RES_0]    L  5 : 0 24 30 44 62 3 s: 163, mem: 68, time: 7.74729
---------------------------------------------------------------------------------------------
Loop_5_0_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #127
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #127
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(208 + 5 -> 208 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(211 + 4 -> 211 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(214 + 4 -> 214 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd)
		[1] w2	((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(167 + 5 -> 167 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 5	: 0 12 14 15 22 2 s: 65
[RES_0]    L  5 : 0 24 30 41 68 6 s: 169, mem: 68, time: 7.93822
---------------------------------------------------------------------------------------------
Loop_5_1_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(252 + 7 -> 252 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s59_Sta_reg_UniMsg_2_Data != 2'd1) && (_s59_Sta_reg_UniMsg_2_Data != 2'd2))
		[1] w2	((_s59_Sta_reg_UniMsg_2_Data != 2'd1) && (_s59_Sta_reg_UniMsg_2_Data != 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 4)
	(218 + 7 -> 218 + 4)
	(7 -> 4 -> 4)
	(7 -> 4 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != 2'd2) && (_s59_Sta_reg_UniMsg_2_Data != 2'd2) && (_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	((_s0_Sta_reg_CurrData != 2'd2) && (_s59_Sta_reg_UniMsg_2_Data != 2'd2) && (_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 4)
	(170 + 7 -> 170 + 4)
	(7 -> 4 -> 4)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s39_Sta_reg_Proc_2_CacheData$next)
	(7 -> 4 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState != _s0_Sta_reg_CurrData) && (_s40_Sta_reg_Proc_2_CacheState != _s39_Sta_reg_Proc_2_CacheData))
		[1] w2	((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState != _s0_Sta_reg_CurrData) && (_s40_Sta_reg_Proc_2_CacheState != _s39_Sta_reg_Proc_2_CacheData) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 5	: 0 12 14 16 23 3 s: 68
[RES_0]    L  5 : 0 24 30 44 73 11 s: 182, mem: 68, time: 8.47827
---------------------------------------------------------------------------------------------
Loop_5_2_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(255 + 6 -> 255 + 3)
	(6 -> 3 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s42_Sta_reg_Proc_2_ProcCmd$next)
	(6 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s42_Sta_reg_Proc_2_ProcCmd))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s42_Sta_reg_Proc_2_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(221 + 6 -> 221 + 4)
	(6 -> 4 -> 4)
		(added cond. from num.)	(_s42_Sta_reg_Proc_2_ProcCmd$next == _s59_Sta_reg_UniMsg_2_Data$next)
		(added cond. from num.)	(_s42_Sta_reg_Proc_2_ProcCmd$next != _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s59_Sta_reg_UniMsg_2_Data$next != _s0_Sta_reg_CurrData$next)
	(6 -> 4 -> 7 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s42_Sta_reg_Proc_2_ProcCmd == _s59_Sta_reg_UniMsg_2_Data) && (_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData))
		[1] w3	((_s0_Sta_reg_CurrData != 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s42_Sta_reg_Proc_2_ProcCmd == _s59_Sta_reg_UniMsg_2_Data) && (_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(172 + 7 -> 172 + 3)
	(7 -> 3 -> 3)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s39_Sta_reg_Proc_2_CacheData$next)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s0_Sta_reg_CurrData$next != _s39_Sta_reg_Proc_2_CacheData$next)
	(7 -> 3 -> 6 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState != _s0_Sta_reg_CurrData) && (_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState != _s0_Sta_reg_CurrData) && (_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 5	: 0 12 14 17 24 3 s: 70
[RES_0]    L  5 : 0 24 30 47 78 10 s: 189, mem: 68, time: 9.31862
---------------------------------------------------------------------------------------------
Loop_5_3_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(223 + 6 -> 223 + 4)
	(6 -> 4 -> 4)
		(added cond. from num.)	(_s42_Sta_reg_Proc_2_ProcCmd$next == _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s42_Sta_reg_Proc_2_ProcCmd$next != _s59_Sta_reg_UniMsg_2_Data$next)
		(added cond. from num.)	(_s59_Sta_reg_UniMsg_2_Data$next != _s0_Sta_reg_CurrData$next)
	(6 -> 4 -> 7 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData))
		[1] w3	((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(174 + 7 -> 174 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 5	: 0 12 14 17 24 3 s: 70
[RES_0]    L  5 : 0 24 30 47 79 9 s: 189, mem: 68, time: 10.1746
---------------------------------------------------------------------------------------------
Loop_5_4_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(226 + 5 -> 226 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(227 + 4 -> 227 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(178 + 5 -> 178 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 5	: 0 12 14 17 25 4 s: 72
[RES_0]    L  5 : 0 24 30 47 82 12 s: 195, mem: 68, time: 10.4634
---------------------------------------------------------------------------------------------
Loop_5_5_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #127
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #127
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(263 + 7 -> 263 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s55_Sta_reg_UniMsg_1_Data != 2'd1) && (_s55_Sta_reg_UniMsg_1_Data != 2'd2))
		[1] w2	((_s55_Sta_reg_UniMsg_1_Data != 2'd1) && (_s55_Sta_reg_UniMsg_1_Data != 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 4)
	(231 + 7 -> 231 + 4)
	(7 -> 4 -> 4)
	(7 -> 4 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s55_Sta_reg_UniMsg_1_Data != 2'd2) && (_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData) && (_s0_Sta_reg_CurrData != 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s55_Sta_reg_UniMsg_1_Data != 2'd2) && (_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData) && (_s0_Sta_reg_CurrData != 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 4)
	(181 + 7 -> 181 + 4)
	(7 -> 4 -> 4)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next != _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next != _s35_Sta_reg_Proc_1_CacheData$next)
	(7 -> 4 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState != _s0_Sta_reg_CurrData) && (_s36_Sta_reg_Proc_1_CacheState != _s35_Sta_reg_Proc_1_CacheData))
		[1] w2	((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState != _s0_Sta_reg_CurrData) && (_s36_Sta_reg_Proc_1_CacheState != _s35_Sta_reg_Proc_1_CacheData) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 5	: 0 12 14 18 26 5 s: 75
[RES_0]    L  5 : 0 24 30 50 87 17 s: 208, mem: 68, time: 11.0951
---------------------------------------------------------------------------------------------
Loop_5_6_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #127
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #127
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(266 + 6 -> 266 + 3)
	(6 -> 3 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s38_Sta_reg_Proc_1_ProcCmd$next)
	(6 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s38_Sta_reg_Proc_1_ProcCmd))
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s38_Sta_reg_Proc_1_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(234 + 6 -> 234 + 4)
	(6 -> 4 -> 4)
		(added cond. from num.)	(_s38_Sta_reg_Proc_1_ProcCmd$next == _s55_Sta_reg_UniMsg_1_Data$next)
		(added cond. from num.)	(_s38_Sta_reg_Proc_1_ProcCmd$next != _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s55_Sta_reg_UniMsg_1_Data$next != _s0_Sta_reg_CurrData$next)
	(6 -> 4 -> 7 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s38_Sta_reg_Proc_1_ProcCmd == _s55_Sta_reg_UniMsg_1_Data) && (_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData))
		[1] w3	((_s0_Sta_reg_CurrData != 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s38_Sta_reg_Proc_1_ProcCmd == _s55_Sta_reg_UniMsg_1_Data) && (_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(183 + 7 -> 183 + 3)
	(7 -> 3 -> 3)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s35_Sta_reg_Proc_1_CacheData$next)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next != _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s0_Sta_reg_CurrData$next != _s35_Sta_reg_Proc_1_CacheData$next)
	(7 -> 3 -> 6 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState != _s0_Sta_reg_CurrData) && (_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData))
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState != _s0_Sta_reg_CurrData) && (_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 5	: 0 12 14 19 27 5 s: 77
[RES_0]    L  5 : 0 24 30 53 92 16 s: 215, mem: 68, time: 12.0213
---------------------------------------------------------------------------------------------
Loop_5_7_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(236 + 6 -> 236 + 4)
	(6 -> 4 -> 4)
		(added cond. from num.)	(_s38_Sta_reg_Proc_1_ProcCmd$next == _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s38_Sta_reg_Proc_1_ProcCmd$next != _s55_Sta_reg_UniMsg_1_Data$next)
		(added cond. from num.)	(_s55_Sta_reg_UniMsg_1_Data$next != _s0_Sta_reg_CurrData$next)
	(6 -> 4 -> 7 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData))
		[1] w3	((_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(185 + 7 -> 185 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 5	: 0 12 14 19 27 5 s: 77
[RES_0]    L  5 : 0 24 30 53 93 15 s: 215, mem: 68, time: 12.8484
---------------------------------------------------------------------------------------------
Loop_5_8_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(238 + 5 -> 238 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(239 + 4 -> 239 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(188 + 5 -> 188 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 5	: 0 12 14 19 29 6 s: 80
[RES_0]    L  5 : 0 24 30 53 99 18 s: 224, mem: 68, time: 13.1429
---------------------------------------------------------------------------------------------
Loop_5_9_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: UNSAT
[RES_1]       130	: 5	: 0 12 14 19 29 6 s: 80
[RES_0]    L  5 : 0 24 30 53 99 18 s: 224, mem: 68, time: 13.143
	[Forward propagation]:
[RES_1]       130	: 6	: 0 12 14 19 27 8 0 s: 80
[RES_0]    L  6 : 0 24 30 53 93 24 0 s: 224, mem: 68, time: 13.8503
---------------------------------------------------------------------------------------------
Loop_6_0_130
---------------------------------------------------------------------------------------------
	F[6] = P
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(214 + 6 -> 214 + 4)
	(6 -> 4 -> 4)
		(added cond. from num.)	(_s42_Sta_reg_Proc_2_ProcCmd$next == _s38_Sta_reg_Proc_1_ProcCmd$next)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next == _s58_Sta_reg_UniMsg_2_Cmd$next)
	(6 -> 4 -> 6 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s42_Sta_reg_Proc_2_ProcCmd == _s38_Sta_reg_Proc_1_ProcCmd) && (_s54_Sta_reg_UniMsg_1_Cmd == _s58_Sta_reg_UniMsg_2_Cmd))
		[1] w3	((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s42_Sta_reg_Proc_2_ProcCmd == _s38_Sta_reg_Proc_1_ProcCmd) && (_s54_Sta_reg_UniMsg_1_Cmd == _s58_Sta_reg_UniMsg_2_Cmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(183 + 5 -> 183 + 3)
	(5 -> 3 -> 3)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s38_Sta_reg_Proc_1_ProcCmd$next)
	(5 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s38_Sta_reg_Proc_1_ProcCmd))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s38_Sta_reg_Proc_1_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(186 + 5 -> 186 + 3)
	(5 -> 3 -> 3)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s42_Sta_reg_Proc_2_ProcCmd$next)
	(5 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s42_Sta_reg_Proc_2_ProcCmd))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s42_Sta_reg_Proc_2_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(149 + 5 -> 149 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s40_Sta_reg_Proc_2_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 6	: 0 12 14 19 28 9 1 s: 83
[RES_0]    L  6 : 0 24 30 53 98 29 3 s: 237, mem: 70, time: 14.7897
---------------------------------------------------------------------------------------------
Loop_6_1_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(218 + 6 -> 218 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(219 + 6 -> 219 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(190 + 6 -> 190 + 4)
	(6 -> 4 -> 2)
	(6 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(221 + 6 -> 221 + 4)
	(6 -> 4 -> 2)
	(6 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #82
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #82
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 9 -> 4)
	(237 + 9 -> 237 + 4)
	(9 -> 4 -> 2)
	(9 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s35_Sta_reg_Proc_1_CacheData != 2'd1) && (_s35_Sta_reg_Proc_1_CacheData != 2'd2))
		[1] w2	((_s35_Sta_reg_Proc_1_CacheData != 2'd1) && (_s35_Sta_reg_Proc_1_CacheData != 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #81
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #81
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 9 -> 4)
	(238 + 9 -> 238 + 4)
	(9 -> 4 -> 2)
	(9 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s39_Sta_reg_Proc_2_CacheData != 2'd1) && (_s39_Sta_reg_Proc_2_CacheData != 2'd2))
		[1] w2	((_s39_Sta_reg_Proc_2_CacheData != 2'd1) && (_s39_Sta_reg_Proc_2_CacheData != 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(224 + 6 -> 224 + 3)
	(6 -> 3 -> 3)
	(6 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Sta_reg_HomeUniMsg_Data != 2'd2) && (_s23_Sta_reg_HomeUniMsg_Data != 2'd1) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3))
		[1] w3	((_s23_Sta_reg_HomeUniMsg_Data != 2'd2) && (_s23_Sta_reg_HomeUniMsg_Data != 2'd1) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(225 + 6 -> 225 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(226 + 6 -> 226 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(195 + 6 -> 195 + 4)
	(6 -> 4 -> 4)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s29_Sta_reg_MemData$next)
	(6 -> 4 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s29_Sta_reg_MemData != 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState != _s29_Sta_reg_MemData))
		[1] w2	((_s29_Sta_reg_MemData != 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState != _s29_Sta_reg_MemData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #82
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #82
	(abstract cube) 8	(7 + 1 + 0 + 0 + 0)
	(concrete cube) 8	(7 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 9 -> 4)
	(263 + 9 -> 263 + 4)
	(9 -> 4 -> 2)
	(9 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 8 -> 4)
	(244 + 8 -> 244 + 4)
	(8 -> 4 -> 1)
	(8 -> 4 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s36_Sta_reg_Proc_1_CacheState == 2'd2)
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #81
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #81
	(abstract cube) 8	(7 + 1 + 0 + 0 + 0)
	(concrete cube) 8	(7 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 9 -> 4)
	(266 + 9 -> 266 + 4)
	(9 -> 4 -> 2)
	(9 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(246 + 8 -> 246 + 3)
	(8 -> 3 -> 1)
	(8 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s40_Sta_reg_Proc_2_CacheState == 2'd2)
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 5 -> 1)
	(230 + 5 -> 230 + 1)
	(5 -> 1 -> 1)
	(5 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3)
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(197 + 5 -> 197 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #127
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #127
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(232 + 6 -> 232 + 2)
	(6 -> 2 -> 1)
	(6 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1)
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(233 + 6 -> 233 + 2)
	(6 -> 2 -> 1)
	(6 -> 2 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) _s62_Sta_reg_WbMsg_Cmd
		[1] w1	(_s62_Sta_reg_WbMsg_Cmd && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(200 + 6 -> 200 + 4)
	(6 -> 4 -> 2)
	(6 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #110
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #110
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 9 -> 4)
	(204 + 9 -> 204 + 4)
	(9 -> 4 -> 4)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next == _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s17_Sta_reg_HomeProc_CacheData$next)
		(added cond. from num.)	(_s0_Sta_reg_CurrData$next != _s17_Sta_reg_HomeProc_CacheData$next)
	(9 -> 4 -> 7 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s11_Sta_reg_Dir_Pending && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData))
		[1] w2	(_s11_Sta_reg_Dir_Pending && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #94
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #94
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 9 -> 3)
	(238 + 9 -> 238 + 3)
	(9 -> 3 -> 1)
	(9 -> 3 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4)
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 6)
	(209 + 11 -> 209 + 6)
	(11 -> 6 -> 3)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next == _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s17_Sta_reg_HomeProc_CacheData$next)
		(added cond. from num.)	(_s0_Sta_reg_CurrData$next != _s17_Sta_reg_HomeProc_CacheData$next)
	(11 -> 6 -> 6 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData))
		[1] w2	((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(212 + 4 -> 212 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3))
		[1] w3	((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(215 + 6 -> 215 + 4)
	(6 -> 4 -> 2)
	(6 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1))
		[1] w2	((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(218 + 4 -> 218 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd)
		[1] w2	((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(162 + 5 -> 162 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 6	: 0 12 14 17 21 15 2 s: 81
[RES_0]    L  6 : 0 24 32 49 73 47 6 s: 231, mem: 72, time: 17.756
---------------------------------------------------------------------------------------------
Loop_6_2_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 4)
	(244 + 7 -> 244 + 4)
	(7 -> 4 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s42_Sta_reg_Proc_2_ProcCmd$next)
	(7 -> 4 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s42_Sta_reg_Proc_2_ProcCmd))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s42_Sta_reg_Proc_2_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 5)
	(222 + 7 -> 222 + 5)
	(7 -> 5 -> 3)
	(7 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	((_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(165 + 7 -> 165 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 6	: 0 12 14 17 21 15 3 s: 82
[RES_0]    L  6 : 0 24 32 49 72 48 9 s: 234, mem: 73, time: 18.1792
---------------------------------------------------------------------------------------------
Loop_6_3_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(225 + 5 -> 225 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(226 + 5 -> 226 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(227 + 4 -> 227 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(170 + 5 -> 170 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 6	: 0 12 14 17 20 17 4 s: 84
[RES_0]    L  6 : 0 24 32 49 69 54 12 s: 240, mem: 73, time: 18.7789
---------------------------------------------------------------------------------------------
Loop_6_4_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #127
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #127
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 5)
	(251 + 7 -> 251 + 5)
	(7 -> 5 -> 2)
	(7 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 5)
	(231 + 7 -> 231 + 5)
	(7 -> 5 -> 3)
	(7 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s55_Sta_reg_UniMsg_1_Data != _s0_Sta_reg_CurrData) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(173 + 7 -> 173 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	((_s0_Sta_reg_CurrData != _s35_Sta_reg_Proc_1_CacheData) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 6	: 0 12 14 17 20 17 5 s: 85
[RES_0]    L  6 : 0 24 32 49 68 55 15 s: 243, mem: 73, time: 19.3179
---------------------------------------------------------------------------------------------
Loop_6_5_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(233 + 5 -> 233 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(234 + 4 -> 234 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(235 + 5 -> 235 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(177 + 5 -> 177 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 6	: 0 12 14 17 19 19 6 s: 87
[RES_0]    L  6 : 0 24 32 49 65 61 18 s: 249, mem: 73, time: 19.7956
---------------------------------------------------------------------------------------------
Loop_6_6_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[6] & T & !P+ ]: UNSAT
[RES_1]       130	: 6	: 0 12 14 17 19 19 6 s: 87
[RES_0]    L  6 : 0 24 32 49 65 61 18 s: 249, mem: 73, time: 19.7957
	[Forward propagation]:
[RES_1]       130	: 7	: 0 12 14 12 13 18 9 1 s: 79
[RES_0]    L  7 : 0 24 32 34 37 55 27 3 s: 212, mem: 73, time: 21.4325
---------------------------------------------------------------------------------------------
Loop_7_0_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(253 + 6 -> 253 + 4)
	(6 -> 4 -> 3)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next == _s58_Sta_reg_UniMsg_2_Cmd$next)
	(6 -> 4 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == _s58_Sta_reg_UniMsg_2_Cmd))
		[1] w3	((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == _s58_Sta_reg_UniMsg_2_Cmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(192 + 5 -> 192 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(195 + 5 -> 195 + 3)
	(5 -> 3 -> 3)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s42_Sta_reg_Proc_2_ProcCmd$next)
	(5 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s42_Sta_reg_Proc_2_ProcCmd))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s42_Sta_reg_Proc_2_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(152 + 5 -> 152 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s40_Sta_reg_Proc_2_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s40_Sta_reg_Proc_2_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 7	: 0 12 14 12 13 18 10 2 s: 81
[RES_0]    L  7 : 0 24 32 34 37 56 31 6 s: 220, mem: 75, time: 22.3542
---------------------------------------------------------------------------------------------
Loop_7_1_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(257 + 6 -> 257 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(258 + 6 -> 258 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(199 + 6 -> 199 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #127
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #127
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(260 + 6 -> 260 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(261 + 6 -> 261 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(202 + 6 -> 202 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(263 + 6 -> 263 + 4)
	(6 -> 4 -> 2)
	(6 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(264 + 6 -> 264 + 3)
	(6 -> 3 -> 3)
	(6 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Sta_reg_HomeUniMsg_Data != 2'd2) && (_s23_Sta_reg_HomeUniMsg_Data != 2'd1) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3))
		[1] w3	((_s23_Sta_reg_HomeUniMsg_Data != 2'd2) && (_s23_Sta_reg_HomeUniMsg_Data != 2'd1) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(265 + 6 -> 265 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(266 + 6 -> 266 + 3)
	(6 -> 3 -> 2)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(6 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(207 + 6 -> 207 + 4)
	(6 -> 4 -> 4)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s29_Sta_reg_MemData$next)
	(6 -> 4 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s29_Sta_reg_MemData != 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState != _s29_Sta_reg_MemData))
		[1] w2	((_s29_Sta_reg_MemData != 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState != _s29_Sta_reg_MemData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #82
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #82
	(abstract cube) 8	(7 + 1 + 0 + 0 + 0)
	(concrete cube) 8	(7 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #40
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #40
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 14 -> 4)
	(325 + 14 -> 325 + 4)
	(14 -> 4 -> 2)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next == _s38_Sta_reg_Proc_1_ProcCmd$next)
	(14 -> 4 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState == _s38_Sta_reg_Proc_1_ProcCmd))
		[1] w2	((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState == _s38_Sta_reg_Proc_1_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #74
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #74
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #117
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #117
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 17 -> 1)
	(172 + 17 -> 172 + 1)
	(17 -> 1 -> 1)
	(17 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1)
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 16 -> 4)
	(327 + 16 -> 327 + 4)
	(16 -> 4 -> 2)
	(16 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 9 -> 6)
	(306 + 9 -> 306 + 6)
	(9 -> 6 -> 3)
		(added cond. from num.)	(_s22_Sta_reg_HomeUniMsg_Cmd$next != _s54_Sta_reg_UniMsg_1_Cmd$next)
		(added cond. from num.)	(_s22_Sta_reg_HomeUniMsg_Cmd$next != _s54_Sta_reg_UniMsg_1_Cmd$next)
	(9 -> 6 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(292 + 8 -> 292 + 3)
	(8 -> 3 -> 2)
	(8 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #81
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #81
	(abstract cube) 8	(7 + 1 + 0 + 0 + 0)
	(concrete cube) 8	(7 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #73
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #73
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 16 -> 4)
	(330 + 16 -> 330 + 4)
	(16 -> 4 -> 2)
	(16 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 9 -> 5)
	(309 + 9 -> 309 + 5)
	(9 -> 5 -> 3)
		(added cond. from num.)	(_s22_Sta_reg_HomeUniMsg_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
		(added cond. from num.)	(_s22_Sta_reg_HomeUniMsg_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
	(9 -> 5 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 8 -> 3)
	(294 + 8 -> 294 + 3)
	(8 -> 3 -> 2)
	(8 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd1) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 1)
	(270 + 5 -> 270 + 1)
	(5 -> 1 -> 1)
	(5 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3)
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(209 + 5 -> 209 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #110
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #110
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 9 -> 4)
	(213 + 9 -> 213 + 4)
	(9 -> 4 -> 4)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next == _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s17_Sta_reg_HomeProc_CacheData$next)
		(added cond. from num.)	(_s0_Sta_reg_CurrData$next != _s17_Sta_reg_HomeProc_CacheData$next)
	(9 -> 4 -> 7 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s11_Sta_reg_Dir_Pending && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData))
		[1] w2	(_s11_Sta_reg_Dir_Pending && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #94
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #94
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 9 -> 5)
	(273 + 9 -> 273 + 5)
	(9 -> 5 -> 3)
		(added cond. from num.)	(_s23_Sta_reg_HomeUniMsg_Data$next != _s0_Sta_reg_CurrData$next)
	(9 -> 5 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 11 -> 6)
	(218 + 11 -> 218 + 6)
	(11 -> 6 -> 3)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next == _s0_Sta_reg_CurrData$next)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s17_Sta_reg_HomeProc_CacheData$next)
		(added cond. from num.)	(_s0_Sta_reg_CurrData$next != _s17_Sta_reg_HomeProc_CacheData$next)
	(11 -> 6 -> 6 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData))
		[1] w2	((_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(221 + 4 -> 221 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3))
		[1] w3	((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(224 + 4 -> 224 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd)
		[1] w2	((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(227 + 6 -> 227 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1))
		[1] w2	((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(165 + 5 -> 165 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 7	: 0 13 17 14 14 18 16 3 s: 95
[RES_0]    L  7 : 0 26 41 42 41 55 49 9 s: 263, mem: 76, time: 26.3038
---------------------------------------------------------------------------------------------
Loop_7_2_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(5 + 2 + 0 + 0 + 0)
	(concrete cube) 7	(5 + 2 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(279 + 7 -> 279 + 3)
	(7 -> 3 -> 3)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s42_Sta_reg_Proc_2_ProcCmd$next)
	(7 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s42_Sta_reg_Proc_2_ProcCmd))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s42_Sta_reg_Proc_2_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 7 -> 4)
	(231 + 7 -> 231 + 4)
	(7 -> 4 -> 3)
	(7 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	((_s59_Sta_reg_UniMsg_2_Data != _s0_Sta_reg_CurrData) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(168 + 7 -> 168 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	((_s0_Sta_reg_CurrData != _s39_Sta_reg_Proc_2_CacheData) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 7	: 0 13 17 14 14 18 16 4 s: 96
[RES_0]    L  7 : 0 26 41 42 41 55 50 12 s: 267, mem: 77, time: 26.8433
---------------------------------------------------------------------------------------------
Loop_7_3_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(234 + 5 -> 234 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(283 + 5 -> 283 + 3)
	(5 -> 3 -> 3)
		(added cond. from num.)	(_s58_Sta_reg_UniMsg_2_Cmd$next == _s22_Sta_reg_HomeUniMsg_Cmd$next)
	(5 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s58_Sta_reg_UniMsg_2_Cmd == _s22_Sta_reg_HomeUniMsg_Cmd))
		[1] w3	((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s58_Sta_reg_UniMsg_2_Cmd == _s22_Sta_reg_HomeUniMsg_Cmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(236 + 4 -> 236 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(237 + 5 -> 237 + 3)
	(5 -> 3 -> 3)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next == _s42_Sta_reg_Proc_2_ProcCmd$next)
	(5 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState == _s42_Sta_reg_Proc_2_ProcCmd))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState == _s42_Sta_reg_Proc_2_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(173 + 5 -> 173 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 7	: 0 13 17 14 14 18 18 5 s: 99
[RES_0]    L  7 : 0 26 41 42 41 56 57 15 s: 278, mem: 77, time: 27.822
---------------------------------------------------------------------------------------------
Loop_7_4_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(239 + 5 -> 239 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(288 + 5 -> 288 + 3)
	(5 -> 3 -> 2)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next == _s22_Sta_reg_HomeUniMsg_Cmd$next)
	(5 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == _s22_Sta_reg_HomeUniMsg_Cmd))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == _s22_Sta_reg_HomeUniMsg_Cmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(241 + 5 -> 241 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(242 + 4 -> 242 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(177 + 5 -> 177 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 7	: 0 13 17 14 14 17 20 6 s: 101
[RES_0]    L  7 : 0 26 41 42 41 53 63 18 s: 284, mem: 77, time: 28.5769
---------------------------------------------------------------------------------------------
Loop_7_5_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[7] & T & !P+ ]: UNSAT
[RES_1]       130	: 7	: 0 13 17 14 14 17 20 6 s: 101
[RES_0]    L  7 : 0 26 41 42 41 53 63 18 s: 284, mem: 77, time: 28.577
	[Forward propagation]:
[RES_1]       130	: 8	: 0 13 17 14 14 15 14 10 4 s: 101
[RES_0]    L  8 : 0 26 41 42 41 45 44 33 12 s: 284, mem: 77, time: 30.1593
---------------------------------------------------------------------------------------------
Loop_8_0_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 9 -> 4)
	(307 + 9 -> 307 + 4)
	(9 -> 4 -> 2)
	(9 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 9 -> 5)
	(260 + 9 -> 260 + 5)
	(9 -> 5 -> 3)
	(9 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s3_Sta_reg_Dir_HeadVld && !(_s1_Sta_reg_Dir_Dirty) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	(_s3_Sta_reg_Dir_HeadVld && !(_s1_Sta_reg_Dir_Dirty) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 7 -> 4)
	(261 + 7 -> 261 + 4)
	(7 -> 4 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(7 -> 4 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(197 + 10 -> 197 + 3)
	(10 -> 3 -> 3)
	(10 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s3_Sta_reg_Dir_HeadVld && !(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	(_s3_Sta_reg_Dir_HeadVld && !(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #113
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #113
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 9 -> 3)
	(311 + 9 -> 311 + 3)
	(9 -> 3 -> 2)
	(9 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	(_s62_Sta_reg_WbMsg_Cmd && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 10 -> 7)
	(264 + 10 -> 264 + 7)
	(10 -> 7 -> 2)
	(10 -> 7 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	(!(_s1_Sta_reg_Dir_Dirty) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 8	(7 + 1 + 0 + 0 + 0)
	(concrete cube) 8	(7 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 8 -> 2)
	(265 + 8 -> 265 + 2)
	(8 -> 2 -> 2)
	(8 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(200 + 10 -> 200 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #40
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #40
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 10 -> 5)
	(315 + 10 -> 315 + 5)
	(10 -> 5 -> 2)
	(10 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(268 + 5 -> 268 + 3)
	(5 -> 3 -> 2)
		(added cond. from num.)	(_s54_Sta_reg_UniMsg_1_Cmd$next == _s22_Sta_reg_HomeUniMsg_Cmd$next)
	(5 -> 3 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == _s22_Sta_reg_HomeUniMsg_Cmd))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s54_Sta_reg_UniMsg_1_Cmd == _s22_Sta_reg_HomeUniMsg_Cmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(269 + 6 -> 269 + 3)
	(6 -> 3 -> 2)
		(added cond. from num.)	(_s22_Sta_reg_HomeUniMsg_Cmd$next != _s54_Sta_reg_UniMsg_1_Cmd$next)
		(added cond. from num.)	(_s22_Sta_reg_HomeUniMsg_Cmd$next != _s54_Sta_reg_UniMsg_1_Cmd$next)
	(6 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(205 + 5 -> 205 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(208 + 5 -> 208 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(209 + 4 -> 209 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(162 + 5 -> 162 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState == 2'd2) && (_s36_Sta_reg_Proc_1_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       130	: 8	: 0 13 17 14 14 14 15 13 5 s: 105
[RES_0]    L  8 : 0 26 41 42 41 42 47 42 15 s: 296, mem: 79, time: 32.577
---------------------------------------------------------------------------------------------
Loop_8_1_130
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(322 + 7 -> 322 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	(_s62_Sta_reg_WbMsg_Cmd && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(323 + 7 -> 323 + 3)
	(7 -> 3 -> 3)
		(added cond. from num.)	(_s42_Sta_reg_Proc_2_ProcCmd$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s42_Sta_reg_Proc_2_ProcCmd$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(7 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 7 -> 5)
	(276 + 7 -> 276 + 5)
	(7 -> 5 -> 3)
	(7 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && !(_s1_Sta_reg_Dir_Dirty) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && !(_s1_Sta_reg_Dir_Dirty) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(277 + 6 -> 277 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(278 + 6 -> 278 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(214 + 6 -> 214 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(280 + 6 -> 280 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(217 + 4 -> 217 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3))
		[1] w3	((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #122
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #122
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(330 + 5 -> 330 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4))
		[1] w3	(_s62_Sta_reg_WbMsg_Cmd && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(331 + 6 -> 331 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(284 + 5 -> 284 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #82
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #82
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #40
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #40
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 15 -> 8)
	(377 + 15 -> 377 + 8)
	(15 -> 8 -> 3)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s17_Sta_reg_HomeProc_CacheData$next)
	(15 -> 8 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s17_Sta_reg_HomeProc_CacheData != 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState != _s17_Sta_reg_HomeProc_CacheData))
		[1] w2	((_s17_Sta_reg_HomeProc_CacheData != 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState != _s17_Sta_reg_HomeProc_CacheData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 10 -> 7)
	(358 + 10 -> 358 + 7)
	(10 -> 7 -> 2)
	(10 -> 7 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s55_Sta_reg_UniMsg_1_Data != 2'd1) && (_s55_Sta_reg_UniMsg_1_Data != 2'd2))
		[1] w2	((_s55_Sta_reg_UniMsg_1_Data != 2'd1) && (_s55_Sta_reg_UniMsg_1_Data != 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 9 -> 5)
	(336 + 9 -> 336 + 5)
	(9 -> 5 -> 2)
	(9 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s35_Sta_reg_Proc_1_CacheData != 2'd1) && (_s35_Sta_reg_Proc_1_CacheData != 2'd2))
		[1] w2	((_s35_Sta_reg_Proc_1_CacheData != 2'd1) && (_s35_Sta_reg_Proc_1_CacheData != 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from inp_c to ab. cube) #82
	(adding from pre_c to cc. cube) #6
	(adding pred. from inp_c to cc. cube) #82
	(abstract cube) 8	(7 + 1 + 0 + 0 + 0)
	(concrete cube) 8	(7 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #119
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #119
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 13 -> 7)
	(383 + 13 -> 383 + 7)
	(13 -> 7 -> 3)
		(added cond. from num.)	(_s38_Sta_reg_Proc_1_ProcCmd$next != _s18_Sta_reg_HomeProc_CacheState$next)
		(added cond. from num.)	(_s38_Sta_reg_Proc_1_ProcCmd$next != _s18_Sta_reg_HomeProc_CacheState$next)
	(13 -> 7 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s18_Sta_reg_HomeProc_CacheState == 2'd1) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s18_Sta_reg_HomeProc_CacheState == 2'd1) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(365 + 14 -> 365 + 3)
	(14 -> 3 -> 2)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next != _s18_Sta_reg_HomeProc_CacheState$next)
		(added cond. from num.)	(_s36_Sta_reg_Proc_1_CacheState$next != _s18_Sta_reg_HomeProc_CacheState$next)
	(14 -> 3 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s18_Sta_reg_HomeProc_CacheState == 2'd1) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	((_s18_Sta_reg_HomeProc_CacheState == 2'd1) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #14
	(adding required pred. from inp_c to ab. cube) #119
	(adding from pre_c to cc. cube) #14
	(adding pred. from inp_c to cc. cube) #119
	(abstract cube) 16	(15 + 1 + 0 + 0 + 0)
	(concrete cube) 16	(15 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #74
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #74
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from inp_c to ab. cube) #117
	(adding from pre_c to cc. cube) #16
	(adding pred. from inp_c to cc. cube) #117
	(abstract cube) 18	(17 + 1 + 0 + 0 + 0)
	(concrete cube) 18	(17 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 18 -> 1)
	(172 + 18 -> 172 + 1)
	(18 -> 1 -> 1)
	(18 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s20_Sta_reg_HomeProc_ProcCmd != _s36_Sta_reg_Proc_1_CacheState)
		[1] w2	((_s20_Sta_reg_HomeProc_ProcCmd != _s36_Sta_reg_Proc_1_CacheState) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from inp_c to ab. cube) #117
	(adding from pre_c to cc. cube) #13
	(adding pred. from inp_c to cc. cube) #117
	(abstract cube) 15	(14 + 1 + 0 + 0 + 0)
	(concrete cube) 15	(14 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 15 -> 1)
	(172 + 15 -> 172 + 1)
	(15 -> 1 -> 1)
	(15 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s36_Sta_reg_Proc_1_CacheState != 2'd0)
		[1] w2	((_s36_Sta_reg_Proc_1_CacheState != 2'd0) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(402 + 14 -> 402 + 3)
	(14 -> 3 -> 2)
	(14 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s20_Sta_reg_HomeProc_ProcCmd != 2'd0) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2))
		[1] w2	((_s20_Sta_reg_HomeProc_ProcCmd != 2'd0) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 15 -> 6)
	(386 + 15 -> 386 + 6)
	(15 -> 6 -> 3)
	(15 -> 6 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s20_Sta_reg_HomeProc_ProcCmd != _s18_Sta_reg_HomeProc_CacheState) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4))
		[1] w3	((_s20_Sta_reg_HomeProc_ProcCmd != _s18_Sta_reg_HomeProc_CacheState) && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 16 -> 3)
	(367 + 16 -> 367 + 3)
	(16 -> 3 -> 2)
	(16 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s20_Sta_reg_HomeProc_ProcCmd != _s18_Sta_reg_HomeProc_CacheState) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2))
		[1] w2	((_s20_Sta_reg_HomeProc_ProcCmd != _s18_Sta_reg_HomeProc_CacheState) && (_s36_Sta_reg_Proc_1_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #119
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #119
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #22
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #22
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #74
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #74
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #117
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #117
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(172 + 13 -> 172 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) _s10_Sta_reg_Dir_Local
		[1] w1	(_s10_Sta_reg_Dir_Local && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(406 + 12 -> 406 + 4)
	(12 -> 4 -> 2)
	(12 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s10_Sta_reg_Dir_Local && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2))
		[1] w2	(_s10_Sta_reg_Dir_Local && (_s38_Sta_reg_Proc_1_ProcCmd == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #72
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #72
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #117
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #117
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding required pred. from inp_c to ab. cube) #131
	(adding pred. from inp_c to cc. cube) #131
	(abstract cube) 132	(131 + 1 + 0 + 0 + 0)
	(concrete cube) 132	(131 + 1 + 0 + 0)
		(Next: (!(_s71_id163$next) && (_s1_Sta_reg_Dir_Dirty$next == _s1_Sta_reg_Dir_Dirty$next_rhs) && (_s3_Sta_reg_Dir_HeadVld$next == _s3_Sta_reg_Dir_HeadVld$next_rhs) && (_s10_Sta_reg_Dir_Local$next == _s10_Sta_reg_Dir_Local$next_rhs) && (_s11_Sta_reg_Dir_Pending$next == _s11_Sta_reg_Dir_Pending$next_rhs) && (_s19_Sta_reg_HomeProc_InvMarked$next == _s19_Sta_reg_HomeProc_InvMarked$next_rhs) && (_s20_Sta_reg_HomeProc_ProcCmd$next == _s20_Sta_reg_HomeProc_ProcCmd$next_rhs) && (_s29_Sta_reg_MemData$next == _s29_Sta_reg_MemData$next_rhs) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194) && (_s38_Sta_reg_Proc_1_ProcCmd$next == _s38_Sta_reg_Proc_1_ProcCmd$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 9)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 15)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 15)
		(cc core: 15 -> 7)
UNSAT

		[MUS(s)]:
		[1] ((_s18_Sta_reg_HomeProc_CacheState$next == 2'd2) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_i1_io_en_a == 8'd105) && (_s18_Sta_reg_HomeProc_CacheState$next == w$148))

	[Lemmas]: 
		[1] !(((_s18_Sta_reg_HomeProc_CacheState$next == 2'd2) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_i1_io_en_a == 8'd105) && (_s18_Sta_reg_HomeProc_CacheState$next == w$148)))
#23222
#Lemmas = 133
[RES_1]       131	: 8	: 0 16 19 16 16 16 18 15 5 s: 121
[RES_0]    L  8 : 0 32 47 51 47 50 57 48 15 s: 347, mem: 83, time: 37.4342
---------------------------------------------------------------------------------------------
Loop_8_0_131
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #122
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #122
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(340 + 12 -> 340 + 4)
	(12 -> 4 -> 2)
	(12 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && !(_s1_Sta_reg_Dir_Dirty))
		[1] w1	(_s62_Sta_reg_WbMsg_Cmd && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(288 + 5 -> 288 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(342 + 12 -> 342 + 5)
	(12 -> 5 -> 2)
	(12 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(290 + 6 -> 290 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(222 + 5 -> 222 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #93
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #93
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #8
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 10	(9 + 1 + 0 + 0 + 0)
	(concrete cube) 10	(9 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(294 + 10 -> 294 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4))
		[1] w3	((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(229 + 12 -> 229 + 5)
	(12 -> 5 -> 2)
	(12 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	((_s0_Sta_reg_CurrData != _s17_Sta_reg_HomeProc_CacheData) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(232 + 4 -> 232 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd)
		[1] w2	((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(235 + 6 -> 235 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1))
		[1] w2	((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(173 + 5 -> 173 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       131	: 8	: 0 16 19 16 16 15 17 18 6 s: 123
[RES_0]    L  8 : 0 32 47 51 47 47 54 57 18 s: 353, mem: 83, time: 38.8086
---------------------------------------------------------------------------------------------
Loop_8_1_131
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #23
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #23
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(299 + 5 -> 299 + 3)
	(5 -> 3 -> 3)
		(added cond. from num.)	(_s58_Sta_reg_UniMsg_2_Cmd$next == _s22_Sta_reg_HomeUniMsg_Cmd$next)
	(5 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s58_Sta_reg_UniMsg_2_Cmd == _s22_Sta_reg_HomeUniMsg_Cmd))
		[1] w3	((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s58_Sta_reg_UniMsg_2_Cmd == _s22_Sta_reg_HomeUniMsg_Cmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(238 + 4 -> 238 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd4) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(240 + 5 -> 240 + 3)
	(5 -> 3 -> 3)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next == _s42_Sta_reg_Proc_2_ProcCmd$next)
	(5 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState == _s42_Sta_reg_Proc_2_ProcCmd))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState == _s42_Sta_reg_Proc_2_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(177 + 5 -> 177 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       131	: 8	: 0 16 19 16 16 14 16 19 7 s: 123
[RES_0]    L  8 : 0 32 47 51 47 43 51 61 21 s: 353, mem: 83, time: 40.0184
---------------------------------------------------------------------------------------------
Loop_8_2_131
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[8] & T & !P+ ]: UNSAT
[RES_1]       131	: 8	: 0 16 19 16 16 14 16 19 7 s: 123
[RES_0]    L  8 : 0 32 47 51 47 43 51 61 21 s: 353, mem: 83, time: 40.0186
	[Forward propagation]:
[RES_1]       131	: 9	: 0 15 19 14 12 8 14 15 11 15 s: 123
[RES_0]    L  9 : 0 30 47 43 33 24 47 47 36 46 s: 353, mem: 84, time: 45.0634
---------------------------------------------------------------------------------------------
Loop_9_0_131
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[9] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #5
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 7	(6 + 1 + 0 + 0 + 0)
	(concrete cube) 7	(6 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 7 -> 5)
	(304 + 7 -> 304 + 5)
	(7 -> 5 -> 5)
		(added cond. from num.)	(_s42_Sta_reg_Proc_2_ProcCmd$next != _s29_Sta_reg_MemData$next)
	(7 -> 5 -> 6 -> 5)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s29_Sta_reg_MemData != 2'd1) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && !(_s1_Sta_reg_Dir_Dirty) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s42_Sta_reg_Proc_2_ProcCmd != _s29_Sta_reg_MemData))
		[1] w3	((_s29_Sta_reg_MemData != 2'd1) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && !(_s1_Sta_reg_Dir_Dirty) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s42_Sta_reg_Proc_2_ProcCmd != _s29_Sta_reg_MemData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(228 + 6 -> 228 + 4)
	(6 -> 4 -> 4)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next != _s29_Sta_reg_MemData$next)
	(6 -> 4 -> 5 -> 4)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s29_Sta_reg_MemData != 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState != _s29_Sta_reg_MemData))
		[1] w2	((_s29_Sta_reg_MemData != 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState != _s29_Sta_reg_MemData) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #125
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #125
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(374 + 6 -> 374 + 3)
	(6 -> 3 -> 3)
		(added cond. from num.)	(_s22_Sta_reg_HomeUniMsg_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
		(added cond. from num.)	(_s22_Sta_reg_HomeUniMsg_Cmd$next != _s58_Sta_reg_UniMsg_2_Cmd$next)
	(6 -> 3 -> 5 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(307 + 5 -> 307 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 6 -> 4)
	(308 + 6 -> 308 + 4)
	(6 -> 4 -> 3)
	(6 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && !(_s1_Sta_reg_Dir_Dirty) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4))
		[1] w3	((_s42_Sta_reg_Proc_2_ProcCmd == 2'd2) && !(_s1_Sta_reg_Dir_Dirty) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(231 + 5 -> 231 + 3)
	(5 -> 3 -> 2)
	(5 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s40_Sta_reg_Proc_2_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 13 -> 4)
	(378 + 13 -> 378 + 4)
	(13 -> 4 -> 3)
	(13 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s3_Sta_reg_Dir_HeadVld && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	(_s3_Sta_reg_Dir_HeadVld && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #113
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #113
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #9
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(10 + 1 + 0 + 0 + 0)
	(concrete cube) 11	(10 + 1 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(433 + 11 -> 433 + 3)
	(11 -> 3 -> 2)
	(11 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 13 -> 5)
	(380 + 13 -> 380 + 5)
	(13 -> 5 -> 2)
	(13 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(312 + 6 -> 312 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #113
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #113
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(382 + 12 -> 382 + 3)
	(12 -> 3 -> 2)
	(12 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && !(_s1_Sta_reg_Dir_Dirty))
		[1] w1	(_s62_Sta_reg_WbMsg_Cmd && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(314 + 6 -> 314 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(234 + 6 -> 234 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #113
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #113
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(385 + 13 -> 385 + 3)
	(13 -> 3 -> 2)
	(13 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(317 + 6 -> 317 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(238 + 4 -> 238 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3))
		[1] w3	((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(241 + 4 -> 241 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd)
		[1] w2	((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(244 + 6 -> 244 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1))
		[1] w2	((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[8] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(188 + 5 -> 188 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       131	: 9	: 0 15 19 14 12 7 13 15 15 16 s: 126
[RES_0]    L  9 : 0 30 47 43 33 21 44 48 48 49 s: 363, mem: 85, time: 47.991
---------------------------------------------------------------------------------------------
Loop_9_1_131
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[9] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #21
	(adding from pre_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #21
	(abstract cube) 5	(4 + 1 + 0 + 0 + 0)
	(concrete cube) 5	(4 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 5 -> 3)
	(248 + 5 -> 248 + 3)
	(5 -> 3 -> 3)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next == _s42_Sta_reg_Proc_2_ProcCmd$next)
	(5 -> 3 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState == _s42_Sta_reg_Proc_2_ProcCmd))
		[1] w3	((_s58_Sta_reg_UniMsg_2_Cmd == 3'd4) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && (_s18_Sta_reg_HomeProc_CacheState == _s42_Sta_reg_Proc_2_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[8] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(192 + 5 -> 192 + 2)
	(5 -> 2 -> 2)
		(added cond. from num.)	(_s40_Sta_reg_Proc_2_CacheState$next == _s18_Sta_reg_HomeProc_CacheState$next)
	(5 -> 2 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState))
		[1] w2	((_s40_Sta_reg_Proc_2_CacheState == 2'd2) && (_s40_Sta_reg_Proc_2_CacheState == _s18_Sta_reg_HomeProc_CacheState) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       131	: 9	: 0 15 19 14 12 7 13 14 15 17 s: 126
[RES_0]    L  9 : 0 30 47 43 33 21 44 44 49 52 s: 363, mem: 85, time: 48.4497
---------------------------------------------------------------------------------------------
Loop_9_2_131
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[9] & T & !P+ ]: UNSAT
[RES_1]       131	: 9	: 0 15 19 14 12 7 13 14 15 17 s: 126
[RES_0]    L  9 : 0 30 47 43 33 21 44 44 49 52 s: 363, mem: 85, time: 48.4499
	[Forward propagation]:
[RES_1]       131	: 10	: 0 15 19 14 12 6 7 11 12 9 21 s: 126
[RES_0]    L  10 : 0 30 47 43 33 18 23 36 37 29 67 s: 363, mem: 86, time: 51.4677
---------------------------------------------------------------------------------------------
Loop_10_0_131
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[10] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #1
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #1
	(bad cube [in !P+]) sz: 4
	(abstract cube) 5	(3 + 2 + 0 + 0 + 0)
	(concrete cube) 5	(3 + 2 + 0 + 0)
	SAT_a ? [ F[9] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 14 -> 6)
	(376 + 14 -> 376 + 6)
	(14 -> 6 -> 3)
		(added cond. from num.)	(_s46_Sta_reg_ShWbMsg_Cmd$next == _s20_Sta_reg_HomeProc_ProcCmd$next)
	(14 -> 6 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && (_s46_Sta_reg_ShWbMsg_Cmd == _s20_Sta_reg_HomeProc_ProcCmd))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && (_s46_Sta_reg_ShWbMsg_Cmd == _s20_Sta_reg_HomeProc_ProcCmd) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #15
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #15
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 17	(16 + 1 + 0 + 0 + 0)
	(concrete cube) 17	(16 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 9 -> 3)
	(446 + 9 -> 446 + 3)
	(9 -> 3 -> 2)
	(9 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 17 -> 5)
	(378 + 17 -> 378 + 5)
	(17 -> 5 -> 2)
	(17 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(303 + 6 -> 303 + 2)
	(6 -> 2 -> 2)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
		(added cond. from num.)	(_s18_Sta_reg_HomeProc_CacheState$next != _s46_Sta_reg_ShWbMsg_Cmd$next)
	(6 -> 2 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	((_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #10
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 12	(11 + 1 + 0 + 0 + 0)
	(concrete cube) 12	(11 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(380 + 12 -> 380 + 4)
	(12 -> 4 -> 3)
	(12 -> 4 -> 3)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s20_Sta_reg_HomeProc_ProcCmd == 2'd1) && _s62_Sta_reg_WbMsg_Cmd && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s20_Sta_reg_HomeProc_ProcCmd == 2'd1) && _s62_Sta_reg_WbMsg_Cmd && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #12
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 14	(13 + 1 + 0 + 0 + 0)
	(concrete cube) 14	(13 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #7
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 9	(8 + 1 + 0 + 0 + 0)
	(concrete cube) 9	(8 + 1 + 0 + 0)
	SAT_a ? [ F[5] & T & C+ ]: UNSAT
		(ab core: 9 -> 3)
	(450 + 9 -> 450 + 3)
	(9 -> 3 -> 2)
	(9 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3))
		[1] w3	(_s62_Sta_reg_WbMsg_Cmd && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 14 -> 4)
	(382 + 14 -> 382 + 4)
	(14 -> 4 -> 2)
	(14 -> 4 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && !(_s1_Sta_reg_Dir_Dirty))
		[1] w1	(_s62_Sta_reg_WbMsg_Cmd && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(306 + 6 -> 306 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (_s62_Sta_reg_WbMsg_Cmd && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(_s62_Sta_reg_WbMsg_Cmd && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[8] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(239 + 6 -> 239 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) (!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w2	(!(_s1_Sta_reg_Dir_Dirty) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[9] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #26
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #26
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[8] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #123
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #123
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[7] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from inp_c to ab. cube) #114
	(adding from pre_c to cc. cube) #11
	(adding pred. from inp_c to cc. cube) #114
	(abstract cube) 13	(12 + 1 + 0 + 0 + 0)
	(concrete cube) 13	(12 + 1 + 0 + 0)
	SAT_a ? [ F[6] & T & C+ ]: UNSAT
		(ab core: 13 -> 5)
	(385 + 13 -> 385 + 5)
	(13 -> 5 -> 2)
	(13 -> 5 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[7] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(309 + 6 -> 309 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2))
		[1] w3	((_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_s18_Sta_reg_HomeProc_CacheState == 2'd2) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[8] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(243 + 4 -> 243 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3))
		[1] w3	((_s23_Sta_reg_HomeUniMsg_Data != _s0_Sta_reg_CurrData) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[9] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 6	(5 + 1 + 0 + 0 + 0)
	(concrete cube) 6	(5 + 1 + 0 + 0)
	SAT_a ? [ F[8] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(246 + 6 -> 246 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1))
		[1] w2	((_s47_Sta_reg_ShWbMsg_Data != _s0_Sta_reg_CurrData) && (_s46_Sta_reg_ShWbMsg_Cmd == 2'd1) && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[9] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 4	(3 + 1 + 0 + 0 + 0)
	(concrete cube) 4	(3 + 1 + 0 + 0)
	SAT_a ? [ F[8] & T & C+ ]: UNSAT
		(ab core: 4 -> 2)
	(249 + 4 -> 249 + 2)
	(4 -> 2 -> 2)
	(4 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd)
		[1] w2	((_s63_Sta_reg_WbMsg_Data != _s0_Sta_reg_CurrData) && _s62_Sta_reg_WbMsg_Cmd && !((!(_s67_id142) && _s71_id163)))
	SAT_a ? [ F[9] & T & C+ ]: UNSAT
		(ab core: 5 -> 2)
	(196 + 5 -> 196 + 2)
	(5 -> 2 -> 2)
	(5 -> 2 -> 2)

		[MUS(s)]:

		   (forcing elimination of initial states from original mus)
		[0] (orig) ((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty))
		[1] w2	((_s0_Sta_reg_CurrData != _s29_Sta_reg_MemData) && !(_s1_Sta_reg_Dir_Dirty) && !((!(_s67_id142) && _s71_id163)))
[RES_1]       131	: 10	: 0 15 19 14 12 6 6 11 11 12 22 s: 128
[RES_0]    L  10 : 0 30 47 43 33 18 20 36 34 38 70 s: 369, mem: 87, time: 53.2558
---------------------------------------------------------------------------------------------
Loop_10_1_131
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[10] & T & !P+ ]: UNSAT
[RES_1]       131	: 10	: 0 15 19 14 12 6 6 11 11 12 22 s: 128
[RES_0]    L  10 : 0 30 47 43 33 18 20 36 34 38 70 s: 369, mem: 87, time: 53.2559
	[Forward propagation]:
		Property holds
[RES_1]       131	: 10	: 0 15 19 14 12 6 4 2 0 34 22 s: 128
[RES_0]    L  10 : 0 30 47 43 33 18 14 6 0 108 70 s: 369, mem: 88, time: 55.7696

-----------
Refinements
-----------
[1]	((b$161 || b$166) && (b$161$next || b$166$next))
[2]	!(_s71_id163$next)
[3]	!((((_i1_io_en_a == 8'd91) || (_i1_io_en_a != 8'd91)) && b$54506 && (_s71_id163 || !(_s71_id163)) && _s71_id163))
[4]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd4) && _s71_id163))
[5]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd5) && _s71_id163))
[6]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd6) && _s71_id163))
[7]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd7) && _s71_id163))
[8]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd8) && _s71_id163))
[9]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd9) && _s71_id163))
[10]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd10) && _s71_id163))
[11]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd11) && _s71_id163))
[12]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd12) && _s71_id163))
[13]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd13) && _s71_id163))
[14]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd14) && _s71_id163))
[15]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd15) && _s71_id163))
[16]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd16) && _s71_id163))
[17]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd17) && _s71_id163))
[18]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd18) && _s71_id163))
[19]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd19) && _s71_id163))
[20]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd20) && _s71_id163))
[21]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd21) && _s71_id163))
[22]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd22) && _s71_id163))
[23]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd23) && _s71_id163))
[24]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd24) && _s71_id163))
[25]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd25) && _s71_id163))
[26]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd26) && _s71_id163))
[27]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd27) && _s71_id163))
[28]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd28) && _s71_id163))
[29]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd29) && _s71_id163))
[30]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd30) && _s71_id163))
[31]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd31) && _s71_id163))
[32]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd32) && _s71_id163))
[33]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd33) && _s71_id163))
[34]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd34) && _s71_id163))
[35]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd35) && _s71_id163))
[36]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd36) && _s71_id163))
[37]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd37) && _s71_id163))
[38]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd38) && _s71_id163))
[39]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd39) && _s71_id163))
[40]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd40) && _s71_id163))
[41]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd41) && _s71_id163))
[42]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd42) && _s71_id163))
[43]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd43) && _s71_id163))
[44]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd44) && _s71_id163))
[45]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd45) && _s71_id163))
[46]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd46) && _s71_id163))
[47]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd47) && _s71_id163))
[48]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd48) && _s71_id163))
[49]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd49) && _s71_id163))
[50]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd50) && _s71_id163))
[51]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd51) && _s71_id163))
[52]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd52) && _s71_id163))
[53]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd53) && _s71_id163))
[54]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd54) && _s71_id163))
[55]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd55) && _s71_id163))
[56]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd56) && _s71_id163))
[57]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd57) && _s71_id163))
[58]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd58) && _s71_id163))
[59]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd59) && _s71_id163))
[60]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd60) && _s71_id163))
[61]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd61) && _s71_id163))
[62]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd62) && _s71_id163))
[63]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd63) && _s71_id163))
[64]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd64) && _s71_id163))
[65]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd65) && _s71_id163))
[66]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd66) && _s71_id163))
[67]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd67) && _s71_id163))
[68]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd68) && _s71_id163))
[69]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd69) && _s71_id163))
[70]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd70) && _s71_id163))
[71]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd71) && _s71_id163))
[72]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd72) && _s71_id163))
[73]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd73) && _s71_id163))
[74]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd74) && _s71_id163))
[75]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd75) && _s71_id163))
[76]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd76) && _s71_id163))
[77]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd77) && _s71_id163))
[78]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd78) && _s71_id163))
[79]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd79) && _s71_id163))
[80]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd80) && _s71_id163))
[81]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd81) && _s71_id163))
[82]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd82) && _s71_id163))
[83]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd83) && _s71_id163))
[84]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd84) && _s71_id163))
[85]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd85) && _s71_id163))
[86]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd86) && _s71_id163))
[87]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd87) && _s71_id163))
[88]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd88) && _s71_id163))
[89]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd89) && _s71_id163))
[90]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd90) && _s71_id163))
[91]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd92) && _s71_id163))
[92]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd93) && _s71_id163))
[93]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd94) && _s71_id163))
[94]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd95) && _s71_id163))
[95]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd96) && _s71_id163))
[96]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd97) && _s71_id163))
[97]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd98) && _s71_id163))
[98]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd99) && _s71_id163))
[99]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd100) && _s71_id163))
[100]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd101) && _s71_id163))
[101]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd102) && _s71_id163))
[102]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd103) && _s71_id163))
[103]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd104) && _s71_id163))
[104]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd105) && _s71_id163))
[105]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd106) && _s71_id163))
[106]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd107) && _s71_id163))
[107]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd108) && _s71_id163))
[108]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd109) && _s71_id163))
[109]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd110) && _s71_id163))
[110]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd111) && _s71_id163))
[111]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd112) && _s71_id163))
[112]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd113) && _s71_id163))
[113]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd114) && _s71_id163))
[114]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd115) && _s71_id163))
[115]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd116) && _s71_id163))
[116]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd117) && _s71_id163))
[117]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd118) && _s71_id163))
[118]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd119) && _s71_id163))
[119]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd120) && _s71_id163))
[120]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd121) && _s71_id163))
[121]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd122) && _s71_id163))
[122]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd123) && _s71_id163))
[123]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd124) && _s71_id163))
[124]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd125) && _s71_id163))
[125]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd126) && _s71_id163))
[126]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd127) && _s71_id163))
[127]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd128) && _s71_id163))
[128]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd129) && _s71_id163))
[129]	!(((((b$161 || b$166) && (b$161$next || b$166$next)) && !(_s71_id163$next)) && (_i1_io_en_a == 8'd130) && _s71_id163))
[130]	!(((_s18_Sta_reg_HomeProc_CacheState$next == 2'd2) && (_i1_io_en_a == 8'd13) && !(ReductionOr_1_2(_s18_Sta_reg_HomeProc_CacheState)) && (_s18_Sta_reg_HomeProc_CacheState$next == w$148)))
[131]	!(((_s40_Sta_reg_Proc_2_CacheState$next == 2'd2) && (_s58_Sta_reg_UniMsg_2_Cmd == 3'd3) && (_i1_io_en_a == 8'd107) && (_s40_Sta_reg_Proc_2_CacheState$next == w$225)))
[132]	!(((_s36_Sta_reg_Proc_1_CacheState$next == 2'd2) && (_s54_Sta_reg_UniMsg_1_Cmd == 3'd3) && (_i1_io_en_a == 8'd106) && (_s36_Sta_reg_Proc_1_CacheState$next == w$194)))
[133]	!(((_s18_Sta_reg_HomeProc_CacheState$next == 2'd2) && (_s22_Sta_reg_HomeUniMsg_Cmd == 3'd3) && (_i1_io_en_a == 8'd105) && (_s18_Sta_reg_HomeProc_CacheState$next == w$148)))
-----------
[RES_0]    refinement-lemmas-check successful!
F[0]	c#0
F[1]	c#15
F[2]	c#19
F[3]	c#14
F[4]	c#12
F[5]	c#6
F[6]	c#4
F[7]	c#2
F[8]	c#0
F[9]	c#34
F[10]	c#22
F[11]	c#0


[RES_0]    reachability-lemmas-check successful!
[RES_0]    DP-lemmas-check successful!
[RES_0]    initial-state-check successful!
[RES_0]    property-check successful!
[RES_0]    inductive-invariant-check successful!
 s: 369, mem: 88, time: 57.60
Frames explored (131 datapath refinements) : 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 5 5 8 
CEXT lengths (131 feasibility checks) : 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 6 6 9 
DP lemmas (131 feasibility checks) : 
3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
Block= 180 BlockT= 190 BlockS= 180 BlockU= 10 Oblig= 703 ObligT= 703 ObligS= 401 ObligU= 302 FPT= 853 FPS= 639 FPU= 214 CallT= 6383 CallS= 4432 CallU= 1951 MUST= 569 MUSS= 136 MUSU= 433 sMUST= 4 sMUSS= 2 sMUSU= 2 dMUST= 801 dMUSS= 530 dMUSU= 271 rMUST= 1849 rMUSS= 835 rMUSU= 1014 All_clauses= 302 All_literals= 917 Clauses= 128 Literals= 369 DPLemmas= 133 DPrefsNoDPL= 0 DPRefs= 131

pme_fail: 0, pme_succ: 0, lit_before: 0, lit_after: 0
coi_before: 0, coi_after: 0
mus_before: 2102 mus_lit: 615 mus_cls: 302 mus_cnt: 302
S+M	Call = 6952 (sat=4568, 65.71%)
SAT	Call = 6383 (sat=4432, 69.43%)
MUS	Call = 569 (sat=136, 23.90%)

Detailed Stats:

  (reachability)
	#Frame Restrictions:	302
	#TB                :	581
	#cubes-subsumed    :	174
	#context reset     :	0
	#Y2 reset          :	0
	#frame solver reset:	8
	avg-sz-frame-restriction:  	3.04

	avg-sz-ab-cube:  	6.15
		%t1-ab-cube:   	100.00%	[sel: 100.00% ]
		%t2-ab-cube:   	0.00%	[sel: 0.00% ]
		%t3-ab-cube:   	0.00%	[sel: 0.00% ]
		%t4-ab-cube:   	0.00%	[sel: 0.00% ]

		ab-cube info:	
			s == s:	0.50%	[sel: 4.91% ]
			s == n:	43.61%	[sel: 38.71% ]
			s == o:	0.00%	[sel: 0.00% ]
			n == o:	0.00%	[sel: 0.00% ]
			o == o:	0.00%	[sel: 0.00% ]
			s != s:	2.55%	[sel: 9.81% ]
			s != n:	18.24%	[sel: 3.82% ]
			s != o:	0.00%	[sel: 0.00% ]
			n != o:	0.00%	[sel: 0.00% ]
			o != o:	0.00%	[sel: 0.00% ]
			s bool:	33.12%	[sel: 9.81% ]
			up    :	1.99%	[sel: 32.93% ]
			oth   :	0.00%	[sel: 0.00% ]

		%coi-ab-cube  :	78.80%	[sel: 100.00% ]
			s (==):	0.50%	[sel: 4.91% ]
			s (!=):	2.55%	[sel: 9.81% ]
			n (==):	43.61%	[sel: 38.71% ]
			n (!=):	13.23%	[sel: 3.82% ]
			other :	18.91%	[sel: 42.75% ]
		%pred-ab-cube :	21.20%	[sel: 0.00% ]
		%fproj-ab-cube:	0.00%	[sel: 0.00% ]
			s (==):	0.00%	[sel: 0.00% ]
			s (!=):	0.00%	[sel: 0.00% ]
			n (==):	0.00%	[sel: 0.00% ]
			n (!=):	0.00%	[sel: 0.00% ]
		%proj-ab-cube :	0.00%	[sel: 0.00% ]
			s (==):	0.00%	[sel: 0.00% ]
			s (!=):	0.00%	[sel: 0.00% ]
			n (==):	0.00%	[sel: 0.00% ]
			n (!=):	0.00%	[sel: 0.00% ]
		%subs-ab-cube :	0.00%	[sel: 0.00% ]
	avg-#sv-ab-cube:  	3.00
	avg-tsb-ab-cube:  	6.00
	relevancy:       	31.27%

	avg-sz-cc-cube:  	6.00
		%coi-cc-cube  :	78.80%
		%pred-cc-cube :	21.20%
		%fproj-cc-cube:	0.00%
			s (==):	0.00%
			s (!=):	0.00%
			n (==):	0.00%
			n (!=):	0.00%
		%proj-cc-cube :	0.00%
			s (==):	0.00%
			s (!=):	0.00%
			n (==):	0.00%
			n (!=):	0.00%

	tb_cube_time:     	1.16 (2.01%)
		cube_eval_time: 	0.64 (1.11%)
		cube_pred_time: 	0.00 (0.00%)
		cube_fproj_time:	0.00 (0.00%)
		cube_proj_time: 	0.00 (0.00%)
		cube _subs_time:	0.00 (0.00%)
		sum:            	0.64 (55.35% of tb_cube_time)

	tb_ct_time:      	0.12 (0.21%)
		ct isblocked_time:  	0.00 (0.00%)
		ct isinitial_time:  	0.07 (0.12%)
		ct containment_time:	0.00 (0.00%)
		ct fastforward_time:	0.00 (0.00%)
		sum:                	0.07 (57.31% of tb_ct_time)

	setcontain_time:	0.00 (0.00%)

	updatesolver_time:	0.05 (0.09%)

	tb_time:	39.58 (68.72%)
		tb_reach_time:    	10.46 (18.17%)
		tb_val_time:    	0.23 (0.39%) [ cti_val_time: 0.02 (0.04%) ]
		tb_cube_time:      	1.16 (2.01%)
		tb_mus_time:      	27.43 (47.63%)
			tb_mus_core_time:      	5.71 (9.92%)
			tb_mus_min_time:      	21.67 (37.62%)
		tb_ct_time:       	0.12 (0.21%)
		tb_extra_time:    	0.00 (0.00%)
		sum:           	39.17 (98.97% of tb_time)


  (refinement)
	sim_time:		0.11 (0.19%) 	 [16.11% of dpr_time]

  pre_time:	0.02 (0.04%)
  cti_time:	0.08 (0.14%)	[cti_i_time:	0.02 (0.03%) ]
  tb_time:	39.58 (68.72%)
  fp_time:	15.36 (26.66%)	[fp_extra_time:	0.00 (0.00%) ]
  refine_time:	0.67 (1.17%)
  sol_set_time:	0.06 (0.11%)
  inv_time:	1.83 (3.17%)	[induct_time:	0.00 (0.00%) ]
  draw_time:	0.00 (0.00%)
  sum:		57.60 (100.01%)

  extra_time:	0.00 (0.00%)

  timeout_time:	0.00 (0.00%)

[simplified] 0 (ex), 0 (cc), 4 (ot)

===     HOLD     ===

Averroes finished.

br-#mus         302           
        hard        soft         out           
           
      230.24        6.96        2.69               (br-core)           
      230.24        2.69        2.04                (br-min)          

         sat       unsat           
                                          #Calls           
           0         302   (br-core)           
           0           0  (br-core2)           
         835         712    (br-min)           
                                      Time (sec)           
        0.02        5.77   (br-core)           
        0.00        0.00  (br-core2)           
        2.77       18.24    (br-min)           
                                    Avg. Time (microsec)           
           0       19113   (br-core)           
           0           0  (br-core2)           
        3319       25616    (br-min)           
                                    Max Time (microsec)           
        2797      102241   (br-core)           
           0           0  (br-core2)           
       57786      253120    (br-min)          

                      ab                      bv           
         sat       unsat         sat       unsat           
                                                      #Calls           
         485          16           0         132   (oneshot)           
        3415        1228         396         142       (inc)           
           0         302         136         131    (assume)           
                       0                       0   (timeout)          

                                                  Time (sec)           
        0.02        1.70        0.00        0.00   (oneshot)           
       12.70       32.13        0.02        0.01       (inc)           
        0.00        5.63        0.02        0.14    (assume)           
                    0.00                    0.00   (timeout)          

                                                Avg. Time (microsec)
          42      106230           0           7   (oneshot)           
        3718       26162          54          39       (inc)           
           0       18634         120        1082    (assume)           
                       0                       0   (timeout)           
           
      Result        Time        Mem.       #Refs           
                     sec          MB                       
           h       57.60          88         131
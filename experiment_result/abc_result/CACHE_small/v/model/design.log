
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.16+63 (git sha1 11e75bc27, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: protocol.sv
Parsing SystemVerilog input from `protocol.sv' to AST representation.
Storing AST representation for module `$abstract\Init'.
Storing AST representation for module `$abstract\clientrequestssharedaccess'.
Storing AST representation for module `$abstract\clientrequestssharedaccess_1'.
Storing AST representation for module `$abstract\clientrequestsexclusiveaccess'.
Storing AST representation for module `$abstract\clientrequestsexclusiveaccess_1'.
Storing AST representation for module `$abstract\homepicksnewrequest'.
Storing AST representation for module `$abstract\homepicksnewrequest_1'.
Storing AST representation for module `$abstract\homesendsinvalidatemessage'.
Storing AST representation for module `$abstract\homesendsinvalidatemessage_1'.
Storing AST representation for module `$abstract\homereceivesinvalidateacknowledgement'.
Storing AST representation for module `$abstract\homereceivesinvalidateacknowledgement_1'.
Storing AST representation for module `$abstract\sharerinvalidatescache'.
Storing AST representation for module `$abstract\sharerinvalidatescache_1'.
Storing AST representation for module `$abstract\clientreceivessharedgrant'.
Storing AST representation for module `$abstract\clientreceivessharedgrant_1'.
Storing AST representation for module `$abstract\clientreceivedexclusivegrant'.
Storing AST representation for module `$abstract\clientreceivedexclusivegrant_1'.
Storing AST representation for module `$abstract\homesendsreplytoclient_shared'.
Storing AST representation for module `$abstract\homesendsreplytoclient_exclusive'.
Storing AST representation for module `$abstract\system'.
Successfully finished Verilog frontend.

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\system'.
Generating RTLIL representation for module `\system'.

2.2.1. Analyzing design hierarchy..
Top module:  \system

2.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\homesendsreplytoclient_exclusive'.
Generating RTLIL representation for module `\homesendsreplytoclient_exclusive'.

2.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\homesendsreplytoclient_shared'.
Generating RTLIL representation for module `\homesendsreplytoclient_shared'.

2.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\clientreceivedexclusivegrant_1'.
Generating RTLIL representation for module `\clientreceivedexclusivegrant_1'.

2.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\clientreceivedexclusivegrant'.
Generating RTLIL representation for module `\clientreceivedexclusivegrant'.

2.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\clientreceivessharedgrant_1'.
Generating RTLIL representation for module `\clientreceivessharedgrant_1'.

2.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\clientreceivessharedgrant'.
Generating RTLIL representation for module `\clientreceivessharedgrant'.

2.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\sharerinvalidatescache_1'.
Generating RTLIL representation for module `\sharerinvalidatescache_1'.

2.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\sharerinvalidatescache'.
Generating RTLIL representation for module `\sharerinvalidatescache'.

2.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\homereceivesinvalidateacknowledgement_1'.
Generating RTLIL representation for module `\homereceivesinvalidateacknowledgement_1'.

2.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\homereceivesinvalidateacknowledgement'.
Generating RTLIL representation for module `\homereceivesinvalidateacknowledgement'.

2.2.12. Executing AST frontend in derive mode using pre-parsed AST for module `\homesendsinvalidatemessage_1'.
Generating RTLIL representation for module `\homesendsinvalidatemessage_1'.

2.2.13. Executing AST frontend in derive mode using pre-parsed AST for module `\homesendsinvalidatemessage'.
Generating RTLIL representation for module `\homesendsinvalidatemessage'.

2.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\homepicksnewrequest_1'.
Generating RTLIL representation for module `\homepicksnewrequest_1'.

2.2.15. Executing AST frontend in derive mode using pre-parsed AST for module `\homepicksnewrequest'.
Generating RTLIL representation for module `\homepicksnewrequest'.

2.2.16. Executing AST frontend in derive mode using pre-parsed AST for module `\clientrequestsexclusiveaccess_1'.
Generating RTLIL representation for module `\clientrequestsexclusiveaccess_1'.

2.2.17. Executing AST frontend in derive mode using pre-parsed AST for module `\clientrequestsexclusiveaccess'.
Generating RTLIL representation for module `\clientrequestsexclusiveaccess'.

2.2.18. Executing AST frontend in derive mode using pre-parsed AST for module `\clientrequestssharedaccess_1'.
Generating RTLIL representation for module `\clientrequestssharedaccess_1'.

2.2.19. Executing AST frontend in derive mode using pre-parsed AST for module `\clientrequestssharedaccess'.
Generating RTLIL representation for module `\clientrequestssharedaccess'.

2.2.20. Executing AST frontend in derive mode using pre-parsed AST for module `\Init'.
Generating RTLIL representation for module `\Init'.

2.2.21. Analyzing design hierarchy..
Top module:  \system
Used module:     \homesendsreplytoclient_exclusive
Used module:     \homesendsreplytoclient_shared
Used module:     \clientreceivedexclusivegrant_1
Used module:     \clientreceivedexclusivegrant
Used module:     \clientreceivessharedgrant_1
Used module:     \clientreceivessharedgrant
Used module:     \sharerinvalidatescache_1
Used module:     \sharerinvalidatescache
Used module:     \homereceivesinvalidateacknowledgement_1
Used module:     \homereceivesinvalidateacknowledgement
Used module:     \homesendsinvalidatemessage_1
Used module:     \homesendsinvalidatemessage
Used module:     \homepicksnewrequest_1
Used module:     \homepicksnewrequest
Used module:     \clientrequestsexclusiveaccess_1
Used module:     \clientrequestsexclusiveaccess
Used module:     \clientrequestssharedaccess_1
Used module:     \clientrequestssharedaccess
Used module:     \Init

2.2.22. Analyzing design hierarchy..
Top module:  \system
Used module:     \homesendsreplytoclient_exclusive
Used module:     \homesendsreplytoclient_shared
Used module:     \clientreceivedexclusivegrant_1
Used module:     \clientreceivedexclusivegrant
Used module:     \clientreceivessharedgrant_1
Used module:     \clientreceivessharedgrant
Used module:     \sharerinvalidatescache_1
Used module:     \sharerinvalidatescache
Used module:     \homereceivesinvalidateacknowledgement_1
Used module:     \homereceivesinvalidateacknowledgement
Used module:     \homesendsinvalidatemessage_1
Used module:     \homesendsinvalidatemessage
Used module:     \homepicksnewrequest_1
Used module:     \homepicksnewrequest
Used module:     \clientrequestsexclusiveaccess_1
Used module:     \clientrequestsexclusiveaccess
Used module:     \clientrequestssharedaccess_1
Used module:     \clientrequestssharedaccess
Used module:     \Init
Removing unused module `$abstract\system'.
Removing unused module `$abstract\homesendsreplytoclient_exclusive'.
Removing unused module `$abstract\homesendsreplytoclient_shared'.
Removing unused module `$abstract\clientreceivedexclusivegrant_1'.
Removing unused module `$abstract\clientreceivedexclusivegrant'.
Removing unused module `$abstract\clientreceivessharedgrant_1'.
Removing unused module `$abstract\clientreceivessharedgrant'.
Removing unused module `$abstract\sharerinvalidatescache_1'.
Removing unused module `$abstract\sharerinvalidatescache'.
Removing unused module `$abstract\homereceivesinvalidateacknowledgement_1'.
Removing unused module `$abstract\homereceivesinvalidateacknowledgement'.
Removing unused module `$abstract\homesendsinvalidatemessage_1'.
Removing unused module `$abstract\homesendsinvalidatemessage'.
Removing unused module `$abstract\homepicksnewrequest_1'.
Removing unused module `$abstract\homepicksnewrequest'.
Removing unused module `$abstract\clientrequestsexclusiveaccess_1'.
Removing unused module `$abstract\clientrequestsexclusiveaccess'.
Removing unused module `$abstract\clientrequestssharedaccess_1'.
Removing unused module `$abstract\clientrequestssharedaccess'.
Removing unused module `$abstract\Init'.
Removed 20 unused modules.
Module system directly or indirectly contains formal properties -> setting "keep" attribute.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 84 switch rules as full_case in process $proc$protocol.sv:3879$360 in module system.
Removed a total of 0 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 21 redundant assignments.
Promoted 6 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\system.$proc$protocol.sv:0$399'.
  Set init value: $formal$protocol.sv:4150$6_EN = 1'0
Found init rule in `\system.$proc$protocol.sv:0$397'.
  Set init value: $formal$protocol.sv:4146$5_EN = 1'0
Found init rule in `\system.$proc$protocol.sv:0$395'.
  Set init value: $formal$protocol.sv:4142$4_EN = 1'0
Found init rule in `\system.$proc$protocol.sv:0$393'.
  Set init value: $formal$protocol.sv:4138$3_EN = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\system.$proc$protocol.sv:0$399'.
Creating decoders for process `\system.$proc$protocol.sv:0$397'.
Creating decoders for process `\system.$proc$protocol.sv:0$395'.
Creating decoders for process `\system.$proc$protocol.sv:0$393'.
Creating decoders for process `\system.$proc$protocol.sv:0$387'.
Creating decoders for process `\system.$proc$protocol.sv:4136$361'.
     1/8: $0$formal$protocol.sv:4138$3_EN[0:0]$363
     2/8: $0$formal$protocol.sv:4138$3_CHECK[0:0]$362
     3/8: $0$formal$protocol.sv:4142$4_EN[0:0]$365
     4/8: $0$formal$protocol.sv:4142$4_CHECK[0:0]$364
     5/8: $0$formal$protocol.sv:4146$5_EN[0:0]$367
     6/8: $0$formal$protocol.sv:4146$5_CHECK[0:0]$366
     7/8: $0$formal$protocol.sv:4150$6_EN[0:0]$369
     8/8: $0$formal$protocol.sv:4150$6_CHECK[0:0]$368
Creating decoders for process `\system.$proc$protocol.sv:3879$360'.
     1/21: $0\cache_reg_2[1:0]
     2/21: $0\cache_reg_1[1:0]
     3/21: $0\cache_reg_0[1:0]
     4/21: $0\home_current_client_reg[1:0]
     5/21: $0\home_current_command_reg[2:0]
     6/21: $0\home_exclusive_granted_reg[0:0]
     7/21: $0\home_invalidate_list_reg_2[0:0]
     8/21: $0\home_invalidate_list_reg_1[0:0]
     9/21: $0\home_invalidate_list_reg_0[0:0]
    10/21: $0\home_sharer_list_reg_2[0:0]
    11/21: $0\home_sharer_list_reg_1[0:0]
    12/21: $0\home_sharer_list_reg_0[0:0]
    13/21: $0\channel3_reg_2[2:0]
    14/21: $0\channel3_reg_1[2:0]
    15/21: $0\channel3_reg_0[2:0]
    16/21: $0\channel2_4_reg_2[2:0]
    17/21: $0\channel2_4_reg_1[2:0]
    18/21: $0\channel2_4_reg_0[2:0]
    19/21: $0\channel1_reg_2[2:0]
    20/21: $0\channel1_reg_1[2:0]
    21/21: $0\channel1_reg_0[2:0]

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\system.$formal$protocol.sv:4132$1_CHECK' from process `\system.$proc$protocol.sv:0$387'.
No latch inferred for signal `\system.$formal$protocol.sv:4132$1_EN' from process `\system.$proc$protocol.sv:0$387'.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\system.$formal$protocol.sv:4138$3_CHECK' using process `\system.$proc$protocol.sv:4136$361'.
  created $dff cell `$procdff$1003' with positive edge clock.
Creating register for signal `\system.$formal$protocol.sv:4138$3_EN' using process `\system.$proc$protocol.sv:4136$361'.
  created $dff cell `$procdff$1004' with positive edge clock.
Creating register for signal `\system.$formal$protocol.sv:4142$4_CHECK' using process `\system.$proc$protocol.sv:4136$361'.
  created $dff cell `$procdff$1005' with positive edge clock.
Creating register for signal `\system.$formal$protocol.sv:4142$4_EN' using process `\system.$proc$protocol.sv:4136$361'.
  created $dff cell `$procdff$1006' with positive edge clock.
Creating register for signal `\system.$formal$protocol.sv:4146$5_CHECK' using process `\system.$proc$protocol.sv:4136$361'.
  created $dff cell `$procdff$1007' with positive edge clock.
Creating register for signal `\system.$formal$protocol.sv:4146$5_EN' using process `\system.$proc$protocol.sv:4136$361'.
  created $dff cell `$procdff$1008' with positive edge clock.
Creating register for signal `\system.$formal$protocol.sv:4150$6_CHECK' using process `\system.$proc$protocol.sv:4136$361'.
  created $dff cell `$procdff$1009' with positive edge clock.
Creating register for signal `\system.$formal$protocol.sv:4150$6_EN' using process `\system.$proc$protocol.sv:4136$361'.
  created $dff cell `$procdff$1010' with positive edge clock.
Creating register for signal `\system.\channel1_reg_0' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1011' with positive edge clock.
Creating register for signal `\system.\channel1_reg_1' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1012' with positive edge clock.
Creating register for signal `\system.\channel1_reg_2' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1013' with positive edge clock.
Creating register for signal `\system.\channel2_4_reg_0' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1014' with positive edge clock.
Creating register for signal `\system.\channel2_4_reg_1' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1015' with positive edge clock.
Creating register for signal `\system.\channel2_4_reg_2' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1016' with positive edge clock.
Creating register for signal `\system.\channel3_reg_0' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1017' with positive edge clock.
Creating register for signal `\system.\channel3_reg_1' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1018' with positive edge clock.
Creating register for signal `\system.\channel3_reg_2' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1019' with positive edge clock.
Creating register for signal `\system.\home_sharer_list_reg_0' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1020' with positive edge clock.
Creating register for signal `\system.\home_sharer_list_reg_1' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1021' with positive edge clock.
Creating register for signal `\system.\home_sharer_list_reg_2' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1022' with positive edge clock.
Creating register for signal `\system.\home_invalidate_list_reg_0' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1023' with positive edge clock.
Creating register for signal `\system.\home_invalidate_list_reg_1' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1024' with positive edge clock.
Creating register for signal `\system.\home_invalidate_list_reg_2' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1025' with positive edge clock.
Creating register for signal `\system.\home_exclusive_granted_reg' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1026' with positive edge clock.
Creating register for signal `\system.\home_current_command_reg' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1027' with positive edge clock.
Creating register for signal `\system.\home_current_client_reg' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1028' with positive edge clock.
Creating register for signal `\system.\cache_reg_0' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1029' with positive edge clock.
Creating register for signal `\system.\cache_reg_1' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1030' with positive edge clock.
Creating register for signal `\system.\cache_reg_2' using process `\system.$proc$protocol.sv:3879$360'.
  created $dff cell `$procdff$1031' with positive edge clock.

2.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `system.$proc$protocol.sv:0$399'.
Removing empty process `system.$proc$protocol.sv:0$397'.
Removing empty process `system.$proc$protocol.sv:0$395'.
Removing empty process `system.$proc$protocol.sv:0$393'.
Removing empty process `system.$proc$protocol.sv:0$387'.
Found and cleaned up 4 empty switches in `\system.$proc$protocol.sv:4136$361'.
Removing empty process `system.$proc$protocol.sv:4136$361'.
Found and cleaned up 84 empty switches in `\system.$proc$protocol.sv:3879$360'.
Removing empty process `system.$proc$protocol.sv:3879$360'.
Cleaned up 88 empty switches.

2.3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module Init.
Optimizing module clientrequestssharedaccess.
<suppressed ~2 debug messages>
Optimizing module clientrequestssharedaccess_1.
<suppressed ~2 debug messages>
Optimizing module clientrequestsexclusiveaccess.
<suppressed ~2 debug messages>
Optimizing module clientrequestsexclusiveaccess_1.
<suppressed ~2 debug messages>
Optimizing module homepicksnewrequest.
<suppressed ~10 debug messages>
Optimizing module homepicksnewrequest_1.
<suppressed ~10 debug messages>
Optimizing module homesendsinvalidatemessage.
<suppressed ~2 debug messages>
Optimizing module homesendsinvalidatemessage_1.
<suppressed ~2 debug messages>
Optimizing module homereceivesinvalidateacknowledgement.
<suppressed ~3 debug messages>
Optimizing module homereceivesinvalidateacknowledgement_1.
<suppressed ~3 debug messages>
Optimizing module sharerinvalidatescache.
<suppressed ~3 debug messages>
Optimizing module sharerinvalidatescache_1.
<suppressed ~3 debug messages>
Optimizing module clientreceivessharedgrant.
Optimizing module clientreceivessharedgrant_1.
Optimizing module clientreceivedexclusivegrant.
Optimizing module clientreceivedexclusivegrant_1.
Optimizing module homesendsreplytoclient_shared.
<suppressed ~9 debug messages>
Optimizing module homesendsreplytoclient_exclusive.
<suppressed ~9 debug messages>
Optimizing module system.
<suppressed ~14 debug messages>

2.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module Init.
Optimizing module clientrequestssharedaccess.
Optimizing module clientrequestssharedaccess_1.
Optimizing module clientrequestsexclusiveaccess.
Optimizing module clientrequestsexclusiveaccess_1.
Optimizing module homepicksnewrequest.
Optimizing module homepicksnewrequest_1.
Optimizing module homesendsinvalidatemessage.
Optimizing module homesendsinvalidatemessage_1.
Optimizing module homereceivesinvalidateacknowledgement.
Optimizing module homereceivesinvalidateacknowledgement_1.
Optimizing module sharerinvalidatescache.
Optimizing module sharerinvalidatescache_1.
Optimizing module clientreceivessharedgrant.
Optimizing module clientreceivessharedgrant_1.
Optimizing module clientreceivedexclusivegrant.
Optimizing module clientreceivedexclusivegrant_1.
Optimizing module homesendsreplytoclient_shared.
Optimizing module homesendsreplytoclient_exclusive.
Optimizing module system.

2.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \clientrequestssharedaccess..
Finding unused cells or wires in module \clientrequestssharedaccess_1..
Finding unused cells or wires in module \clientrequestsexclusiveaccess..
Finding unused cells or wires in module \clientrequestsexclusiveaccess_1..
Finding unused cells or wires in module \homepicksnewrequest..
Finding unused cells or wires in module \homepicksnewrequest_1..
Finding unused cells or wires in module \homesendsinvalidatemessage..
Finding unused cells or wires in module \homesendsinvalidatemessage_1..
Finding unused cells or wires in module \homereceivesinvalidateacknowledgement..
Finding unused cells or wires in module \homereceivesinvalidateacknowledgement_1..
Finding unused cells or wires in module \sharerinvalidatescache..
Finding unused cells or wires in module \sharerinvalidatescache_1..
Finding unused cells or wires in module \clientreceivessharedgrant..
Finding unused cells or wires in module \clientreceivessharedgrant_1..
Finding unused cells or wires in module \clientreceivedexclusivegrant..
Finding unused cells or wires in module \clientreceivedexclusivegrant_1..
Finding unused cells or wires in module \homesendsreplytoclient_shared..
Finding unused cells or wires in module \homesendsreplytoclient_exclusive..
Finding unused cells or wires in module \system..
Removed 4 unused cells and 624 unused wires.
<suppressed ~24 debug messages>

2.6. Executing CHECK pass (checking for obvious problems).
Checking module Init...
Checking module clientreceivedexclusivegrant...
Checking module clientreceivedexclusivegrant_1...
Checking module clientreceivessharedgrant...
Checking module clientreceivessharedgrant_1...
Checking module clientrequestsexclusiveaccess...
Checking module clientrequestsexclusiveaccess_1...
Checking module clientrequestssharedaccess...
Checking module clientrequestssharedaccess_1...
Checking module homepicksnewrequest...
Checking module homepicksnewrequest_1...
Checking module homereceivesinvalidateacknowledgement...
Checking module homereceivesinvalidateacknowledgement_1...
Checking module homesendsinvalidatemessage...
Checking module homesendsinvalidatemessage_1...
Checking module homesendsreplytoclient_exclusive...
Checking module homesendsreplytoclient_shared...
Checking module sharerinvalidatescache...
Checking module sharerinvalidatescache_1...
Checking module system...
Found and reported 0 problems.

2.7. Executing OPT pass (performing simple optimizations).

2.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Init.
Optimizing module clientreceivedexclusivegrant.
Optimizing module clientreceivedexclusivegrant_1.
Optimizing module clientreceivessharedgrant.
Optimizing module clientreceivessharedgrant_1.
Optimizing module clientrequestsexclusiveaccess.
Optimizing module clientrequestsexclusiveaccess_1.
Optimizing module clientrequestssharedaccess.
Optimizing module clientrequestssharedaccess_1.
Optimizing module homepicksnewrequest.
Optimizing module homepicksnewrequest_1.
Optimizing module homereceivesinvalidateacknowledgement.
Optimizing module homereceivesinvalidateacknowledgement_1.
Optimizing module homesendsinvalidatemessage.
Optimizing module homesendsinvalidatemessage_1.
Optimizing module homesendsreplytoclient_exclusive.
Optimizing module homesendsreplytoclient_shared.
Optimizing module sharerinvalidatescache.
Optimizing module sharerinvalidatescache_1.
Optimizing module system.

2.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Init'.
Finding identical cells in module `\clientreceivedexclusivegrant'.
<suppressed ~3 debug messages>
Finding identical cells in module `\clientreceivedexclusivegrant_1'.
<suppressed ~3 debug messages>
Finding identical cells in module `\clientreceivessharedgrant'.
<suppressed ~3 debug messages>
Finding identical cells in module `\clientreceivessharedgrant_1'.
<suppressed ~3 debug messages>
Finding identical cells in module `\clientrequestsexclusiveaccess'.
Finding identical cells in module `\clientrequestsexclusiveaccess_1'.
Finding identical cells in module `\clientrequestssharedaccess'.
Finding identical cells in module `\clientrequestssharedaccess_1'.
Finding identical cells in module `\homepicksnewrequest'.
<suppressed ~36 debug messages>
Finding identical cells in module `\homepicksnewrequest_1'.
<suppressed ~36 debug messages>
Finding identical cells in module `\homereceivesinvalidateacknowledgement'.
<suppressed ~18 debug messages>
Finding identical cells in module `\homereceivesinvalidateacknowledgement_1'.
<suppressed ~18 debug messages>
Finding identical cells in module `\homesendsinvalidatemessage'.
<suppressed ~21 debug messages>
Finding identical cells in module `\homesendsinvalidatemessage_1'.
<suppressed ~21 debug messages>
Finding identical cells in module `\homesendsreplytoclient_exclusive'.
<suppressed ~87 debug messages>
Finding identical cells in module `\homesendsreplytoclient_shared'.
<suppressed ~105 debug messages>
Finding identical cells in module `\sharerinvalidatescache'.
<suppressed ~18 debug messages>
Finding identical cells in module `\sharerinvalidatescache_1'.
<suppressed ~18 debug messages>
Finding identical cells in module `\system'.
<suppressed ~60 debug messages>
Removed a total of 150 cells.

2.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Init..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientreceivedexclusivegrant..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientreceivedexclusivegrant_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientreceivessharedgrant..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientreceivessharedgrant_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientrequestsexclusiveaccess..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientrequestsexclusiveaccess_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientrequestssharedaccess..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientrequestssharedaccess_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homepicksnewrequest..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homepicksnewrequest_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homereceivesinvalidateacknowledgement..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homereceivesinvalidateacknowledgement_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homesendsinvalidatemessage..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homesendsinvalidatemessage_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homesendsreplytoclient_exclusive..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homesendsreplytoclient_shared..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sharerinvalidatescache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sharerinvalidatescache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \system..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~97 debug messages>

2.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Init.
  Optimizing cells in module \clientreceivedexclusivegrant.
  Optimizing cells in module \clientreceivedexclusivegrant_1.
  Optimizing cells in module \clientreceivessharedgrant.
  Optimizing cells in module \clientreceivessharedgrant_1.
  Optimizing cells in module \clientrequestsexclusiveaccess.
  Optimizing cells in module \clientrequestsexclusiveaccess_1.
  Optimizing cells in module \clientrequestssharedaccess.
  Optimizing cells in module \clientrequestssharedaccess_1.
  Optimizing cells in module \homepicksnewrequest.
  Optimizing cells in module \homepicksnewrequest_1.
  Optimizing cells in module \homereceivesinvalidateacknowledgement.
  Optimizing cells in module \homereceivesinvalidateacknowledgement_1.
  Optimizing cells in module \homesendsinvalidatemessage.
  Optimizing cells in module \homesendsinvalidatemessage_1.
  Optimizing cells in module \homesendsreplytoclient_exclusive.
  Optimizing cells in module \homesendsreplytoclient_shared.
  Optimizing cells in module \sharerinvalidatescache.
  Optimizing cells in module \sharerinvalidatescache_1.
  Optimizing cells in module \system.
Performed a total of 0 changes.

2.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Init'.
Finding identical cells in module `\clientreceivedexclusivegrant'.
Finding identical cells in module `\clientreceivedexclusivegrant_1'.
Finding identical cells in module `\clientreceivessharedgrant'.
Finding identical cells in module `\clientreceivessharedgrant_1'.
Finding identical cells in module `\clientrequestsexclusiveaccess'.
Finding identical cells in module `\clientrequestsexclusiveaccess_1'.
Finding identical cells in module `\clientrequestssharedaccess'.
Finding identical cells in module `\clientrequestssharedaccess_1'.
Finding identical cells in module `\homepicksnewrequest'.
Finding identical cells in module `\homepicksnewrequest_1'.
Finding identical cells in module `\homereceivesinvalidateacknowledgement'.
Finding identical cells in module `\homereceivesinvalidateacknowledgement_1'.
Finding identical cells in module `\homesendsinvalidatemessage'.
Finding identical cells in module `\homesendsinvalidatemessage_1'.
Finding identical cells in module `\homesendsreplytoclient_exclusive'.
Finding identical cells in module `\homesendsreplytoclient_shared'.
Finding identical cells in module `\sharerinvalidatescache'.
Finding identical cells in module `\sharerinvalidatescache_1'.
Finding identical cells in module `\system'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

2.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \clientreceivedexclusivegrant..
Finding unused cells or wires in module \clientreceivedexclusivegrant_1..
Finding unused cells or wires in module \clientreceivessharedgrant..
Finding unused cells or wires in module \clientreceivessharedgrant_1..
Finding unused cells or wires in module \clientrequestsexclusiveaccess..
Finding unused cells or wires in module \clientrequestsexclusiveaccess_1..
Finding unused cells or wires in module \clientrequestssharedaccess..
Finding unused cells or wires in module \clientrequestssharedaccess_1..
Finding unused cells or wires in module \homepicksnewrequest..
Finding unused cells or wires in module \homepicksnewrequest_1..
Finding unused cells or wires in module \homereceivesinvalidateacknowledgement..
Finding unused cells or wires in module \homereceivesinvalidateacknowledgement_1..
Finding unused cells or wires in module \homesendsinvalidatemessage..
Finding unused cells or wires in module \homesendsinvalidatemessage_1..
Finding unused cells or wires in module \homesendsreplytoclient_exclusive..
Finding unused cells or wires in module \homesendsreplytoclient_shared..
Finding unused cells or wires in module \sharerinvalidatescache..
Finding unused cells or wires in module \sharerinvalidatescache_1..
Finding unused cells or wires in module \system..
Removed 0 unused cells and 138 unused wires.
<suppressed ~15 debug messages>

2.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module Init.
Optimizing module clientreceivedexclusivegrant.
Optimizing module clientreceivedexclusivegrant_1.
Optimizing module clientreceivessharedgrant.
Optimizing module clientreceivessharedgrant_1.
Optimizing module clientrequestsexclusiveaccess.
Optimizing module clientrequestsexclusiveaccess_1.
Optimizing module clientrequestssharedaccess.
Optimizing module clientrequestssharedaccess_1.
Optimizing module homepicksnewrequest.
Optimizing module homepicksnewrequest_1.
Optimizing module homereceivesinvalidateacknowledgement.
Optimizing module homereceivesinvalidateacknowledgement_1.
Optimizing module homesendsinvalidatemessage.
Optimizing module homesendsinvalidatemessage_1.
Optimizing module homesendsreplytoclient_exclusive.
Optimizing module homesendsreplytoclient_shared.
Optimizing module sharerinvalidatescache.
Optimizing module sharerinvalidatescache_1.
Optimizing module system.

2.7.8. Rerunning OPT passes. (Maybe there is more to do..)

2.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Init..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientreceivedexclusivegrant..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientreceivedexclusivegrant_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientreceivessharedgrant..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientreceivessharedgrant_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientrequestsexclusiveaccess..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientrequestsexclusiveaccess_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientrequestssharedaccess..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clientrequestssharedaccess_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homepicksnewrequest..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homepicksnewrequest_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homereceivesinvalidateacknowledgement..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homereceivesinvalidateacknowledgement_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homesendsinvalidatemessage..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homesendsinvalidatemessage_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homesendsreplytoclient_exclusive..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \homesendsreplytoclient_shared..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sharerinvalidatescache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sharerinvalidatescache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \system..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~93 debug messages>

2.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Init.
  Optimizing cells in module \clientreceivedexclusivegrant.
  Optimizing cells in module \clientreceivedexclusivegrant_1.
  Optimizing cells in module \clientreceivessharedgrant.
  Optimizing cells in module \clientreceivessharedgrant_1.
  Optimizing cells in module \clientrequestsexclusiveaccess.
  Optimizing cells in module \clientrequestsexclusiveaccess_1.
  Optimizing cells in module \clientrequestssharedaccess.
  Optimizing cells in module \clientrequestssharedaccess_1.
  Optimizing cells in module \homepicksnewrequest.
  Optimizing cells in module \homepicksnewrequest_1.
  Optimizing cells in module \homereceivesinvalidateacknowledgement.
  Optimizing cells in module \homereceivesinvalidateacknowledgement_1.
  Optimizing cells in module \homesendsinvalidatemessage.
  Optimizing cells in module \homesendsinvalidatemessage_1.
  Optimizing cells in module \homesendsreplytoclient_exclusive.
  Optimizing cells in module \homesendsreplytoclient_shared.
  Optimizing cells in module \sharerinvalidatescache.
  Optimizing cells in module \sharerinvalidatescache_1.
  Optimizing cells in module \system.
Performed a total of 0 changes.

2.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Init'.
Finding identical cells in module `\clientreceivedexclusivegrant'.
Finding identical cells in module `\clientreceivedexclusivegrant_1'.
Finding identical cells in module `\clientreceivessharedgrant'.
Finding identical cells in module `\clientreceivessharedgrant_1'.
Finding identical cells in module `\clientrequestsexclusiveaccess'.
Finding identical cells in module `\clientrequestsexclusiveaccess_1'.
Finding identical cells in module `\clientrequestssharedaccess'.
Finding identical cells in module `\clientrequestssharedaccess_1'.
Finding identical cells in module `\homepicksnewrequest'.
Finding identical cells in module `\homepicksnewrequest_1'.
Finding identical cells in module `\homereceivesinvalidateacknowledgement'.
Finding identical cells in module `\homereceivesinvalidateacknowledgement_1'.
Finding identical cells in module `\homesendsinvalidatemessage'.
Finding identical cells in module `\homesendsinvalidatemessage_1'.
Finding identical cells in module `\homesendsreplytoclient_exclusive'.
Finding identical cells in module `\homesendsreplytoclient_shared'.
Finding identical cells in module `\sharerinvalidatescache'.
Finding identical cells in module `\sharerinvalidatescache_1'.
Finding identical cells in module `\system'.
Removed a total of 0 cells.

2.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \clientreceivedexclusivegrant..
Finding unused cells or wires in module \clientreceivedexclusivegrant_1..
Finding unused cells or wires in module \clientreceivessharedgrant..
Finding unused cells or wires in module \clientreceivessharedgrant_1..
Finding unused cells or wires in module \clientrequestsexclusiveaccess..
Finding unused cells or wires in module \clientrequestsexclusiveaccess_1..
Finding unused cells or wires in module \clientrequestssharedaccess..
Finding unused cells or wires in module \clientrequestssharedaccess_1..
Finding unused cells or wires in module \homepicksnewrequest..
Finding unused cells or wires in module \homepicksnewrequest_1..
Finding unused cells or wires in module \homereceivesinvalidateacknowledgement..
Finding unused cells or wires in module \homereceivesinvalidateacknowledgement_1..
Finding unused cells or wires in module \homesendsinvalidatemessage..
Finding unused cells or wires in module \homesendsinvalidatemessage_1..
Finding unused cells or wires in module \homesendsreplytoclient_exclusive..
Finding unused cells or wires in module \homesendsreplytoclient_shared..
Finding unused cells or wires in module \sharerinvalidatescache..
Finding unused cells or wires in module \sharerinvalidatescache_1..
Finding unused cells or wires in module \system..

2.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module Init.
Optimizing module clientreceivedexclusivegrant.
Optimizing module clientreceivedexclusivegrant_1.
Optimizing module clientreceivessharedgrant.
Optimizing module clientreceivessharedgrant_1.
Optimizing module clientrequestsexclusiveaccess.
Optimizing module clientrequestsexclusiveaccess_1.
Optimizing module clientrequestssharedaccess.
Optimizing module clientrequestssharedaccess_1.
Optimizing module homepicksnewrequest.
Optimizing module homepicksnewrequest_1.
Optimizing module homereceivesinvalidateacknowledgement.
Optimizing module homereceivesinvalidateacknowledgement_1.
Optimizing module homesendsinvalidatemessage.
Optimizing module homesendsinvalidatemessage_1.
Optimizing module homesendsreplytoclient_exclusive.
Optimizing module homesendsreplytoclient_shared.
Optimizing module sharerinvalidatescache.
Optimizing module sharerinvalidatescache_1.
Optimizing module system.

2.7.14. Finished OPT passes. (There is nothing left to do.)

2.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell clientrequestsexclusiveaccess.$eq$protocol.sv:249$705 ($eq).
Removed top 1 bits (of 2) from port B of cell clientrequestsexclusiveaccess_1.$eq$protocol.sv:318$698 ($eq).
Removed top 2 bits (of 3) from port B of cell homesendsinvalidatemessage.$eq$protocol.sv:537$629 ($eq).
Removed top 1 bits (of 3) from port B of cell homesendsinvalidatemessage.$eq$protocol.sv:537$631 ($eq).
Removed top 2 bits (of 3) from port B of cell homesendsinvalidatemessage_1.$eq$protocol.sv:608$611 ($eq).
Removed top 1 bits (of 3) from port B of cell homesendsinvalidatemessage_1.$eq$protocol.sv:608$613 ($eq).
Removed top 1 bits (of 2) from port A of cell homesendsreplytoclient_exclusive.$eq$protocol.sv:1327$404 ($eq).
Removed top 1 bits (of 3) from port B of cell homesendsreplytoclient_exclusive.$eq$protocol.sv:1335$420 ($eq).
Removed top 1 bits (of 2) from port A of cell homesendsreplytoclient_shared.$eq$protocol.sv:1235$462 ($eq).
Removed top 2 bits (of 3) from port B of cell homesendsreplytoclient_shared.$eq$protocol.sv:1243$478 ($eq).
Removed top 1 bits (of 3) from port B of cell sharerinvalidatescache.$eq$protocol.sv:819$566 ($eq).
Removed top 1 bits (of 3) from port B of cell sharerinvalidatescache_1.$eq$protocol.sv:889$551 ($eq).
Removed top 4 bits (of 5) from port B of cell system.$eq$protocol.sv:2273$29 ($eq).
Removed top 3 bits (of 5) from port B of cell system.$eq$protocol.sv:2295$51 ($eq).
Removed top 3 bits (of 5) from port B of cell system.$eq$protocol.sv:2317$73 ($eq).
Removed top 2 bits (of 5) from port B of cell system.$eq$protocol.sv:2339$95 ($eq).
Removed top 2 bits (of 5) from port B of cell system.$eq$protocol.sv:2361$117 ($eq).
Removed top 2 bits (of 5) from port B of cell system.$eq$protocol.sv:2383$139 ($eq).
Removed top 2 bits (of 5) from port B of cell system.$eq$protocol.sv:2405$161 ($eq).
Removed top 1 bits (of 5) from port B of cell system.$eq$protocol.sv:2427$183 ($eq).
Removed top 1 bits (of 5) from port B of cell system.$eq$protocol.sv:2449$205 ($eq).
Removed top 1 bits (of 5) from port B of cell system.$eq$protocol.sv:2471$227 ($eq).
Removed top 1 bits (of 5) from port B of cell system.$eq$protocol.sv:2493$249 ($eq).
Removed top 1 bits (of 5) from port B of cell system.$eq$protocol.sv:2515$271 ($eq).
Removed top 1 bits (of 5) from port B of cell system.$eq$protocol.sv:2537$293 ($eq).
Removed top 1 bits (of 5) from port B of cell system.$eq$protocol.sv:2559$315 ($eq).
Removed top 1 bits (of 5) from port B of cell system.$eq$protocol.sv:2581$337 ($eq).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \clientreceivedexclusivegrant..
Finding unused cells or wires in module \clientreceivedexclusivegrant_1..
Finding unused cells or wires in module \clientreceivessharedgrant..
Finding unused cells or wires in module \clientreceivessharedgrant_1..
Finding unused cells or wires in module \clientrequestsexclusiveaccess..
Finding unused cells or wires in module \clientrequestsexclusiveaccess_1..
Finding unused cells or wires in module \clientrequestssharedaccess..
Finding unused cells or wires in module \clientrequestssharedaccess_1..
Finding unused cells or wires in module \homepicksnewrequest..
Finding unused cells or wires in module \homepicksnewrequest_1..
Finding unused cells or wires in module \homereceivesinvalidateacknowledgement..
Finding unused cells or wires in module \homereceivesinvalidateacknowledgement_1..
Finding unused cells or wires in module \homesendsinvalidatemessage..
Finding unused cells or wires in module \homesendsinvalidatemessage_1..
Finding unused cells or wires in module \homesendsreplytoclient_exclusive..
Finding unused cells or wires in module \homesendsreplytoclient_shared..
Finding unused cells or wires in module \sharerinvalidatescache..
Finding unused cells or wires in module \sharerinvalidatescache_1..
Finding unused cells or wires in module \system..

2.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Init.
Optimizing module clientreceivedexclusivegrant.
Optimizing module clientreceivedexclusivegrant_1.
Optimizing module clientreceivessharedgrant.
Optimizing module clientreceivessharedgrant_1.
Optimizing module clientrequestsexclusiveaccess.
Optimizing module clientrequestsexclusiveaccess_1.
Optimizing module clientrequestssharedaccess.
Optimizing module clientrequestssharedaccess_1.
Optimizing module homepicksnewrequest.
Optimizing module homepicksnewrequest_1.
Optimizing module homereceivesinvalidateacknowledgement.
Optimizing module homereceivesinvalidateacknowledgement_1.
Optimizing module homesendsinvalidatemessage.
Optimizing module homesendsinvalidatemessage_1.
Optimizing module homesendsreplytoclient_exclusive.
Optimizing module homesendsreplytoclient_shared.
Optimizing module sharerinvalidatescache.
Optimizing module sharerinvalidatescache_1.
Optimizing module system.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Init'.
Finding identical cells in module `\clientreceivedexclusivegrant'.
Finding identical cells in module `\clientreceivedexclusivegrant_1'.
Finding identical cells in module `\clientreceivessharedgrant'.
Finding identical cells in module `\clientreceivessharedgrant_1'.
Finding identical cells in module `\clientrequestsexclusiveaccess'.
Finding identical cells in module `\clientrequestsexclusiveaccess_1'.
Finding identical cells in module `\clientrequestssharedaccess'.
Finding identical cells in module `\clientrequestssharedaccess_1'.
Finding identical cells in module `\homepicksnewrequest'.
Finding identical cells in module `\homepicksnewrequest_1'.
Finding identical cells in module `\homereceivesinvalidateacknowledgement'.
Finding identical cells in module `\homereceivesinvalidateacknowledgement_1'.
Finding identical cells in module `\homesendsinvalidatemessage'.
Finding identical cells in module `\homesendsinvalidatemessage_1'.
Finding identical cells in module `\homesendsreplytoclient_exclusive'.
Finding identical cells in module `\homesendsreplytoclient_shared'.
Finding identical cells in module `\sharerinvalidatescache'.
Finding identical cells in module `\sharerinvalidatescache_1'.
Finding identical cells in module `\system'.
Removed a total of 0 cells.

2.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Init..
Finding unused cells or wires in module \clientreceivedexclusivegrant..
Finding unused cells or wires in module \clientreceivedexclusivegrant_1..
Finding unused cells or wires in module \clientreceivessharedgrant..
Finding unused cells or wires in module \clientreceivessharedgrant_1..
Finding unused cells or wires in module \clientrequestsexclusiveaccess..
Finding unused cells or wires in module \clientrequestsexclusiveaccess_1..
Finding unused cells or wires in module \clientrequestssharedaccess..
Finding unused cells or wires in module \clientrequestssharedaccess_1..
Finding unused cells or wires in module \homepicksnewrequest..
Finding unused cells or wires in module \homepicksnewrequest_1..
Finding unused cells or wires in module \homereceivesinvalidateacknowledgement..
Finding unused cells or wires in module \homereceivesinvalidateacknowledgement_1..
Finding unused cells or wires in module \homesendsinvalidatemessage..
Finding unused cells or wires in module \homesendsinvalidatemessage_1..
Finding unused cells or wires in module \homesendsreplytoclient_exclusive..
Finding unused cells or wires in module \homesendsreplytoclient_shared..
Finding unused cells or wires in module \sharerinvalidatescache..
Finding unused cells or wires in module \sharerinvalidatescache_1..
Finding unused cells or wires in module \system..

2.11.4. Finished fast OPT passes.

2.12. Printing statistics.

=== Init ===

   Number of wires:                 43
   Number of wire bits:             91
   Number of public wires:          43
   Number of public wire bits:      91
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 14
     $mux                           14

=== clientreceivedexclusivegrant ===

   Number of wires:                 46
   Number of wire bits:             97
   Number of public wires:          45
   Number of public wire bits:      96
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $eq                             1
     $mux                            4

=== clientreceivedexclusivegrant_1 ===

   Number of wires:                 46
   Number of wire bits:             97
   Number of public wires:          45
   Number of public wire bits:      96
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $eq                             1
     $mux                            4

=== clientreceivessharedgrant ===

   Number of wires:                 46
   Number of wire bits:             97
   Number of public wires:          45
   Number of public wire bits:      96
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $eq                             1
     $mux                            4

=== clientreceivessharedgrant_1 ===

   Number of wires:                 46
   Number of wire bits:             97
   Number of public wires:          45
   Number of public wire bits:      96
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $eq                             1
     $mux                            4

=== clientrequestsexclusiveaccess ===

   Number of wires:                 49
   Number of wire bits:             99
   Number of public wires:          44
   Number of public wire bits:      94
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $and                            1
     $eq                             1
     $logic_not                      2
     $mux                            2
     $or                             1

=== clientrequestsexclusiveaccess_1 ===

   Number of wires:                 49
   Number of wire bits:             99
   Number of public wires:          44
   Number of public wire bits:      94
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $and                            1
     $eq                             1
     $logic_not                      2
     $mux                            2
     $or                             1

=== clientrequestssharedaccess ===

   Number of wires:                 47
   Number of wire bits:             97
   Number of public wires:          44
   Number of public wire bits:      94
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $and                            1
     $logic_not                      2
     $mux                            2

=== clientrequestssharedaccess_1 ===

   Number of wires:                 47
   Number of wire bits:             97
   Number of public wires:          44
   Number of public wire bits:      94
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $and                            1
     $logic_not                      2
     $mux                            2

=== homepicksnewrequest ===

   Number of wires:                 51
   Number of wire bits:            104
   Number of public wires:          48
   Number of public wire bits:     101
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 13
     $and                            1
     $logic_not                      1
     $mux                           10
     $reduce_bool                    1

=== homepicksnewrequest_1 ===

   Number of wires:                 51
   Number of wire bits:            104
   Number of public wires:          48
   Number of public wire bits:     101
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 13
     $and                            1
     $logic_not                      1
     $mux                           10
     $reduce_bool                    1

=== homereceivesinvalidateacknowledgement ===

   Number of wires:                 49
   Number of wire bits:             99
   Number of public wires:          46
   Number of public wire bits:      96
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $and                            1
     $eq                             1
     $mux                            6
     $reduce_bool                    1

=== homereceivesinvalidateacknowledgement_1 ===

   Number of wires:                 49
   Number of wire bits:             99
   Number of public wires:          46
   Number of public wire bits:      96
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $and                            1
     $eq                             1
     $mux                            6
     $reduce_bool                    1

=== homesendsinvalidatemessage ===

   Number of wires:                 52
   Number of wire bits:            102
   Number of public wires:          45
   Number of public wire bits:      95
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $and                            3
     $eq                             2
     $logic_not                      1
     $mux                            4
     $or                             1

=== homesendsinvalidatemessage_1 ===

   Number of wires:                 52
   Number of wire bits:            102
   Number of public wires:          45
   Number of public wire bits:      95
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $and                            3
     $eq                             2
     $logic_not                      1
     $mux                            4
     $or                             1

=== homesendsreplytoclient_exclusive ===

   Number of wires:                 68
   Number of wire bits:            134
   Number of public wires:          61
   Number of public wire bits:     127
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32
     $and                            3
     $eq                             3
     $logic_not                      2
     $mux                           19
     $not                            2
     $or                             3

=== homesendsreplytoclient_shared ===

   Number of wires:                 66
   Number of wire bits:            132
   Number of public wires:          58
   Number of public wire bits:     124
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 30
     $and                            2
     $eq                             3
     $logic_not                      2
     $mux                           19
     $not                            1
     $or                             3

=== sharerinvalidatescache ===

   Number of wires:                 49
   Number of wire bits:            102
   Number of public wires:          46
   Number of public wire bits:      99
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $and                            1
     $eq                             1
     $logic_not                      1
     $mux                            6

=== sharerinvalidatescache_1 ===

   Number of wires:                 49
   Number of wire bits:            102
   Number of public wires:          46
   Number of public wire bits:      99
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $and                            1
     $eq                             1
     $logic_not                      1
     $mux                            6

=== system ===

   Number of wires:               1299
   Number of wire bits:           2719
   Number of public wires:        1196
   Number of public wire bits:    2520
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                482
     $assert                         4
     $assume                         1
     $dff                           26
     $eq                            20
     $initstate                      1
     $logic_and                      1
     $logic_not                      3
     $mux                          403
     $not                            2
     $or                             2
     Init                            1
     clientreceivedexclusivegrant      1
     clientreceivedexclusivegrant_1      1
     clientreceivessharedgrant       1
     clientreceivessharedgrant_1      1
     clientrequestsexclusiveaccess      1
     clientrequestsexclusiveaccess_1      1
     clientrequestssharedaccess      1
     clientrequestssharedaccess_1      1
     homepicksnewrequest             1
     homepicksnewrequest_1           1
     homereceivesinvalidateacknowledgement      1
     homereceivesinvalidateacknowledgement_1      1
     homesendsinvalidatemessage      1
     homesendsinvalidatemessage_1      1
     homesendsreplytoclient_exclusive      1
     homesendsreplytoclient_shared      1
     sharerinvalidatescache          1
     sharerinvalidatescache_1        1

=== design hierarchy ===

   system                            1
     Init                            1
     clientreceivedexclusivegrant      1
     clientreceivedexclusivegrant_1      1
     clientreceivessharedgrant       1
     clientreceivessharedgrant_1      1
     clientrequestsexclusiveaccess      1
     clientrequestsexclusiveaccess_1      1
     clientrequestssharedaccess      1
     clientrequestssharedaccess_1      1
     homepicksnewrequest             1
     homepicksnewrequest_1           1
     homereceivesinvalidateacknowledgement      1
     homereceivesinvalidateacknowledgement_1      1
     homesendsinvalidatemessage      1
     homesendsinvalidatemessage_1      1
     homesendsreplytoclient_exclusive      1
     homesendsreplytoclient_shared      1
     sharerinvalidatescache          1
     sharerinvalidatescache_1        1

   Number of wires:               2254
   Number of wire bits:           4670
   Number of public wires:        2084
   Number of public wire bits:    4404
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                667
     $and                           21
     $assert                         4
     $assume                         1
     $dff                           26
     $eq                            40
     $initstate                      1
     $logic_and                      1
     $logic_not                     21
     $mux                          531
     $not                            5
     $or                            12
     $reduce_bool                    4

2.13. Executing CHECK pass (checking for obvious problems).
Checking module Init...
Checking module clientreceivedexclusivegrant...
Checking module clientreceivedexclusivegrant_1...
Checking module clientreceivessharedgrant...
Checking module clientreceivessharedgrant_1...
Checking module clientrequestsexclusiveaccess...
Checking module clientrequestsexclusiveaccess_1...
Checking module clientrequestssharedaccess...
Checking module clientrequestssharedaccess_1...
Checking module homepicksnewrequest...
Checking module homepicksnewrequest_1...
Checking module homereceivesinvalidateacknowledgement...
Checking module homereceivesinvalidateacknowledgement_1...
Checking module homesendsinvalidatemessage...
Checking module homesendsinvalidatemessage_1...
Checking module homesendsreplytoclient_exclusive...
Checking module homesendsreplytoclient_shared...
Checking module sharerinvalidatescache...
Checking module sharerinvalidatescache_1...
Checking module system...
Found and reported 0 problems.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \system
Used module:     \Init
Used module:     \clientrequestssharedaccess
Used module:     \homereceivesinvalidateacknowledgement_1
Used module:     \sharerinvalidatescache
Used module:     \sharerinvalidatescache_1
Used module:     \clientreceivessharedgrant
Used module:     \clientreceivessharedgrant_1
Used module:     \clientreceivedexclusivegrant
Used module:     \clientreceivedexclusivegrant_1
Used module:     \homesendsreplytoclient_shared
Used module:     \homesendsreplytoclient_exclusive
Used module:     \clientrequestssharedaccess_1
Used module:     \clientrequestsexclusiveaccess
Used module:     \clientrequestsexclusiveaccess_1
Used module:     \homepicksnewrequest
Used module:     \homepicksnewrequest_1
Used module:     \homesendsinvalidatemessage
Used module:     \homesendsinvalidatemessage_1
Used module:     \homereceivesinvalidateacknowledgement

3.2. Analyzing design hierarchy..
Top module:  \system
Used module:     \Init
Used module:     \clientrequestssharedaccess
Used module:     \homereceivesinvalidateacknowledgement_1
Used module:     \sharerinvalidatescache
Used module:     \sharerinvalidatescache_1
Used module:     \clientreceivessharedgrant
Used module:     \clientreceivessharedgrant_1
Used module:     \clientreceivedexclusivegrant
Used module:     \clientreceivedexclusivegrant_1
Used module:     \homesendsreplytoclient_shared
Used module:     \homesendsreplytoclient_exclusive
Used module:     \clientrequestssharedaccess_1
Used module:     \clientrequestsexclusiveaccess
Used module:     \clientrequestsexclusiveaccess_1
Used module:     \homepicksnewrequest
Used module:     \homepicksnewrequest_1
Used module:     \homesendsinvalidatemessage
Used module:     \homesendsinvalidatemessage_1
Used module:     \homereceivesinvalidateacknowledgement
Removed 0 unused modules.
Module system directly or indirectly contains formal properties -> setting "keep" attribute.

4. Executing jny backend.

5. Executing RTLIL backend.
Output filename: ../model/design.il

End of script. Logfile hash: a83051feb9, CPU: user 0.35s system 0.02s, MEM: 24.71 MB peak
Yosys 0.16+63 (git sha1 11e75bc27, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 22% 2x hierarchy (0 sec), 19% 5x opt_clean (0 sec), ...
